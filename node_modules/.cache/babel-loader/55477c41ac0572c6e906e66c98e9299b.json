{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Sky as Sky$1 } from 'three-stdlib';\nimport { Vector3 } from 'three';\n\nfunction calcPosFromAngles(inclination, azimuth, vector = new Vector3()) {\n  const theta = Math.PI * (inclination - 0.5);\n  const phi = 2 * Math.PI * (azimuth - 0.5);\n  vector.x = Math.cos(phi);\n  vector.y = Math.sin(theta);\n  vector.z = Math.sin(phi);\n  return vector;\n}\n\nconst Sky = /*#__PURE__*/React.forwardRef(({\n  inclination = 0.6,\n  azimuth = 0.1,\n  distance = 1000,\n  mieCoefficient = 0.005,\n  mieDirectionalG = 0.8,\n  rayleigh = 0.5,\n  turbidity = 10,\n  sunPosition = calcPosFromAngles(inclination, azimuth),\n  ...props\n}, ref) => {\n  const scale = React.useMemo(() => new Vector3().setScalar(distance), [distance]);\n  const [sky] = React.useState(() => new Sky$1());\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: sky,\n    ref: ref,\n    \"material-uniforms-mieCoefficient-value\": mieCoefficient,\n    \"material-uniforms-mieDirectionalG-value\": mieDirectionalG,\n    \"material-uniforms-rayleigh-value\": rayleigh,\n    \"material-uniforms-sunPosition-value\": sunPosition,\n    \"material-uniforms-turbidity-value\": turbidity,\n    scale: scale\n  }, props));\n});\nexport { Sky, calcPosFromAngles };","map":{"version":3,"sources":["/Users/osamakhan/Desktop/dev/Apple-Animated-React-Clone/node_modules/@react-three/drei/core/Sky.js"],"names":["_extends","React","Sky","Sky$1","Vector3","calcPosFromAngles","inclination","azimuth","vector","theta","Math","PI","phi","x","cos","y","sin","z","forwardRef","distance","mieCoefficient","mieDirectionalG","rayleigh","turbidity","sunPosition","props","ref","scale","useMemo","setScalar","sky","useState","createElement","object"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAG,IAAIC,KAAhB,QAA6B,cAA7B;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAEA,SAASC,iBAAT,CAA2BC,WAA3B,EAAwCC,OAAxC,EAAiDC,MAAM,GAAG,IAAIJ,OAAJ,EAA1D,EAAyE;AACvE,QAAMK,KAAK,GAAGC,IAAI,CAACC,EAAL,IAAWL,WAAW,GAAG,GAAzB,CAAd;AACA,QAAMM,GAAG,GAAG,IAAIF,IAAI,CAACC,EAAT,IAAeJ,OAAO,GAAG,GAAzB,CAAZ;AACAC,EAAAA,MAAM,CAACK,CAAP,GAAWH,IAAI,CAACI,GAAL,CAASF,GAAT,CAAX;AACAJ,EAAAA,MAAM,CAACO,CAAP,GAAWL,IAAI,CAACM,GAAL,CAASP,KAAT,CAAX;AACAD,EAAAA,MAAM,CAACS,CAAP,GAAWP,IAAI,CAACM,GAAL,CAASJ,GAAT,CAAX;AACA,SAAOJ,MAAP;AACD;;AACD,MAAMN,GAAG,GAAG,aAAaD,KAAK,CAACiB,UAAN,CAAiB,CAAC;AACzCZ,EAAAA,WAAW,GAAG,GAD2B;AAEzCC,EAAAA,OAAO,GAAG,GAF+B;AAGzCY,EAAAA,QAAQ,GAAG,IAH8B;AAIzCC,EAAAA,cAAc,GAAG,KAJwB;AAKzCC,EAAAA,eAAe,GAAG,GALuB;AAMzCC,EAAAA,QAAQ,GAAG,GAN8B;AAOzCC,EAAAA,SAAS,GAAG,EAP6B;AAQzCC,EAAAA,WAAW,GAAGnB,iBAAiB,CAACC,WAAD,EAAcC,OAAd,CARU;AASzC,KAAGkB;AATsC,CAAD,EAUvCC,GAVuC,KAU/B;AACT,QAAMC,KAAK,GAAG1B,KAAK,CAAC2B,OAAN,CAAc,MAAM,IAAIxB,OAAJ,GAAcyB,SAAd,CAAwBV,QAAxB,CAApB,EAAuD,CAACA,QAAD,CAAvD,CAAd;AACA,QAAM,CAACW,GAAD,IAAQ7B,KAAK,CAAC8B,QAAN,CAAe,MAAM,IAAI5B,KAAJ,EAArB,CAAd;AACA,SAAO,aAAaF,KAAK,CAAC+B,aAAN,CAAoB,WAApB,EAAiChC,QAAQ,CAAC;AAC5DiC,IAAAA,MAAM,EAAEH,GADoD;AAE5DJ,IAAAA,GAAG,EAAEA,GAFuD;AAG5D,8CAA0CN,cAHkB;AAI5D,+CAA2CC,eAJiB;AAK5D,wCAAoCC,QALwB;AAM5D,2CAAuCE,WANqB;AAO5D,yCAAqCD,SAPuB;AAQ5DI,IAAAA,KAAK,EAAEA;AARqD,GAAD,EAS1DF,KAT0D,CAAzC,CAApB;AAUD,CAvBwB,CAAzB;AAyBA,SAASvB,GAAT,EAAcG,iBAAd","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Sky as Sky$1 } from 'three-stdlib';\nimport { Vector3 } from 'three';\n\nfunction calcPosFromAngles(inclination, azimuth, vector = new Vector3()) {\n  const theta = Math.PI * (inclination - 0.5);\n  const phi = 2 * Math.PI * (azimuth - 0.5);\n  vector.x = Math.cos(phi);\n  vector.y = Math.sin(theta);\n  vector.z = Math.sin(phi);\n  return vector;\n}\nconst Sky = /*#__PURE__*/React.forwardRef(({\n  inclination = 0.6,\n  azimuth = 0.1,\n  distance = 1000,\n  mieCoefficient = 0.005,\n  mieDirectionalG = 0.8,\n  rayleigh = 0.5,\n  turbidity = 10,\n  sunPosition = calcPosFromAngles(inclination, azimuth),\n  ...props\n}, ref) => {\n  const scale = React.useMemo(() => new Vector3().setScalar(distance), [distance]);\n  const [sky] = React.useState(() => new Sky$1());\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: sky,\n    ref: ref,\n    \"material-uniforms-mieCoefficient-value\": mieCoefficient,\n    \"material-uniforms-mieDirectionalG-value\": mieDirectionalG,\n    \"material-uniforms-rayleigh-value\": rayleigh,\n    \"material-uniforms-sunPosition-value\": sunPosition,\n    \"material-uniforms-turbidity-value\": turbidity,\n    scale: scale\n  }, props));\n});\n\nexport { Sky, calcPosFromAngles };\n"]},"metadata":{},"sourceType":"module"}