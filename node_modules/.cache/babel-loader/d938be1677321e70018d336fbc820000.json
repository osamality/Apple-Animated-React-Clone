{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { WebGLRenderTarget, HalfFloatType, RGBAFormat } from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { EffectComposer, RenderPass, ShaderPass, GammaCorrectionShader } from 'three-stdlib';\nimport mergeRefs from 'react-merge-refs';\n\nconst isWebGL2Available = () => {\n  try {\n    var canvas = document.createElement('canvas');\n    return !!(window.WebGL2RenderingContext && canvas.getContext('webgl2'));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst Effects = /*#__PURE__*/React.forwardRef(({\n  children,\n  multisamping = 8,\n  renderIndex = 1,\n  disableRender,\n  disableGamma,\n  disableRenderPass,\n  depthBuffer = true,\n  stencilBuffer = false,\n  anisotropy = 1,\n  encoding,\n  type,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    EffectComposer,\n    RenderPass,\n    ShaderPass\n  }), []);\n  const composer = React.useRef();\n  const {\n    scene,\n    camera,\n    gl,\n    size,\n    viewport\n  } = useThree();\n  const [target] = React.useState(() => {\n    const t = new WebGLRenderTarget(size.width, size.height, {\n      type: type || HalfFloatType,\n      format: RGBAFormat,\n      encoding: encoding || gl.outputEncoding,\n      depthBuffer,\n      stencilBuffer,\n      anisotropy\n    });\n    t.samples = multisamping;\n    return t;\n  });\n  React.useEffect(() => {\n    var _composer$current, _composer$current2;\n\n    (_composer$current = composer.current) == null ? void 0 : _composer$current.setSize(size.width, size.height);\n    (_composer$current2 = composer.current) == null ? void 0 : _composer$current2.setPixelRatio(viewport.dpr);\n  }, [gl, size, viewport.dpr]);\n  useFrame(() => {\n    var _composer$current3;\n\n    if (!disableRender) (_composer$current3 = composer.current) == null ? void 0 : _composer$current3.render();\n  }, renderIndex);\n  const passes = [];\n  if (!disableRenderPass) passes.push( /*#__PURE__*/React.createElement(\"renderPass\", {\n    key: \"renderpass\",\n    attach: `passes-${passes.length}`,\n    args: [scene, camera]\n  }));\n  if (!disableGamma) passes.push( /*#__PURE__*/React.createElement(\"shaderPass\", {\n    attach: `passes-${passes.length}`,\n    key: \"gammapass\",\n    args: [GammaCorrectionShader]\n  }));\n  React.Children.forEach(children, el => {\n    el && passes.push( /*#__PURE__*/React.cloneElement(el, {\n      key: passes.length,\n      attach: `passes-${passes.length}`\n    }));\n  });\n  return /*#__PURE__*/React.createElement(\"effectComposer\", _extends({\n    ref: mergeRefs([ref, composer]),\n    args: [gl, target]\n  }, props), passes);\n});\nexport { Effects, isWebGL2Available };","map":{"version":3,"sources":["/Users/osamakhan/Desktop/dev/Apple-Animated-React-Clone/node_modules/@react-three/drei/core/Effects.js"],"names":["_extends","React","WebGLRenderTarget","HalfFloatType","RGBAFormat","extend","useThree","useFrame","EffectComposer","RenderPass","ShaderPass","GammaCorrectionShader","mergeRefs","isWebGL2Available","canvas","document","createElement","window","WebGL2RenderingContext","getContext","e","Effects","forwardRef","children","multisamping","renderIndex","disableRender","disableGamma","disableRenderPass","depthBuffer","stencilBuffer","anisotropy","encoding","type","props","ref","useMemo","composer","useRef","scene","camera","gl","size","viewport","target","useState","t","width","height","format","outputEncoding","samples","useEffect","_composer$current","_composer$current2","current","setSize","setPixelRatio","dpr","_composer$current3","render","passes","push","key","attach","length","args","Children","forEach","el","cloneElement"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,iBAAT,EAA4BC,aAA5B,EAA2CC,UAA3C,QAA6D,OAA7D;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,QAA3B,QAA2C,oBAA3C;AACA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,UAArC,EAAiDC,qBAAjD,QAA8E,cAA9E;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,MAAI;AACF,QAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACA,WAAO,CAAC,EAAEC,MAAM,CAACC,sBAAP,IAAiCJ,MAAM,CAACK,UAAP,CAAkB,QAAlB,CAAnC,CAAR;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACV,WAAO,KAAP;AACD;AACF,CAPD;;AAQA,MAAMC,OAAO,GAAG,aAAapB,KAAK,CAACqB,UAAN,CAAiB,CAAC;AAC7CC,EAAAA,QAD6C;AAE7CC,EAAAA,YAAY,GAAG,CAF8B;AAG7CC,EAAAA,WAAW,GAAG,CAH+B;AAI7CC,EAAAA,aAJ6C;AAK7CC,EAAAA,YAL6C;AAM7CC,EAAAA,iBAN6C;AAO7CC,EAAAA,WAAW,GAAG,IAP+B;AAQ7CC,EAAAA,aAAa,GAAG,KAR6B;AAS7CC,EAAAA,UAAU,GAAG,CATgC;AAU7CC,EAAAA,QAV6C;AAW7CC,EAAAA,IAX6C;AAY7C,KAAGC;AAZ0C,CAAD,EAa3CC,GAb2C,KAanC;AACTlC,EAAAA,KAAK,CAACmC,OAAN,CAAc,MAAM/B,MAAM,CAAC;AACzBG,IAAAA,cADyB;AAEzBC,IAAAA,UAFyB;AAGzBC,IAAAA;AAHyB,GAAD,CAA1B,EAII,EAJJ;AAKA,QAAM2B,QAAQ,GAAGpC,KAAK,CAACqC,MAAN,EAAjB;AACA,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,EAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA;AALI,MAMFrC,QAAQ,EANZ;AAOA,QAAM,CAACsC,MAAD,IAAW3C,KAAK,CAAC4C,QAAN,CAAe,MAAM;AACpC,UAAMC,CAAC,GAAG,IAAI5C,iBAAJ,CAAsBwC,IAAI,CAACK,KAA3B,EAAkCL,IAAI,CAACM,MAAvC,EAA+C;AACvDf,MAAAA,IAAI,EAAEA,IAAI,IAAI9B,aADyC;AAEvD8C,MAAAA,MAAM,EAAE7C,UAF+C;AAGvD4B,MAAAA,QAAQ,EAAEA,QAAQ,IAAIS,EAAE,CAACS,cAH8B;AAIvDrB,MAAAA,WAJuD;AAKvDC,MAAAA,aALuD;AAMvDC,MAAAA;AANuD,KAA/C,CAAV;AAQAe,IAAAA,CAAC,CAACK,OAAF,GAAY3B,YAAZ;AACA,WAAOsB,CAAP;AACD,GAXgB,CAAjB;AAYA7C,EAAAA,KAAK,CAACmD,SAAN,CAAgB,MAAM;AACpB,QAAIC,iBAAJ,EAAuBC,kBAAvB;;AAEA,KAACD,iBAAiB,GAAGhB,QAAQ,CAACkB,OAA9B,KAA0C,IAA1C,GAAiD,KAAK,CAAtD,GAA0DF,iBAAiB,CAACG,OAAlB,CAA0Bd,IAAI,CAACK,KAA/B,EAAsCL,IAAI,CAACM,MAA3C,CAA1D;AACA,KAACM,kBAAkB,GAAGjB,QAAQ,CAACkB,OAA/B,KAA2C,IAA3C,GAAkD,KAAK,CAAvD,GAA2DD,kBAAkB,CAACG,aAAnB,CAAiCd,QAAQ,CAACe,GAA1C,CAA3D;AACD,GALD,EAKG,CAACjB,EAAD,EAAKC,IAAL,EAAWC,QAAQ,CAACe,GAApB,CALH;AAMAnD,EAAAA,QAAQ,CAAC,MAAM;AACb,QAAIoD,kBAAJ;;AAEA,QAAI,CAACjC,aAAL,EAAoB,CAACiC,kBAAkB,GAAGtB,QAAQ,CAACkB,OAA/B,KAA2C,IAA3C,GAAkD,KAAK,CAAvD,GAA2DI,kBAAkB,CAACC,MAAnB,EAA3D;AACrB,GAJO,EAILnC,WAJK,CAAR;AAKA,QAAMoC,MAAM,GAAG,EAAf;AACA,MAAI,CAACjC,iBAAL,EAAwBiC,MAAM,CAACC,IAAP,EAAa,aAAa7D,KAAK,CAACe,aAAN,CAAoB,YAApB,EAAkC;AAClF+C,IAAAA,GAAG,EAAE,YAD6E;AAElFC,IAAAA,MAAM,EAAG,UAASH,MAAM,CAACI,MAAO,EAFkD;AAGlFC,IAAAA,IAAI,EAAE,CAAC3B,KAAD,EAAQC,MAAR;AAH4E,GAAlC,CAA1B;AAKxB,MAAI,CAACb,YAAL,EAAmBkC,MAAM,CAACC,IAAP,EAAa,aAAa7D,KAAK,CAACe,aAAN,CAAoB,YAApB,EAAkC;AAC7EgD,IAAAA,MAAM,EAAG,UAASH,MAAM,CAACI,MAAO,EAD6C;AAE7EF,IAAAA,GAAG,EAAE,WAFwE;AAG7EG,IAAAA,IAAI,EAAE,CAACvD,qBAAD;AAHuE,GAAlC,CAA1B;AAKnBV,EAAAA,KAAK,CAACkE,QAAN,CAAeC,OAAf,CAAuB7C,QAAvB,EAAiC8C,EAAE,IAAI;AACrCA,IAAAA,EAAE,IAAIR,MAAM,CAACC,IAAP,EAAa,aAAa7D,KAAK,CAACqE,YAAN,CAAmBD,EAAnB,EAAuB;AACrDN,MAAAA,GAAG,EAAEF,MAAM,CAACI,MADyC;AAErDD,MAAAA,MAAM,EAAG,UAASH,MAAM,CAACI,MAAO;AAFqB,KAAvB,CAA1B,CAAN;AAID,GALD;AAMA,SAAO,aAAahE,KAAK,CAACe,aAAN,CAAoB,gBAApB,EAAsChB,QAAQ,CAAC;AACjEmC,IAAAA,GAAG,EAAEvB,SAAS,CAAC,CAACuB,GAAD,EAAME,QAAN,CAAD,CADmD;AAEjE6B,IAAAA,IAAI,EAAE,CAACzB,EAAD,EAAKG,MAAL;AAF2D,GAAD,EAG/DV,KAH+D,CAA9C,EAGT2B,MAHS,CAApB;AAID,CAvE4B,CAA7B;AAyEA,SAASxC,OAAT,EAAkBR,iBAAlB","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { WebGLRenderTarget, HalfFloatType, RGBAFormat } from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { EffectComposer, RenderPass, ShaderPass, GammaCorrectionShader } from 'three-stdlib';\nimport mergeRefs from 'react-merge-refs';\n\nconst isWebGL2Available = () => {\n  try {\n    var canvas = document.createElement('canvas');\n    return !!(window.WebGL2RenderingContext && canvas.getContext('webgl2'));\n  } catch (e) {\n    return false;\n  }\n};\nconst Effects = /*#__PURE__*/React.forwardRef(({\n  children,\n  multisamping = 8,\n  renderIndex = 1,\n  disableRender,\n  disableGamma,\n  disableRenderPass,\n  depthBuffer = true,\n  stencilBuffer = false,\n  anisotropy = 1,\n  encoding,\n  type,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    EffectComposer,\n    RenderPass,\n    ShaderPass\n  }), []);\n  const composer = React.useRef();\n  const {\n    scene,\n    camera,\n    gl,\n    size,\n    viewport\n  } = useThree();\n  const [target] = React.useState(() => {\n    const t = new WebGLRenderTarget(size.width, size.height, {\n      type: type || HalfFloatType,\n      format: RGBAFormat,\n      encoding: encoding || gl.outputEncoding,\n      depthBuffer,\n      stencilBuffer,\n      anisotropy\n    });\n    t.samples = multisamping;\n    return t;\n  });\n  React.useEffect(() => {\n    var _composer$current, _composer$current2;\n\n    (_composer$current = composer.current) == null ? void 0 : _composer$current.setSize(size.width, size.height);\n    (_composer$current2 = composer.current) == null ? void 0 : _composer$current2.setPixelRatio(viewport.dpr);\n  }, [gl, size, viewport.dpr]);\n  useFrame(() => {\n    var _composer$current3;\n\n    if (!disableRender) (_composer$current3 = composer.current) == null ? void 0 : _composer$current3.render();\n  }, renderIndex);\n  const passes = [];\n  if (!disableRenderPass) passes.push( /*#__PURE__*/React.createElement(\"renderPass\", {\n    key: \"renderpass\",\n    attach: `passes-${passes.length}`,\n    args: [scene, camera]\n  }));\n  if (!disableGamma) passes.push( /*#__PURE__*/React.createElement(\"shaderPass\", {\n    attach: `passes-${passes.length}`,\n    key: \"gammapass\",\n    args: [GammaCorrectionShader]\n  }));\n  React.Children.forEach(children, el => {\n    el && passes.push( /*#__PURE__*/React.cloneElement(el, {\n      key: passes.length,\n      attach: `passes-${passes.length}`\n    }));\n  });\n  return /*#__PURE__*/React.createElement(\"effectComposer\", _extends({\n    ref: mergeRefs([ref, composer]),\n    args: [gl, target]\n  }, props), passes);\n});\n\nexport { Effects, isWebGL2Available };\n"]},"metadata":{},"sourceType":"module"}