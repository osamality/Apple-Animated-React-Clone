{"ast":null,"code":"import * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { AxisArrow } from './AxisArrow.js';\nimport { PlaneSlider } from './PlaneSlider.js';\nimport { AxisRotator } from './AxisRotator.js';\nimport { context } from './context.js';\nconst tV0 = new THREE.Vector3();\nconst tV1 = new THREE.Vector3();\nconst tV2 = new THREE.Vector3();\n\nconst getPoint2 = (point3, camera, size) => {\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  camera.updateMatrixWorld(false);\n  const vector = point3.project(camera);\n  vector.x = vector.x * widthHalf + widthHalf;\n  vector.y = -(vector.y * heightHalf) + heightHalf;\n  return vector;\n};\n\nconst getPoint3 = (point2, camera, size, zValue = 1) => {\n  const vector = tV0.set(point2.x / size.width * 2 - 1, -(point2.y / size.height) * 2 + 1, zValue);\n  vector.unproject(camera);\n  return vector;\n};\n\nconst calculateScaleFactor = (point3, radiusPx, camera, size) => {\n  const point2 = getPoint2(tV2.copy(point3), camera, size);\n  let scale = 0;\n\n  for (let i = 0; i < 2; ++i) {\n    const point2off = tV1.copy(point2).setComponent(i, point2.getComponent(i) + radiusPx);\n    const point3off = getPoint3(point2off, camera, size, point2off.z);\n    scale = Math.max(scale, point3.distanceTo(point3off));\n  }\n\n  return scale;\n};\n\nconst mL0 = new THREE.Matrix4();\nconst mW0 = new THREE.Matrix4();\nconst mP = new THREE.Matrix4();\nconst mPInv = new THREE.Matrix4();\nconst mW = new THREE.Matrix4();\nconst mL = new THREE.Matrix4();\nconst mL0Inv = new THREE.Matrix4();\nconst mdL = new THREE.Matrix4();\nconst bb = new THREE.Box3();\nconst bbObj = new THREE.Box3();\nconst vCenter = new THREE.Vector3();\nconst vSize = new THREE.Vector3();\nconst vAnchorOffset = new THREE.Vector3();\nconst vPosition = new THREE.Vector3();\nconst xDir = new THREE.Vector3(1, 0, 0);\nconst yDir = new THREE.Vector3(0, 1, 0);\nconst zDir = new THREE.Vector3(0, 0, 1);\nconst PivotControls = /*#__PURE__*/React.forwardRef(({\n  matrix,\n  onDragStart,\n  onDrag,\n  onDragEnd,\n  autoTransform = true,\n  anchor,\n  disableAxes = false,\n  disableSliders = false,\n  disableRotations = false,\n  activeAxes = [true, true, true],\n  offset = [0, 0, 0],\n  rotation = [0, 0, 0],\n  scale = 1,\n  lineWidth = 4,\n  fixed = false,\n  translationLimits,\n  rotationLimits,\n  depthTest = true,\n  axisColors = ['#ff2060', '#20df80', '#2080ff'],\n  hoveredColor = '#ffff40',\n  annotations = false,\n  annotationsClass,\n  opacity = 1,\n  visible = true,\n  userData,\n  children\n}, fRef) => {\n  const invalidate = useThree(state => state.invalidate);\n  const parentRef = React.useRef(null);\n  const ref = React.useRef(null);\n  const gizmoRef = React.useRef(null);\n  const childrenRef = React.useRef(null);\n  const translation = React.useRef([0, 0, 0]);\n  React.useLayoutEffect(() => {\n    if (!anchor) return;\n    childrenRef.current.updateWorldMatrix(true, true);\n    mPInv.copy(childrenRef.current.matrixWorld).invert();\n    bb.makeEmpty();\n    childrenRef.current.traverse(obj => {\n      if (!obj.geometry) return;\n      if (!obj.geometry.boundingBox) obj.geometry.computeBoundingBox();\n      mL.copy(obj.matrixWorld).premultiply(mPInv);\n      bbObj.copy(obj.geometry.boundingBox);\n      bbObj.applyMatrix4(mL);\n      bb.union(bbObj);\n    });\n    vCenter.copy(bb.max).add(bb.min).multiplyScalar(0.5);\n    vSize.copy(bb.max).sub(bb.min).multiplyScalar(0.5);\n    vAnchorOffset.copy(vSize).multiply(new THREE.Vector3(...anchor)).add(vCenter);\n    vPosition.set(...offset).add(vAnchorOffset);\n    gizmoRef.current.position.copy(vPosition);\n    invalidate();\n  });\n  const config = React.useMemo(() => ({\n    onDragStart: props => {\n      mL0.copy(ref.current.matrix);\n      mW0.copy(ref.current.matrixWorld);\n      onDragStart && onDragStart(props);\n      invalidate();\n    },\n    onDrag: mdW => {\n      mP.copy(parentRef.current.matrixWorld);\n      mPInv.copy(mP).invert(); // After applying the delta\n\n      mW.copy(mW0).premultiply(mdW);\n      mL.copy(mW).premultiply(mPInv);\n      mL0Inv.copy(mL0).invert();\n      mdL.copy(mL).multiply(mL0Inv);\n      if (autoTransform) ref.current.matrix.copy(mL);\n      onDrag && onDrag(mL, mdL, mW, mdW);\n      invalidate();\n    },\n    onDragEnd: () => {\n      if (onDragEnd) onDragEnd();\n      invalidate();\n    },\n    translation,\n    translationLimits,\n    rotationLimits,\n    axisColors,\n    hoveredColor,\n    opacity,\n    scale,\n    lineWidth,\n    fixed,\n    depthTest,\n    userData,\n    annotations,\n    annotationsClass\n  }), [onDragStart, onDrag, onDragEnd, translation, translationLimits, rotationLimits, depthTest, scale, lineWidth, fixed, ...axisColors, hoveredColor, opacity, userData, autoTransform, annotations, annotationsClass]);\n  const vec = new THREE.Vector3();\n  useFrame(state => {\n    if (fixed) {\n      const sf = calculateScaleFactor(gizmoRef.current.getWorldPosition(vec), scale, state.camera, state.size);\n\n      if (gizmoRef.current) {\n        var _gizmoRef$current, _gizmoRef$current2, _gizmoRef$current3;\n\n        if (((_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.scale.x) !== sf || ((_gizmoRef$current2 = gizmoRef.current) == null ? void 0 : _gizmoRef$current2.scale.y) !== sf || ((_gizmoRef$current3 = gizmoRef.current) == null ? void 0 : _gizmoRef$current3.scale.z) !== sf) {\n          gizmoRef.current.scale.setScalar(sf);\n          state.invalidate();\n        }\n      }\n    }\n  });\n  React.useImperativeHandle(fRef, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: config\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: parentRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref,\n    matrix: matrix,\n    matrixAutoUpdate: false\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    visible: visible,\n    ref: gizmoRef,\n    position: offset,\n    rotation: rotation\n  }, !disableAxes && activeAxes[0] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 0,\n    direction: xDir\n  }), !disableAxes && activeAxes[1] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 1,\n    direction: yDir\n  }), !disableAxes && activeAxes[2] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 2,\n    direction: zDir\n  }), !disableSliders && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableSliders && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableSliders && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  }), !disableRotations && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableRotations && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableRotations && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  })), /*#__PURE__*/React.createElement(\"group\", {\n    ref: childrenRef\n  }, children))));\n});\nexport { PivotControls, calculateScaleFactor };","map":{"version":3,"sources":["/Users/osamakhan/Desktop/Apple-Website-Clone-React-master/node_modules/@react-three/drei/web/pivotControls/index.js"],"names":["THREE","React","useThree","useFrame","AxisArrow","PlaneSlider","AxisRotator","context","tV0","Vector3","tV1","tV2","getPoint2","point3","camera","size","widthHalf","width","heightHalf","height","updateMatrixWorld","vector","project","x","y","getPoint3","point2","zValue","set","unproject","calculateScaleFactor","radiusPx","copy","scale","i","point2off","setComponent","getComponent","point3off","z","Math","max","distanceTo","mL0","Matrix4","mW0","mP","mPInv","mW","mL","mL0Inv","mdL","bb","Box3","bbObj","vCenter","vSize","vAnchorOffset","vPosition","xDir","yDir","zDir","PivotControls","forwardRef","matrix","onDragStart","onDrag","onDragEnd","autoTransform","anchor","disableAxes","disableSliders","disableRotations","activeAxes","offset","rotation","lineWidth","fixed","translationLimits","rotationLimits","depthTest","axisColors","hoveredColor","annotations","annotationsClass","opacity","visible","userData","children","fRef","invalidate","state","parentRef","useRef","ref","gizmoRef","childrenRef","translation","useLayoutEffect","current","updateWorldMatrix","matrixWorld","invert","makeEmpty","traverse","obj","geometry","boundingBox","computeBoundingBox","premultiply","applyMatrix4","union","add","min","multiplyScalar","sub","multiply","position","config","useMemo","props","mdW","vec","sf","getWorldPosition","_gizmoRef$current","_gizmoRef$current2","_gizmoRef$current3","setScalar","useImperativeHandle","createElement","Provider","value","matrixAutoUpdate","axis","direction","dir1","dir2"],"mappings":"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","sourcesContent":["import * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { AxisArrow } from './AxisArrow.js';\nimport { PlaneSlider } from './PlaneSlider.js';\nimport { AxisRotator } from './AxisRotator.js';\nimport { context } from './context.js';\n\nconst tV0 = new THREE.Vector3();\nconst tV1 = new THREE.Vector3();\nconst tV2 = new THREE.Vector3();\n\nconst getPoint2 = (point3, camera, size) => {\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  camera.updateMatrixWorld(false);\n  const vector = point3.project(camera);\n  vector.x = vector.x * widthHalf + widthHalf;\n  vector.y = -(vector.y * heightHalf) + heightHalf;\n  return vector;\n};\n\nconst getPoint3 = (point2, camera, size, zValue = 1) => {\n  const vector = tV0.set(point2.x / size.width * 2 - 1, -(point2.y / size.height) * 2 + 1, zValue);\n  vector.unproject(camera);\n  return vector;\n};\n\nconst calculateScaleFactor = (point3, radiusPx, camera, size) => {\n  const point2 = getPoint2(tV2.copy(point3), camera, size);\n  let scale = 0;\n\n  for (let i = 0; i < 2; ++i) {\n    const point2off = tV1.copy(point2).setComponent(i, point2.getComponent(i) + radiusPx);\n    const point3off = getPoint3(point2off, camera, size, point2off.z);\n    scale = Math.max(scale, point3.distanceTo(point3off));\n  }\n\n  return scale;\n};\nconst mL0 = new THREE.Matrix4();\nconst mW0 = new THREE.Matrix4();\nconst mP = new THREE.Matrix4();\nconst mPInv = new THREE.Matrix4();\nconst mW = new THREE.Matrix4();\nconst mL = new THREE.Matrix4();\nconst mL0Inv = new THREE.Matrix4();\nconst mdL = new THREE.Matrix4();\nconst bb = new THREE.Box3();\nconst bbObj = new THREE.Box3();\nconst vCenter = new THREE.Vector3();\nconst vSize = new THREE.Vector3();\nconst vAnchorOffset = new THREE.Vector3();\nconst vPosition = new THREE.Vector3();\nconst xDir = new THREE.Vector3(1, 0, 0);\nconst yDir = new THREE.Vector3(0, 1, 0);\nconst zDir = new THREE.Vector3(0, 0, 1);\nconst PivotControls = /*#__PURE__*/React.forwardRef(({\n  matrix,\n  onDragStart,\n  onDrag,\n  onDragEnd,\n  autoTransform = true,\n  anchor,\n  disableAxes = false,\n  disableSliders = false,\n  disableRotations = false,\n  activeAxes = [true, true, true],\n  offset = [0, 0, 0],\n  rotation = [0, 0, 0],\n  scale = 1,\n  lineWidth = 4,\n  fixed = false,\n  translationLimits,\n  rotationLimits,\n  depthTest = true,\n  axisColors = ['#ff2060', '#20df80', '#2080ff'],\n  hoveredColor = '#ffff40',\n  annotations = false,\n  annotationsClass,\n  opacity = 1,\n  visible = true,\n  userData,\n  children\n}, fRef) => {\n  const invalidate = useThree(state => state.invalidate);\n  const parentRef = React.useRef(null);\n  const ref = React.useRef(null);\n  const gizmoRef = React.useRef(null);\n  const childrenRef = React.useRef(null);\n  const translation = React.useRef([0, 0, 0]);\n  React.useLayoutEffect(() => {\n    if (!anchor) return;\n    childrenRef.current.updateWorldMatrix(true, true);\n    mPInv.copy(childrenRef.current.matrixWorld).invert();\n    bb.makeEmpty();\n    childrenRef.current.traverse(obj => {\n      if (!obj.geometry) return;\n      if (!obj.geometry.boundingBox) obj.geometry.computeBoundingBox();\n      mL.copy(obj.matrixWorld).premultiply(mPInv);\n      bbObj.copy(obj.geometry.boundingBox);\n      bbObj.applyMatrix4(mL);\n      bb.union(bbObj);\n    });\n    vCenter.copy(bb.max).add(bb.min).multiplyScalar(0.5);\n    vSize.copy(bb.max).sub(bb.min).multiplyScalar(0.5);\n    vAnchorOffset.copy(vSize).multiply(new THREE.Vector3(...anchor)).add(vCenter);\n    vPosition.set(...offset).add(vAnchorOffset);\n    gizmoRef.current.position.copy(vPosition);\n    invalidate();\n  });\n  const config = React.useMemo(() => ({\n    onDragStart: props => {\n      mL0.copy(ref.current.matrix);\n      mW0.copy(ref.current.matrixWorld);\n      onDragStart && onDragStart(props);\n      invalidate();\n    },\n    onDrag: mdW => {\n      mP.copy(parentRef.current.matrixWorld);\n      mPInv.copy(mP).invert(); // After applying the delta\n\n      mW.copy(mW0).premultiply(mdW);\n      mL.copy(mW).premultiply(mPInv);\n      mL0Inv.copy(mL0).invert();\n      mdL.copy(mL).multiply(mL0Inv);\n      if (autoTransform) ref.current.matrix.copy(mL);\n      onDrag && onDrag(mL, mdL, mW, mdW);\n      invalidate();\n    },\n    onDragEnd: () => {\n      if (onDragEnd) onDragEnd();\n      invalidate();\n    },\n    translation,\n    translationLimits,\n    rotationLimits,\n    axisColors,\n    hoveredColor,\n    opacity,\n    scale,\n    lineWidth,\n    fixed,\n    depthTest,\n    userData,\n    annotations,\n    annotationsClass\n  }), [onDragStart, onDrag, onDragEnd, translation, translationLimits, rotationLimits, depthTest, scale, lineWidth, fixed, ...axisColors, hoveredColor, opacity, userData, autoTransform, annotations, annotationsClass]);\n  const vec = new THREE.Vector3();\n  useFrame(state => {\n    if (fixed) {\n      const sf = calculateScaleFactor(gizmoRef.current.getWorldPosition(vec), scale, state.camera, state.size);\n\n      if (gizmoRef.current) {\n        var _gizmoRef$current, _gizmoRef$current2, _gizmoRef$current3;\n\n        if (((_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.scale.x) !== sf || ((_gizmoRef$current2 = gizmoRef.current) == null ? void 0 : _gizmoRef$current2.scale.y) !== sf || ((_gizmoRef$current3 = gizmoRef.current) == null ? void 0 : _gizmoRef$current3.scale.z) !== sf) {\n          gizmoRef.current.scale.setScalar(sf);\n          state.invalidate();\n        }\n      }\n    }\n  });\n  React.useImperativeHandle(fRef, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: config\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: parentRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref,\n    matrix: matrix,\n    matrixAutoUpdate: false\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    visible: visible,\n    ref: gizmoRef,\n    position: offset,\n    rotation: rotation\n  }, !disableAxes && activeAxes[0] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 0,\n    direction: xDir\n  }), !disableAxes && activeAxes[1] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 1,\n    direction: yDir\n  }), !disableAxes && activeAxes[2] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 2,\n    direction: zDir\n  }), !disableSliders && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableSliders && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableSliders && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  }), !disableRotations && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableRotations && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableRotations && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  })), /*#__PURE__*/React.createElement(\"group\", {\n    ref: childrenRef\n  }, children))));\n});\n\nexport { PivotControls, calculateScaleFactor };\n"]},"metadata":{},"sourceType":"module"}