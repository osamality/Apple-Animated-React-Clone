{"ast":null,"code":"import Node from './Node.js';\n\nclass TempNode extends Node {\n  constructor(type) {\n    super(type);\n  }\n\n  build(builder, output) {\n    const type = builder.getVectorType(this.getNodeType(builder, output));\n    const nodeData = builder.getDataFromNode(this);\n\n    if (builder.context.temp !== false && type !== 'void ' && output !== 'void' && nodeData.dependenciesCount > 1) {\n      if (nodeData.snippet === undefined) {\n        const snippet = super.build(builder, type);\n        const nodeVar = builder.getVarFromNode(this, type);\n        const propertyName = builder.getPropertyName(nodeVar);\n        builder.addFlowCode(`${propertyName} = ${snippet}`);\n        nodeData.snippet = snippet;\n        nodeData.propertyName = propertyName;\n      }\n\n      return builder.format(nodeData.propertyName, type, output);\n    }\n\n    return super.build(builder, output);\n  }\n\n}\n\nexport default TempNode;","map":{"version":3,"sources":["/Users/osamakhan/Desktop/dev/Apple-Animated-React-Clone/node_modules/three-stdlib/nodes/core/TempNode.js"],"names":["Node","TempNode","constructor","type","build","builder","output","getVectorType","getNodeType","nodeData","getDataFromNode","context","temp","dependenciesCount","snippet","undefined","nodeVar","getVarFromNode","propertyName","getPropertyName","addFlowCode","format"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,QAAN,SAAuBD,IAAvB,CAA4B;AAC1BE,EAAAA,WAAW,CAACC,IAAD,EAAO;AAChB,UAAMA,IAAN;AACD;;AAEDC,EAAAA,KAAK,CAACC,OAAD,EAAUC,MAAV,EAAkB;AACrB,UAAMH,IAAI,GAAGE,OAAO,CAACE,aAAR,CAAsB,KAAKC,WAAL,CAAiBH,OAAjB,EAA0BC,MAA1B,CAAtB,CAAb;AACA,UAAMG,QAAQ,GAAGJ,OAAO,CAACK,eAAR,CAAwB,IAAxB,CAAjB;;AAEA,QAAIL,OAAO,CAACM,OAAR,CAAgBC,IAAhB,KAAyB,KAAzB,IAAkCT,IAAI,KAAK,OAA3C,IAAsDG,MAAM,KAAK,MAAjE,IAA2EG,QAAQ,CAACI,iBAAT,GAA6B,CAA5G,EAA+G;AAC7G,UAAIJ,QAAQ,CAACK,OAAT,KAAqBC,SAAzB,EAAoC;AAClC,cAAMD,OAAO,GAAG,MAAMV,KAAN,CAAYC,OAAZ,EAAqBF,IAArB,CAAhB;AACA,cAAMa,OAAO,GAAGX,OAAO,CAACY,cAAR,CAAuB,IAAvB,EAA6Bd,IAA7B,CAAhB;AACA,cAAMe,YAAY,GAAGb,OAAO,CAACc,eAAR,CAAwBH,OAAxB,CAArB;AACAX,QAAAA,OAAO,CAACe,WAAR,CAAqB,GAAEF,YAAa,MAAKJ,OAAQ,EAAjD;AACAL,QAAAA,QAAQ,CAACK,OAAT,GAAmBA,OAAnB;AACAL,QAAAA,QAAQ,CAACS,YAAT,GAAwBA,YAAxB;AACD;;AAED,aAAOb,OAAO,CAACgB,MAAR,CAAeZ,QAAQ,CAACS,YAAxB,EAAsCf,IAAtC,EAA4CG,MAA5C,CAAP;AACD;;AAED,WAAO,MAAMF,KAAN,CAAYC,OAAZ,EAAqBC,MAArB,CAAP;AACD;;AAvByB;;AA2B5B,eAAeL,QAAf","sourcesContent":["import Node from './Node.js';\n\nclass TempNode extends Node {\n  constructor(type) {\n    super(type);\n  }\n\n  build(builder, output) {\n    const type = builder.getVectorType(this.getNodeType(builder, output));\n    const nodeData = builder.getDataFromNode(this);\n\n    if (builder.context.temp !== false && type !== 'void ' && output !== 'void' && nodeData.dependenciesCount > 1) {\n      if (nodeData.snippet === undefined) {\n        const snippet = super.build(builder, type);\n        const nodeVar = builder.getVarFromNode(this, type);\n        const propertyName = builder.getPropertyName(nodeVar);\n        builder.addFlowCode(`${propertyName} = ${snippet}`);\n        nodeData.snippet = snippet;\n        nodeData.propertyName = propertyName;\n      }\n\n      return builder.format(nodeData.propertyName, type, output);\n    }\n\n    return super.build(builder, output);\n  }\n\n}\n\nexport default TempNode;\n"]},"metadata":{},"sourceType":"module"}