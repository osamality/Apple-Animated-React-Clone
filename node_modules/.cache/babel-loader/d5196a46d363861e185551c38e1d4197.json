{"ast":null,"code":"import Node from '../core/Node.js';\nimport PropertyNode from '../core/PropertyNode.js';\nimport ContextNode from '../core/ContextNode.js';\n\nclass CondNode extends Node {\n  constructor(node, ifNode, elseNode) {\n    super();\n    this.node = node;\n    this.ifNode = ifNode;\n    this.elseNode = elseNode;\n  }\n\n  getNodeType(builder) {\n    const ifType = this.ifNode.getNodeType(builder);\n    const elseType = this.elseNode.getNodeType(builder);\n\n    if (builder.getTypeLength(elseType) > builder.getTypeLength(ifType)) {\n      return elseType;\n    }\n\n    return ifType;\n  }\n\n  generate(builder) {\n    const type = this.getNodeType(builder);\n    const context = {\n      temp: false\n    };\n    const nodeProperty = new PropertyNode(null, type).build(builder);\n    const nodeSnippet = new ContextNode(this.node\n    /*, context*/\n    ).build(builder, 'bool'),\n          ifSnippet = new ContextNode(this.ifNode, context).build(builder, type),\n          elseSnippet = new ContextNode(this.elseNode, context).build(builder, type);\n    builder.addFlowCode(`if ( ${nodeSnippet} ) {\n\n\\t\\t${nodeProperty} = ${ifSnippet};\n\n\\t} else {\n\n\\t\\t${nodeProperty} = ${elseSnippet};\n\n\\t}`);\n    return nodeProperty;\n  }\n\n}\n\nexport default CondNode;","map":{"version":3,"sources":["/Users/osamakhan/Desktop/dev/Apple-Animated-React-Clone/node_modules/three-stdlib/nodes/math/CondNode.js"],"names":["Node","PropertyNode","ContextNode","CondNode","constructor","node","ifNode","elseNode","getNodeType","builder","ifType","elseType","getTypeLength","generate","type","context","temp","nodeProperty","build","nodeSnippet","ifSnippet","elseSnippet","addFlowCode"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,iBAAjB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAEA,MAAMC,QAAN,SAAuBH,IAAvB,CAA4B;AAC1BI,EAAAA,WAAW,CAACC,IAAD,EAAOC,MAAP,EAAeC,QAAf,EAAyB;AAClC;AACA,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACD;;AAEDC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,UAAMC,MAAM,GAAG,KAAKJ,MAAL,CAAYE,WAAZ,CAAwBC,OAAxB,CAAf;AACA,UAAME,QAAQ,GAAG,KAAKJ,QAAL,CAAcC,WAAd,CAA0BC,OAA1B,CAAjB;;AAEA,QAAIA,OAAO,CAACG,aAAR,CAAsBD,QAAtB,IAAkCF,OAAO,CAACG,aAAR,CAAsBF,MAAtB,CAAtC,EAAqE;AACnE,aAAOC,QAAP;AACD;;AAED,WAAOD,MAAP;AACD;;AAEDG,EAAAA,QAAQ,CAACJ,OAAD,EAAU;AAChB,UAAMK,IAAI,GAAG,KAAKN,WAAL,CAAiBC,OAAjB,CAAb;AACA,UAAMM,OAAO,GAAG;AACdC,MAAAA,IAAI,EAAE;AADQ,KAAhB;AAGA,UAAMC,YAAY,GAAG,IAAIhB,YAAJ,CAAiB,IAAjB,EAAuBa,IAAvB,EAA6BI,KAA7B,CAAmCT,OAAnC,CAArB;AACA,UAAMU,WAAW,GAAG,IAAIjB,WAAJ,CAAgB,KAAKG;AACzC;AADoB,MAElBa,KAFkB,CAEZT,OAFY,EAEH,MAFG,CAApB;AAAA,UAGMW,SAAS,GAAG,IAAIlB,WAAJ,CAAgB,KAAKI,MAArB,EAA6BS,OAA7B,EAAsCG,KAAtC,CAA4CT,OAA5C,EAAqDK,IAArD,CAHlB;AAAA,UAIMO,WAAW,GAAG,IAAInB,WAAJ,CAAgB,KAAKK,QAArB,EAA+BQ,OAA/B,EAAwCG,KAAxC,CAA8CT,OAA9C,EAAuDK,IAAvD,CAJpB;AAKAL,IAAAA,OAAO,CAACa,WAAR,CAAqB,QAAOH,WAAY;AAC5C;AACA,MAAMF,YAAa,MAAKG,SAAU;AAClC;AACA;AACA;AACA,MAAMH,YAAa,MAAKI,WAAY;AACpC;AACA,IARI;AASA,WAAOJ,YAAP;AACD;;AAxCyB;;AA4C5B,eAAed,QAAf","sourcesContent":["import Node from '../core/Node.js';\nimport PropertyNode from '../core/PropertyNode.js';\nimport ContextNode from '../core/ContextNode.js';\n\nclass CondNode extends Node {\n  constructor(node, ifNode, elseNode) {\n    super();\n    this.node = node;\n    this.ifNode = ifNode;\n    this.elseNode = elseNode;\n  }\n\n  getNodeType(builder) {\n    const ifType = this.ifNode.getNodeType(builder);\n    const elseType = this.elseNode.getNodeType(builder);\n\n    if (builder.getTypeLength(elseType) > builder.getTypeLength(ifType)) {\n      return elseType;\n    }\n\n    return ifType;\n  }\n\n  generate(builder) {\n    const type = this.getNodeType(builder);\n    const context = {\n      temp: false\n    };\n    const nodeProperty = new PropertyNode(null, type).build(builder);\n    const nodeSnippet = new ContextNode(this.node\n    /*, context*/\n    ).build(builder, 'bool'),\n          ifSnippet = new ContextNode(this.ifNode, context).build(builder, type),\n          elseSnippet = new ContextNode(this.elseNode, context).build(builder, type);\n    builder.addFlowCode(`if ( ${nodeSnippet} ) {\n\n\\t\\t${nodeProperty} = ${ifSnippet};\n\n\\t} else {\n\n\\t\\t${nodeProperty} = ${elseSnippet};\n\n\\t}`);\n    return nodeProperty;\n  }\n\n}\n\nexport default CondNode;\n"]},"metadata":{},"sourceType":"module"}