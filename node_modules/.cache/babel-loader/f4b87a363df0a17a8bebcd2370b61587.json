{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Color, DoubleSide } from 'three';\nconst Shadow = /*#__PURE__*/React.forwardRef(({\n  fog = false,\n  renderOrder,\n  depthWrite = false,\n  colorStop = 0.0,\n  color = 'black',\n  opacity = 0.5,\n  ...props\n}, ref) => {\n  const canvas = React.useMemo(() => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 128;\n    canvas.height = 128;\n    const context = canvas.getContext('2d');\n    const gradient = context.createRadialGradient(canvas.width / 2, canvas.height / 2, 0, canvas.width / 2, canvas.height / 2, canvas.width / 2);\n    gradient.addColorStop(colorStop, new Color(color).getStyle());\n    gradient.addColorStop(1, 'rgba(0,0,0,0)');\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    return canvas;\n  }, [color, colorStop]);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    renderOrder: renderOrder,\n    ref: ref,\n    \"rotation-x\": -Math.PI / 2\n  }, props), /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    opacity: opacity,\n    fog: fog,\n    depthWrite: depthWrite,\n    side: DoubleSide\n  }, /*#__PURE__*/React.createElement(\"canvasTexture\", {\n    attach: \"map\",\n    args: [canvas]\n  })));\n});\nexport { Shadow };","map":{"version":3,"sources":["/Users/osamakhan/Desktop/dev/Apple-Animated-React-Clone/node_modules/@react-three/drei/core/Shadow.js"],"names":["_extends","React","Color","DoubleSide","Shadow","forwardRef","fog","renderOrder","depthWrite","colorStop","color","opacity","props","ref","canvas","useMemo","document","createElement","width","height","context","getContext","gradient","createRadialGradient","addColorStop","getStyle","fillStyle","fillRect","Math","PI","transparent","side","attach","args"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,OAAlC;AAEA,MAAMC,MAAM,GAAG,aAAaH,KAAK,CAACI,UAAN,CAAiB,CAAC;AAC5CC,EAAAA,GAAG,GAAG,KADsC;AAE5CC,EAAAA,WAF4C;AAG5CC,EAAAA,UAAU,GAAG,KAH+B;AAI5CC,EAAAA,SAAS,GAAG,GAJgC;AAK5CC,EAAAA,KAAK,GAAG,OALoC;AAM5CC,EAAAA,OAAO,GAAG,GANkC;AAO5C,KAAGC;AAPyC,CAAD,EAQ1CC,GAR0C,KAQlC;AACT,QAAMC,MAAM,GAAGb,KAAK,CAACc,OAAN,CAAc,MAAM;AACjC,UAAMD,MAAM,GAAGE,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAH,IAAAA,MAAM,CAACI,KAAP,GAAe,GAAf;AACAJ,IAAAA,MAAM,CAACK,MAAP,GAAgB,GAAhB;AACA,UAAMC,OAAO,GAAGN,MAAM,CAACO,UAAP,CAAkB,IAAlB,CAAhB;AACA,UAAMC,QAAQ,GAAGF,OAAO,CAACG,oBAAR,CAA6BT,MAAM,CAACI,KAAP,GAAe,CAA5C,EAA+CJ,MAAM,CAACK,MAAP,GAAgB,CAA/D,EAAkE,CAAlE,EAAqEL,MAAM,CAACI,KAAP,GAAe,CAApF,EAAuFJ,MAAM,CAACK,MAAP,GAAgB,CAAvG,EAA0GL,MAAM,CAACI,KAAP,GAAe,CAAzH,CAAjB;AACAI,IAAAA,QAAQ,CAACE,YAAT,CAAsBf,SAAtB,EAAiC,IAAIP,KAAJ,CAAUQ,KAAV,EAAiBe,QAAjB,EAAjC;AACAH,IAAAA,QAAQ,CAACE,YAAT,CAAsB,CAAtB,EAAyB,eAAzB;AACAJ,IAAAA,OAAO,CAACM,SAAR,GAAoBJ,QAApB;AACAF,IAAAA,OAAO,CAACO,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuBb,MAAM,CAACI,KAA9B,EAAqCJ,MAAM,CAACK,MAA5C;AACA,WAAOL,MAAP;AACD,GAXc,EAWZ,CAACJ,KAAD,EAAQD,SAAR,CAXY,CAAf;AAYA,SAAO,aAAaR,KAAK,CAACgB,aAAN,CAAoB,MAApB,EAA4BjB,QAAQ,CAAC;AACvDO,IAAAA,WAAW,EAAEA,WAD0C;AAEvDM,IAAAA,GAAG,EAAEA,GAFkD;AAGvD,kBAAc,CAACe,IAAI,CAACC,EAAN,GAAW;AAH8B,GAAD,EAIrDjB,KAJqD,CAApC,EAIT,aAAaX,KAAK,CAACgB,aAAN,CAAoB,eAApB,EAAqC,IAArC,CAJJ,EAIgD,aAAahB,KAAK,CAACgB,aAAN,CAAoB,mBAApB,EAAyC;AACxHa,IAAAA,WAAW,EAAE,IAD2G;AAExHnB,IAAAA,OAAO,EAAEA,OAF+G;AAGxHL,IAAAA,GAAG,EAAEA,GAHmH;AAIxHE,IAAAA,UAAU,EAAEA,UAJ4G;AAKxHuB,IAAAA,IAAI,EAAE5B;AALkH,GAAzC,EAM9E,aAAaF,KAAK,CAACgB,aAAN,CAAoB,eAApB,EAAqC;AACnDe,IAAAA,MAAM,EAAE,KAD2C;AAEnDC,IAAAA,IAAI,EAAE,CAACnB,MAAD;AAF6C,GAArC,CANiE,CAJ7D,CAApB;AAcD,CAnC2B,CAA5B;AAqCA,SAASV,MAAT","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Color, DoubleSide } from 'three';\n\nconst Shadow = /*#__PURE__*/React.forwardRef(({\n  fog = false,\n  renderOrder,\n  depthWrite = false,\n  colorStop = 0.0,\n  color = 'black',\n  opacity = 0.5,\n  ...props\n}, ref) => {\n  const canvas = React.useMemo(() => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 128;\n    canvas.height = 128;\n    const context = canvas.getContext('2d');\n    const gradient = context.createRadialGradient(canvas.width / 2, canvas.height / 2, 0, canvas.width / 2, canvas.height / 2, canvas.width / 2);\n    gradient.addColorStop(colorStop, new Color(color).getStyle());\n    gradient.addColorStop(1, 'rgba(0,0,0,0)');\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    return canvas;\n  }, [color, colorStop]);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    renderOrder: renderOrder,\n    ref: ref,\n    \"rotation-x\": -Math.PI / 2\n  }, props), /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    opacity: opacity,\n    fog: fog,\n    depthWrite: depthWrite,\n    side: DoubleSide\n  }, /*#__PURE__*/React.createElement(\"canvasTexture\", {\n    attach: \"map\",\n    args: [canvas]\n  })));\n});\n\nexport { Shadow };\n"]},"metadata":{},"sourceType":"module"}