{"ast":null,"code":"import Node from './Node.js';\n\nclass CodeNode extends Node {\n  constructor(code = '', nodeType = 'code') {\n    super(nodeType);\n    this.code = code;\n    this._includes = [];\n  }\n\n  setIncludes(includes) {\n    this._includes = includes;\n    return this;\n  }\n\n  getIncludes() {\n    return this._includes;\n  }\n\n  generate(builder) {\n    const includes = this.getIncludes(builder);\n\n    for (const include of includes) {\n      include.build(builder);\n    }\n\n    const nodeCode = builder.getCodeFromNode(this, this.getNodeType(builder));\n    nodeCode.code = this.code;\n    return nodeCode.code;\n  }\n\n}\n\nCodeNode.prototype.isCodeNode = true;\nexport default CodeNode;","map":{"version":3,"sources":["/Users/osamakhan/Desktop/Apple-Website-Clone-React-master/node_modules/three-stdlib/nodes/core/CodeNode.js"],"names":["Node","CodeNode","constructor","code","nodeType","_includes","setIncludes","includes","getIncludes","generate","builder","include","build","nodeCode","getCodeFromNode","getNodeType","prototype","isCodeNode"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,QAAN,SAAuBD,IAAvB,CAA4B;AAC1BE,EAAAA,WAAW,CAACC,IAAI,GAAG,EAAR,EAAYC,QAAQ,GAAG,MAAvB,EAA+B;AACxC,UAAMA,QAAN;AACA,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKE,SAAL,GAAiB,EAAjB;AACD;;AAEDC,EAAAA,WAAW,CAACC,QAAD,EAAW;AACpB,SAAKF,SAAL,GAAiBE,QAAjB;AACA,WAAO,IAAP;AACD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,WAAO,KAAKH,SAAZ;AACD;;AAEDI,EAAAA,QAAQ,CAACC,OAAD,EAAU;AAChB,UAAMH,QAAQ,GAAG,KAAKC,WAAL,CAAiBE,OAAjB,CAAjB;;AAEA,SAAK,MAAMC,OAAX,IAAsBJ,QAAtB,EAAgC;AAC9BI,MAAAA,OAAO,CAACC,KAAR,CAAcF,OAAd;AACD;;AAED,UAAMG,QAAQ,GAAGH,OAAO,CAACI,eAAR,CAAwB,IAAxB,EAA8B,KAAKC,WAAL,CAAiBL,OAAjB,CAA9B,CAAjB;AACAG,IAAAA,QAAQ,CAACV,IAAT,GAAgB,KAAKA,IAArB;AACA,WAAOU,QAAQ,CAACV,IAAhB;AACD;;AA1ByB;;AA8B5BF,QAAQ,CAACe,SAAT,CAAmBC,UAAnB,GAAgC,IAAhC;AAEA,eAAehB,QAAf","sourcesContent":["import Node from './Node.js';\n\nclass CodeNode extends Node {\n  constructor(code = '', nodeType = 'code') {\n    super(nodeType);\n    this.code = code;\n    this._includes = [];\n  }\n\n  setIncludes(includes) {\n    this._includes = includes;\n    return this;\n  }\n\n  getIncludes() {\n    return this._includes;\n  }\n\n  generate(builder) {\n    const includes = this.getIncludes(builder);\n\n    for (const include of includes) {\n      include.build(builder);\n    }\n\n    const nodeCode = builder.getCodeFromNode(this, this.getNodeType(builder));\n    nodeCode.code = this.code;\n    return nodeCode.code;\n  }\n\n}\n\nCodeNode.prototype.isCodeNode = true;\n\nexport default CodeNode;\n"]},"metadata":{},"sourceType":"module"}