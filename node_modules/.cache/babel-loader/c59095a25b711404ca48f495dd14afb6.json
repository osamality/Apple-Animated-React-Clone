{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toFastProperties = void 0; // based on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\n\nfunction toFastProperties(toBecomeFast) {\n  function FakeConstructor() {} // If our object is used as a constructor it would receive\n\n\n  FakeConstructor.prototype = toBecomeFast;\n  var fakeInstance = new FakeConstructor();\n\n  function fakeAccess() {\n    return typeof fakeInstance.bar;\n  } // help V8 understand this is a \"real\" prototype by actually using\n  // the fake instance.\n\n\n  fakeAccess();\n  fakeAccess(); // Always true condition to suppress the Firefox warning of unreachable\n  // code after a return statement.\n\n  if (1) return toBecomeFast; // Eval prevents optimization of this method (even though this is dead code)\n\n  /* istanbul ignore next */\n  // tslint:disable-next-line\n\n  eval(toBecomeFast);\n}\n\nexports.toFastProperties = toFastProperties;","map":{"version":3,"sources":["../../src/to-fast-properties.ts"],"names":[],"mappings":";;;;;mCAAA;;AACA,SAAgB,gBAAhB,CAAiC,YAAjC,EAAkD;AAChD,WAAS,eAAT,GAAwB,CAAK,CADmB,CAGhD;;;AACA,EAAA,eAAe,CAAC,SAAhB,GAA4B,YAA5B;AACA,MAAM,YAAY,GAAG,IAAK,eAAL,EAArB;;AAEA,WAAS,UAAT,GAAmB;AACjB,WAAO,OAAO,YAAY,CAAC,GAA3B;AACD,GAT+C,CAWhD;AACA;;;AACA,EAAA,UAAU;AACV,EAAA,UAAU,GAdsC,CAgBhD;AACA;;AACA,MAAI,CAAJ,EAAO,OAAO,YAAP,CAlByC,CAoBhD;;AACA;AACA;;AACA,EAAA,IAAI,CAAC,YAAD,CAAJ;AACD;;AAxBD,OAAA,CAAA,gBAAA,GAAA,gBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toFastProperties = void 0;\n// based on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\nfunction toFastProperties(toBecomeFast) {\n    function FakeConstructor() { }\n    // If our object is used as a constructor it would receive\n    FakeConstructor.prototype = toBecomeFast;\n    var fakeInstance = new FakeConstructor();\n    function fakeAccess() {\n        return typeof fakeInstance.bar;\n    }\n    // help V8 understand this is a \"real\" prototype by actually using\n    // the fake instance.\n    fakeAccess();\n    fakeAccess();\n    // Always true condition to suppress the Firefox warning of unreachable\n    // code after a return statement.\n    if (1)\n        return toBecomeFast;\n    // Eval prevents optimization of this method (even though this is dead code)\n    /* istanbul ignore next */\n    // tslint:disable-next-line\n    eval(toBecomeFast);\n}\nexports.toFastProperties = toFastProperties;\n//# sourceMappingURL=to-fast-properties.js.map"]},"metadata":{},"sourceType":"script"}