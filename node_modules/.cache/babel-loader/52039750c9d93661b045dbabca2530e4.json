{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\nconst OrbitControls = /*#__PURE__*/React.forwardRef(({\n  makeDefault,\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(state => state.invalidate);\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const performance = useThree(state => state.performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  }, -1);\n  React.useEffect(() => {\n    controls.connect(explDomElement);\n    return () => void controls.dispose();\n  }, [explDomElement, regress, controls, invalidate]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n      controls.removeEventListener('change', callback);\n    };\n  }, [onChange, onStart, onEnd, controls, invalidate]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\nexport { OrbitControls };","map":{"version":3,"sources":["/Users/osamakhan/Desktop/dev/Apple-Animated-React-Clone/node_modules/@react-three/drei/core/OrbitControls.js"],"names":["_extends","useThree","useFrame","React","OrbitControls","OrbitControls$1","forwardRef","makeDefault","camera","regress","domElement","enableDamping","onChange","onStart","onEnd","restProps","ref","invalidate","state","defaultCamera","gl","events","set","get","performance","explCamera","explDomElement","connected","controls","useMemo","enabled","update","useEffect","connect","dispose","callback","e","addEventListener","removeEventListener","old","createElement","object"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,oBAAnC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAa,IAAIC,eAA1B,QAAiD,cAAjD;AAEA,MAAMD,aAAa,GAAG,aAAaD,KAAK,CAACG,UAAN,CAAiB,CAAC;AACnDC,EAAAA,WADmD;AAEnDC,EAAAA,MAFmD;AAGnDC,EAAAA,OAHmD;AAInDC,EAAAA,UAJmD;AAKnDC,EAAAA,aAAa,GAAG,IALmC;AAMnDC,EAAAA,QANmD;AAOnDC,EAAAA,OAPmD;AAQnDC,EAAAA,KARmD;AASnD,KAAGC;AATgD,CAAD,EAUjDC,GAViD,KAUzC;AACT,QAAMC,UAAU,GAAGhB,QAAQ,CAACiB,KAAK,IAAIA,KAAK,CAACD,UAAhB,CAA3B;AACA,QAAME,aAAa,GAAGlB,QAAQ,CAACiB,KAAK,IAAIA,KAAK,CAACV,MAAhB,CAA9B;AACA,QAAMY,EAAE,GAAGnB,QAAQ,CAACiB,KAAK,IAAIA,KAAK,CAACE,EAAhB,CAAnB;AACA,QAAMC,MAAM,GAAGpB,QAAQ,CAACiB,KAAK,IAAIA,KAAK,CAACG,MAAhB,CAAvB;AACA,QAAMC,GAAG,GAAGrB,QAAQ,CAACiB,KAAK,IAAIA,KAAK,CAACI,GAAhB,CAApB;AACA,QAAMC,GAAG,GAAGtB,QAAQ,CAACiB,KAAK,IAAIA,KAAK,CAACK,GAAhB,CAApB;AACA,QAAMC,WAAW,GAAGvB,QAAQ,CAACiB,KAAK,IAAIA,KAAK,CAACM,WAAhB,CAA5B;AACA,QAAMC,UAAU,GAAGjB,MAAM,IAAIW,aAA7B;AACA,QAAMO,cAAc,GAAGhB,UAAU,IAAIW,MAAM,CAACM,SAArB,IAAkCP,EAAE,CAACV,UAA5D;AACA,QAAMkB,QAAQ,GAAGzB,KAAK,CAAC0B,OAAN,CAAc,MAAM,IAAIxB,eAAJ,CAAoBoB,UAApB,CAApB,EAAqD,CAACA,UAAD,CAArD,CAAjB;AACAvB,EAAAA,QAAQ,CAAC,MAAM;AACb,QAAI0B,QAAQ,CAACE,OAAb,EAAsBF,QAAQ,CAACG,MAAT;AACvB,GAFO,EAEL,CAAC,CAFI,CAAR;AAGA5B,EAAAA,KAAK,CAAC6B,SAAN,CAAgB,MAAM;AACpBJ,IAAAA,QAAQ,CAACK,OAAT,CAAiBP,cAAjB;AACA,WAAO,MAAM,KAAKE,QAAQ,CAACM,OAAT,EAAlB;AACD,GAHD,EAGG,CAACR,cAAD,EAAiBjB,OAAjB,EAA0BmB,QAA1B,EAAoCX,UAApC,CAHH;AAIAd,EAAAA,KAAK,CAAC6B,SAAN,CAAgB,MAAM;AACpB,UAAMG,QAAQ,GAAGC,CAAC,IAAI;AACpBnB,MAAAA,UAAU;AACV,UAAIR,OAAJ,EAAae,WAAW,CAACf,OAAZ;AACb,UAAIG,QAAJ,EAAcA,QAAQ,CAACwB,CAAD,CAAR;AACf,KAJD;;AAMAR,IAAAA,QAAQ,CAACS,gBAAT,CAA0B,QAA1B,EAAoCF,QAApC;AACA,QAAItB,OAAJ,EAAae,QAAQ,CAACS,gBAAT,CAA0B,OAA1B,EAAmCxB,OAAnC;AACb,QAAIC,KAAJ,EAAWc,QAAQ,CAACS,gBAAT,CAA0B,KAA1B,EAAiCvB,KAAjC;AACX,WAAO,MAAM;AACX,UAAID,OAAJ,EAAae,QAAQ,CAACU,mBAAT,CAA6B,OAA7B,EAAsCzB,OAAtC;AACb,UAAIC,KAAJ,EAAWc,QAAQ,CAACU,mBAAT,CAA6B,KAA7B,EAAoCxB,KAApC;AACXc,MAAAA,QAAQ,CAACU,mBAAT,CAA6B,QAA7B,EAAuCH,QAAvC;AACD,KAJD;AAKD,GAfD,EAeG,CAACvB,QAAD,EAAWC,OAAX,EAAoBC,KAApB,EAA2Bc,QAA3B,EAAqCX,UAArC,CAfH;AAgBAd,EAAAA,KAAK,CAAC6B,SAAN,CAAgB,MAAM;AACpB,QAAIzB,WAAJ,EAAiB;AACf,YAAMgC,GAAG,GAAGhB,GAAG,GAAGK,QAAlB;AACAN,MAAAA,GAAG,CAAC;AACFM,QAAAA;AADE,OAAD,CAAH;AAGA,aAAO,MAAMN,GAAG,CAAC;AACfM,QAAAA,QAAQ,EAAEW;AADK,OAAD,CAAhB;AAGD;AACF,GAVD,EAUG,CAAChC,WAAD,EAAcqB,QAAd,CAVH;AAWA,SAAO,aAAazB,KAAK,CAACqC,aAAN,CAAoB,WAApB,EAAiCxC,QAAQ,CAAC;AAC5DgB,IAAAA,GAAG,EAAEA,GADuD;AAE5DyB,IAAAA,MAAM,EAAEb,QAFoD;AAG5DjB,IAAAA,aAAa,EAAEA;AAH6C,GAAD,EAI1DI,SAJ0D,CAAzC,CAApB;AAKD,CA5DkC,CAAnC;AA8DA,SAASX,aAAT","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\n\nconst OrbitControls = /*#__PURE__*/React.forwardRef(({\n  makeDefault,\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(state => state.invalidate);\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const performance = useThree(state => state.performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  }, -1);\n  React.useEffect(() => {\n    controls.connect(explDomElement);\n    return () => void controls.dispose();\n  }, [explDomElement, regress, controls, invalidate]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n      controls.removeEventListener('change', callback);\n    };\n  }, [onChange, onStart, onEnd, controls, invalidate]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\n\nexport { OrbitControls };\n"]},"metadata":{},"sourceType":"module"}