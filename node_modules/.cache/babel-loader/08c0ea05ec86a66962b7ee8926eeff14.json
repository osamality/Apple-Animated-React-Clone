{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { useFBO } from './useFBO.js';\n\nconst isFunction = node => typeof node === 'function';\n\nconst OrthographicCamera = /*#__PURE__*/React.forwardRef(({\n  envMap,\n  resolution = 256,\n  frames = Infinity,\n  children,\n  makeDefault,\n  ...props\n}, ref) => {\n  const set = useThree(({\n    set\n  }) => set);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const size = useThree(({\n    size\n  }) => size);\n  const cameraRef = React.useRef(null);\n  const groupRef = React.useRef(null);\n  const fbo = useFBO(resolution);\n  React.useLayoutEffect(() => {\n    if (!props.manual) {\n      cameraRef.current.updateProjectionMatrix();\n    }\n  }, [size, props]);\n  React.useLayoutEffect(() => {\n    cameraRef.current.updateProjectionMatrix();\n  });\n  React.useLayoutEffect(() => {\n    if (makeDefault) {\n      const oldCam = camera;\n      set(() => ({\n        camera: cameraRef.current\n      }));\n      return () => set(() => ({\n        camera: oldCam\n      }));\n    } // The camera should not be part of the dependency list because this components camera is a stable reference\n    // that must exchange the default, and clean up after itself on unmount.\n\n  }, [cameraRef, makeDefault, set]);\n  let count = 0;\n  let oldEnvMap = null;\n  const functional = isFunction(children);\n  useFrame(state => {\n    if (functional && (frames === Infinity || count < frames)) {\n      groupRef.current.visible = false;\n      state.gl.setRenderTarget(fbo);\n      oldEnvMap = state.scene.background;\n      if (envMap) state.scene.background = envMap;\n      state.gl.render(state.scene, cameraRef.current);\n      state.scene.background = oldEnvMap;\n      state.gl.setRenderTarget(null);\n      groupRef.current.visible = true;\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"orthographicCamera\", _extends({\n    left: size.width / -2,\n    right: size.width / 2,\n    top: size.height / 2,\n    bottom: size.height / -2,\n    ref: mergeRefs([cameraRef, ref])\n  }, props), !functional && children), /*#__PURE__*/React.createElement(\"group\", {\n    ref: groupRef\n  }, functional && children(fbo.texture)));\n});\nexport { OrthographicCamera };","map":{"version":3,"sources":["/Users/osamakhan/Desktop/dev/Apple-Animated-React-Clone/node_modules/@react-three/drei/core/OrthographicCamera.js"],"names":["_extends","React","useThree","useFrame","mergeRefs","useFBO","isFunction","node","OrthographicCamera","forwardRef","envMap","resolution","frames","Infinity","children","makeDefault","props","ref","set","camera","size","cameraRef","useRef","groupRef","fbo","useLayoutEffect","manual","current","updateProjectionMatrix","oldCam","count","oldEnvMap","functional","state","visible","gl","setRenderTarget","scene","background","render","createElement","Fragment","left","width","right","top","height","bottom","texture"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { useFBO } from './useFBO.js';\n\nconst isFunction = node => typeof node === 'function';\n\nconst OrthographicCamera = /*#__PURE__*/React.forwardRef(({\n  envMap,\n  resolution = 256,\n  frames = Infinity,\n  children,\n  makeDefault,\n  ...props\n}, ref) => {\n  const set = useThree(({\n    set\n  }) => set);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const size = useThree(({\n    size\n  }) => size);\n  const cameraRef = React.useRef(null);\n  const groupRef = React.useRef(null);\n  const fbo = useFBO(resolution);\n  React.useLayoutEffect(() => {\n    if (!props.manual) {\n      cameraRef.current.updateProjectionMatrix();\n    }\n  }, [size, props]);\n  React.useLayoutEffect(() => {\n    cameraRef.current.updateProjectionMatrix();\n  });\n  React.useLayoutEffect(() => {\n    if (makeDefault) {\n      const oldCam = camera;\n      set(() => ({\n        camera: cameraRef.current\n      }));\n      return () => set(() => ({\n        camera: oldCam\n      }));\n    } // The camera should not be part of the dependency list because this components camera is a stable reference\n    // that must exchange the default, and clean up after itself on unmount.\n\n  }, [cameraRef, makeDefault, set]);\n  let count = 0;\n  let oldEnvMap = null;\n  const functional = isFunction(children);\n  useFrame(state => {\n    if (functional && (frames === Infinity || count < frames)) {\n      groupRef.current.visible = false;\n      state.gl.setRenderTarget(fbo);\n      oldEnvMap = state.scene.background;\n      if (envMap) state.scene.background = envMap;\n      state.gl.render(state.scene, cameraRef.current);\n      state.scene.background = oldEnvMap;\n      state.gl.setRenderTarget(null);\n      groupRef.current.visible = true;\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"orthographicCamera\", _extends({\n    left: size.width / -2,\n    right: size.width / 2,\n    top: size.height / 2,\n    bottom: size.height / -2,\n    ref: mergeRefs([cameraRef, ref])\n  }, props), !functional && children), /*#__PURE__*/React.createElement(\"group\", {\n    ref: groupRef\n  }, functional && children(fbo.texture)));\n});\n\nexport { OrthographicCamera };\n"]},"metadata":{},"sourceType":"module"}