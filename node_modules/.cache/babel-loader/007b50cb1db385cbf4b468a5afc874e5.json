{"ast":null,"code":"import * as React from 'react';\nimport { acceleratedRaycast, computeBoundsTree, disposeBoundsTree } from 'three-mesh-bvh';\n\nfunction useBVH(mesh, options) {\n  options = {\n    splitStrategy: 'SAH',\n    verbose: false,\n    setBoundingBox: true,\n    maxDepth: 40,\n    maxLeafTris: 10,\n    ...options\n  };\n  React.useEffect(() => {\n    if (mesh.current) {\n      mesh.current.raycast = acceleratedRaycast;\n      const geometry = mesh.current.geometry;\n      geometry.computeBoundsTree = computeBoundsTree;\n      geometry.disposeBoundsTree = disposeBoundsTree;\n      geometry.computeBoundsTree(options);\n      return () => {\n        if (geometry.boundsTree) {\n          geometry.disposeBoundsTree();\n        }\n      };\n    }\n  }, [mesh, JSON.stringify(options)]);\n}\n\nexport { useBVH };","map":{"version":3,"sources":["/Users/osamakhan/Desktop/Apple-Website-Clone-React-master/node_modules/@react-three/drei/core/useBVH.js"],"names":["React","acceleratedRaycast","computeBoundsTree","disposeBoundsTree","useBVH","mesh","options","splitStrategy","verbose","setBoundingBox","maxDepth","maxLeafTris","useEffect","current","raycast","geometry","boundsTree","JSON","stringify"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,kBAAT,EAA6BC,iBAA7B,EAAgDC,iBAAhD,QAAyE,gBAAzE;;AAEA,SAASC,MAAT,CAAgBC,IAAhB,EAAsBC,OAAtB,EAA+B;AAC7BA,EAAAA,OAAO,GAAG;AACRC,IAAAA,aAAa,EAAE,KADP;AAERC,IAAAA,OAAO,EAAE,KAFD;AAGRC,IAAAA,cAAc,EAAE,IAHR;AAIRC,IAAAA,QAAQ,EAAE,EAJF;AAKRC,IAAAA,WAAW,EAAE,EALL;AAMR,OAAGL;AANK,GAAV;AAQAN,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACpB,QAAIP,IAAI,CAACQ,OAAT,EAAkB;AAChBR,MAAAA,IAAI,CAACQ,OAAL,CAAaC,OAAb,GAAuBb,kBAAvB;AACA,YAAMc,QAAQ,GAAGV,IAAI,CAACQ,OAAL,CAAaE,QAA9B;AACAA,MAAAA,QAAQ,CAACb,iBAAT,GAA6BA,iBAA7B;AACAa,MAAAA,QAAQ,CAACZ,iBAAT,GAA6BA,iBAA7B;AACAY,MAAAA,QAAQ,CAACb,iBAAT,CAA2BI,OAA3B;AACA,aAAO,MAAM;AACX,YAAIS,QAAQ,CAACC,UAAb,EAAyB;AACvBD,UAAAA,QAAQ,CAACZ,iBAAT;AACD;AACF,OAJD;AAKD;AACF,GAbD,EAaG,CAACE,IAAD,EAAOY,IAAI,CAACC,SAAL,CAAeZ,OAAf,CAAP,CAbH;AAcD;;AAED,SAASF,MAAT","sourcesContent":["import * as React from 'react';\nimport { acceleratedRaycast, computeBoundsTree, disposeBoundsTree } from 'three-mesh-bvh';\n\nfunction useBVH(mesh, options) {\n  options = {\n    splitStrategy: 'SAH',\n    verbose: false,\n    setBoundingBox: true,\n    maxDepth: 40,\n    maxLeafTris: 10,\n    ...options\n  };\n  React.useEffect(() => {\n    if (mesh.current) {\n      mesh.current.raycast = acceleratedRaycast;\n      const geometry = mesh.current.geometry;\n      geometry.computeBoundsTree = computeBoundsTree;\n      geometry.disposeBoundsTree = disposeBoundsTree;\n      geometry.computeBoundsTree(options);\n      return () => {\n        if (geometry.boundsTree) {\n          geometry.disposeBoundsTree();\n        }\n      };\n    }\n  }, [mesh, JSON.stringify(options)]);\n}\n\nexport { useBVH };\n"]},"metadata":{},"sourceType":"module"}