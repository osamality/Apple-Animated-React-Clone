{"ast":null,"code":"import TempNode from '../core/TempNode.js';\nimport { normalize, join, negate, positionViewDirection, cross, add, mul, dot, transformedNormalView } from '../ShaderNode.js';\n\nclass MatcapUVNode extends TempNode {\n  constructor() {\n    super('vec2');\n  }\n\n  generate(builder) {\n    const x = normalize(join(positionViewDirection.z, 0, negate(positionViewDirection.x)));\n    const y = cross(positionViewDirection, x);\n    const uv = add(mul(join(dot(x, transformedNormalView), dot(y, transformedNormalView)), 0.495), 0.5);\n    return uv.build(builder, this.getNodeType(builder));\n  }\n\n}\n\nexport default MatcapUVNode;","map":{"version":3,"sources":["/Users/osamakhan/Desktop/dev/Apple-Animated-React-Clone/node_modules/three-stdlib/nodes/utils/MatcapUVNode.js"],"names":["TempNode","normalize","join","negate","positionViewDirection","cross","add","mul","dot","transformedNormalView","MatcapUVNode","constructor","generate","builder","x","z","y","uv","build","getNodeType"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,qBAAlC,EAAyDC,KAAzD,EAAgEC,GAAhE,EAAqEC,GAArE,EAA0EC,GAA1E,EAA+EC,qBAA/E,QAA4G,kBAA5G;;AAEA,MAAMC,YAAN,SAA2BV,QAA3B,CAAoC;AAClCW,EAAAA,WAAW,GAAG;AACZ,UAAM,MAAN;AACD;;AAEDC,EAAAA,QAAQ,CAACC,OAAD,EAAU;AAChB,UAAMC,CAAC,GAAGb,SAAS,CAACC,IAAI,CAACE,qBAAqB,CAACW,CAAvB,EAA0B,CAA1B,EAA6BZ,MAAM,CAACC,qBAAqB,CAACU,CAAvB,CAAnC,CAAL,CAAnB;AACA,UAAME,CAAC,GAAGX,KAAK,CAACD,qBAAD,EAAwBU,CAAxB,CAAf;AACA,UAAMG,EAAE,GAAGX,GAAG,CAACC,GAAG,CAACL,IAAI,CAACM,GAAG,CAACM,CAAD,EAAIL,qBAAJ,CAAJ,EAAgCD,GAAG,CAACQ,CAAD,EAAIP,qBAAJ,CAAnC,CAAL,EAAqE,KAArE,CAAJ,EAAiF,GAAjF,CAAd;AACA,WAAOQ,EAAE,CAACC,KAAH,CAASL,OAAT,EAAkB,KAAKM,WAAL,CAAiBN,OAAjB,CAAlB,CAAP;AACD;;AAViC;;AAcpC,eAAeH,YAAf","sourcesContent":["import TempNode from '../core/TempNode.js';\nimport { normalize, join, negate, positionViewDirection, cross, add, mul, dot, transformedNormalView } from '../ShaderNode.js';\n\nclass MatcapUVNode extends TempNode {\n  constructor() {\n    super('vec2');\n  }\n\n  generate(builder) {\n    const x = normalize(join(positionViewDirection.z, 0, negate(positionViewDirection.x)));\n    const y = cross(positionViewDirection, x);\n    const uv = add(mul(join(dot(x, transformedNormalView), dot(y, transformedNormalView)), 0.495), 0.5);\n    return uv.build(builder, this.getNodeType(builder));\n  }\n\n}\n\nexport default MatcapUVNode;\n"]},"metadata":{},"sourceType":"module"}