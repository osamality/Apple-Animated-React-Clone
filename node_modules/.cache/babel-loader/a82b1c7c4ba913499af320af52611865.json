{"ast":null,"code":"import * as React from 'react';\nimport create from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\nconst context = /*@__PURE__*/React.createContext(null);\n\nfunction KeyboardControls({\n  map,\n  children,\n  onChange,\n  domElement\n}) {\n  const key = map.map(item => item.name + item.keys).join('-');\n  const useControls = React.useMemo(() => {\n    return create(subscribeWithSelector(() => map.reduce((prev, cur) => ({ ...prev,\n      [cur.name]: false\n    }), {})));\n  }, [key]);\n  const api = React.useMemo(() => [useControls.subscribe, useControls.getState, useControls], [key]);\n  const set = useControls.setState;\n  React.useEffect(() => {\n    const config = map.map(({\n      name,\n      keys,\n      up\n    }) => ({\n      keys,\n      up,\n      fn: value => {\n        // Set zustand state\n        set({\n          [name]: value\n        }); // Inform callback\n\n        if (onChange) onChange(name, value, api[2]());\n      }\n    }));\n    const keyMap = config.reduce((out, {\n      keys,\n      fn,\n      up = true\n    }) => {\n      keys.forEach(key => out[key] = {\n        fn,\n        pressed: false,\n        up\n      });\n      return out;\n    }, {});\n\n    const downHandler = ({\n      key,\n      code\n    }) => {\n      const obj = keyMap[key] || keyMap[code];\n      if (!obj) return;\n      const {\n        fn,\n        pressed,\n        up\n      } = obj;\n      obj.pressed = true;\n      if (up || !pressed) fn(true);\n    };\n\n    const upHandler = ({\n      key,\n      code\n    }) => {\n      const obj = keyMap[key] || keyMap[code];\n      if (!obj) return;\n      const {\n        fn,\n        up\n      } = obj;\n      obj.pressed = false;\n      if (up) fn(false);\n    };\n\n    const source = domElement || window;\n    source.addEventListener('keydown', downHandler, {\n      passive: true\n    });\n    source.addEventListener('keyup', upHandler, {\n      passive: true\n    });\n    return () => {\n      source.removeEventListener('keydown', downHandler);\n      source.removeEventListener('keyup', upHandler);\n    };\n  }, [domElement, key]);\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: api,\n    children: children\n  });\n}\n\nfunction useKeyboardControls(sel) {\n  const [sub, get, store] = React.useContext(context);\n  if (sel) return store(sel);else return [sub, get];\n}\n\nexport { KeyboardControls, useKeyboardControls };","map":{"version":3,"sources":["/Users/osamakhan/Desktop/dev/Apple-Animated-React-Clone/node_modules/@react-three/drei/web/KeyboardControls.js"],"names":["React","create","subscribeWithSelector","context","createContext","KeyboardControls","map","children","onChange","domElement","key","item","name","keys","join","useControls","useMemo","reduce","prev","cur","api","subscribe","getState","set","setState","useEffect","config","up","fn","value","keyMap","out","forEach","pressed","downHandler","code","obj","upHandler","source","window","addEventListener","passive","removeEventListener","createElement","Provider","useKeyboardControls","sel","sub","get","store","useContext"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,SAASC,qBAAT,QAAsC,oBAAtC;AAEA,MAAMC,OAAO,GAAG,aAAaH,KAAK,CAACI,aAAN,CAAoB,IAApB,CAA7B;;AACA,SAASC,gBAAT,CAA0B;AACxBC,EAAAA,GADwB;AAExBC,EAAAA,QAFwB;AAGxBC,EAAAA,QAHwB;AAIxBC,EAAAA;AAJwB,CAA1B,EAKG;AACD,QAAMC,GAAG,GAAGJ,GAAG,CAACA,GAAJ,CAAQK,IAAI,IAAIA,IAAI,CAACC,IAAL,GAAYD,IAAI,CAACE,IAAjC,EAAuCC,IAAvC,CAA4C,GAA5C,CAAZ;AACA,QAAMC,WAAW,GAAGf,KAAK,CAACgB,OAAN,CAAc,MAAM;AACtC,WAAOf,MAAM,CAACC,qBAAqB,CAAC,MAAMI,GAAG,CAACW,MAAJ,CAAW,CAACC,IAAD,EAAOC,GAAP,MAAgB,EAAE,GAAGD,IAAL;AACnE,OAACC,GAAG,CAACP,IAAL,GAAY;AADuD,KAAhB,CAAX,EAEtC,EAFsC,CAAP,CAAtB,CAAb;AAGD,GAJmB,EAIjB,CAACF,GAAD,CAJiB,CAApB;AAKA,QAAMU,GAAG,GAAGpB,KAAK,CAACgB,OAAN,CAAc,MAAM,CAACD,WAAW,CAACM,SAAb,EAAwBN,WAAW,CAACO,QAApC,EAA8CP,WAA9C,CAApB,EAAgF,CAACL,GAAD,CAAhF,CAAZ;AACA,QAAMa,GAAG,GAAGR,WAAW,CAACS,QAAxB;AACAxB,EAAAA,KAAK,CAACyB,SAAN,CAAgB,MAAM;AACpB,UAAMC,MAAM,GAAGpB,GAAG,CAACA,GAAJ,CAAQ,CAAC;AACtBM,MAAAA,IADsB;AAEtBC,MAAAA,IAFsB;AAGtBc,MAAAA;AAHsB,KAAD,MAIhB;AACLd,MAAAA,IADK;AAELc,MAAAA,EAFK;AAGLC,MAAAA,EAAE,EAAEC,KAAK,IAAI;AACX;AACAN,QAAAA,GAAG,CAAC;AACF,WAACX,IAAD,GAAQiB;AADN,SAAD,CAAH,CAFW,CAIP;;AAEJ,YAAIrB,QAAJ,EAAcA,QAAQ,CAACI,IAAD,EAAOiB,KAAP,EAAcT,GAAG,CAAC,CAAD,CAAH,EAAd,CAAR;AACf;AAVI,KAJgB,CAAR,CAAf;AAgBA,UAAMU,MAAM,GAAGJ,MAAM,CAACT,MAAP,CAAc,CAACc,GAAD,EAAM;AACjClB,MAAAA,IADiC;AAEjCe,MAAAA,EAFiC;AAGjCD,MAAAA,EAAE,GAAG;AAH4B,KAAN,KAIvB;AACJd,MAAAA,IAAI,CAACmB,OAAL,CAAatB,GAAG,IAAIqB,GAAG,CAACrB,GAAD,CAAH,GAAW;AAC7BkB,QAAAA,EAD6B;AAE7BK,QAAAA,OAAO,EAAE,KAFoB;AAG7BN,QAAAA;AAH6B,OAA/B;AAKA,aAAOI,GAAP;AACD,KAXc,EAWZ,EAXY,CAAf;;AAaA,UAAMG,WAAW,GAAG,CAAC;AACnBxB,MAAAA,GADmB;AAEnByB,MAAAA;AAFmB,KAAD,KAGd;AACJ,YAAMC,GAAG,GAAGN,MAAM,CAACpB,GAAD,CAAN,IAAeoB,MAAM,CAACK,IAAD,CAAjC;AACA,UAAI,CAACC,GAAL,EAAU;AACV,YAAM;AACJR,QAAAA,EADI;AAEJK,QAAAA,OAFI;AAGJN,QAAAA;AAHI,UAIFS,GAJJ;AAKAA,MAAAA,GAAG,CAACH,OAAJ,GAAc,IAAd;AACA,UAAIN,EAAE,IAAI,CAACM,OAAX,EAAoBL,EAAE,CAAC,IAAD,CAAF;AACrB,KAbD;;AAeA,UAAMS,SAAS,GAAG,CAAC;AACjB3B,MAAAA,GADiB;AAEjByB,MAAAA;AAFiB,KAAD,KAGZ;AACJ,YAAMC,GAAG,GAAGN,MAAM,CAACpB,GAAD,CAAN,IAAeoB,MAAM,CAACK,IAAD,CAAjC;AACA,UAAI,CAACC,GAAL,EAAU;AACV,YAAM;AACJR,QAAAA,EADI;AAEJD,QAAAA;AAFI,UAGFS,GAHJ;AAIAA,MAAAA,GAAG,CAACH,OAAJ,GAAc,KAAd;AACA,UAAIN,EAAJ,EAAQC,EAAE,CAAC,KAAD,CAAF;AACT,KAZD;;AAcA,UAAMU,MAAM,GAAG7B,UAAU,IAAI8B,MAA7B;AACAD,IAAAA,MAAM,CAACE,gBAAP,CAAwB,SAAxB,EAAmCN,WAAnC,EAAgD;AAC9CO,MAAAA,OAAO,EAAE;AADqC,KAAhD;AAGAH,IAAAA,MAAM,CAACE,gBAAP,CAAwB,OAAxB,EAAiCH,SAAjC,EAA4C;AAC1CI,MAAAA,OAAO,EAAE;AADiC,KAA5C;AAGA,WAAO,MAAM;AACXH,MAAAA,MAAM,CAACI,mBAAP,CAA2B,SAA3B,EAAsCR,WAAtC;AACAI,MAAAA,MAAM,CAACI,mBAAP,CAA2B,OAA3B,EAAoCL,SAApC;AACD,KAHD;AAID,GAtED,EAsEG,CAAC5B,UAAD,EAAaC,GAAb,CAtEH;AAuEA,SAAO,aAAaV,KAAK,CAAC2C,aAAN,CAAoBxC,OAAO,CAACyC,QAA5B,EAAsC;AACxDf,IAAAA,KAAK,EAAET,GADiD;AAExDb,IAAAA,QAAQ,EAAEA;AAF8C,GAAtC,CAApB;AAID;;AACD,SAASsC,mBAAT,CAA6BC,GAA7B,EAAkC;AAChC,QAAM,CAACC,GAAD,EAAMC,GAAN,EAAWC,KAAX,IAAoBjD,KAAK,CAACkD,UAAN,CAAiB/C,OAAjB,CAA1B;AACA,MAAI2C,GAAJ,EAAS,OAAOG,KAAK,CAACH,GAAD,CAAZ,CAAT,KAAgC,OAAO,CAACC,GAAD,EAAMC,GAAN,CAAP;AACjC;;AAED,SAAS3C,gBAAT,EAA2BwC,mBAA3B","sourcesContent":["import * as React from 'react';\nimport create from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\n\nconst context = /*@__PURE__*/React.createContext(null);\nfunction KeyboardControls({\n  map,\n  children,\n  onChange,\n  domElement\n}) {\n  const key = map.map(item => item.name + item.keys).join('-');\n  const useControls = React.useMemo(() => {\n    return create(subscribeWithSelector(() => map.reduce((prev, cur) => ({ ...prev,\n      [cur.name]: false\n    }), {})));\n  }, [key]);\n  const api = React.useMemo(() => [useControls.subscribe, useControls.getState, useControls], [key]);\n  const set = useControls.setState;\n  React.useEffect(() => {\n    const config = map.map(({\n      name,\n      keys,\n      up\n    }) => ({\n      keys,\n      up,\n      fn: value => {\n        // Set zustand state\n        set({\n          [name]: value\n        }); // Inform callback\n\n        if (onChange) onChange(name, value, api[2]());\n      }\n    }));\n    const keyMap = config.reduce((out, {\n      keys,\n      fn,\n      up = true\n    }) => {\n      keys.forEach(key => out[key] = {\n        fn,\n        pressed: false,\n        up\n      });\n      return out;\n    }, {});\n\n    const downHandler = ({\n      key,\n      code\n    }) => {\n      const obj = keyMap[key] || keyMap[code];\n      if (!obj) return;\n      const {\n        fn,\n        pressed,\n        up\n      } = obj;\n      obj.pressed = true;\n      if (up || !pressed) fn(true);\n    };\n\n    const upHandler = ({\n      key,\n      code\n    }) => {\n      const obj = keyMap[key] || keyMap[code];\n      if (!obj) return;\n      const {\n        fn,\n        up\n      } = obj;\n      obj.pressed = false;\n      if (up) fn(false);\n    };\n\n    const source = domElement || window;\n    source.addEventListener('keydown', downHandler, {\n      passive: true\n    });\n    source.addEventListener('keyup', upHandler, {\n      passive: true\n    });\n    return () => {\n      source.removeEventListener('keydown', downHandler);\n      source.removeEventListener('keyup', upHandler);\n    };\n  }, [domElement, key]);\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: api,\n    children: children\n  });\n}\nfunction useKeyboardControls(sel) {\n  const [sub, get, store] = React.useContext(context);\n  if (sel) return store(sel);else return [sub, get];\n}\n\nexport { KeyboardControls, useKeyboardControls };\n"]},"metadata":{},"sourceType":"module"}