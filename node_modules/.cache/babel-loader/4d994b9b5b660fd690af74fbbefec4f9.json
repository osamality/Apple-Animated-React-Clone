{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Vector3, QuadraticBezierCurve3 } from 'three';\nimport mergeRefs from 'react-merge-refs';\nimport { Line } from './Line.js';\nconst v = new Vector3();\nconst QuadraticBezierLine = /*#__PURE__*/React.forwardRef(function QuadraticBezierLine({\n  start = [0, 0, 0],\n  end = [0, 0, 0],\n  mid,\n  segments = 20,\n  ...rest\n}, forwardref) {\n  const ref = React.useRef(null);\n  const [curve] = React.useState(() => new QuadraticBezierCurve3(undefined, undefined, undefined));\n  const getPoints = React.useCallback((start, end, mid, segments = 20) => {\n    if (start instanceof Vector3) curve.v0.copy(start);else curve.v0.set(...start);\n    if (end instanceof Vector3) curve.v2.copy(end);else curve.v2.set(...end);\n\n    if (mid instanceof Vector3) {\n      curve.v1.copy(mid);\n    } else {\n      curve.v1.copy(curve.v0.clone().add(curve.v2.clone().sub(curve.v0)).add(v.set(0, curve.v0.y - curve.v2.y, 0)));\n    }\n\n    return curve.getPoints(segments);\n  }, []);\n  React.useLayoutEffect(() => {\n    ref.current.setPoints = (start, end, mid) => {\n      const points = getPoints(start, end, mid);\n      if (ref.current.geometry) ref.current.geometry.setPositions(points.map(p => p.toArray()).flat());\n    };\n  }, []);\n  const points = React.useMemo(() => getPoints(start, end, mid, segments), [start, end, mid, segments]);\n  return /*#__PURE__*/React.createElement(Line, _extends({\n    ref: mergeRefs([ref, forwardref]),\n    points: points\n  }, rest));\n});\nexport { QuadraticBezierLine };","map":{"version":3,"sources":["/Users/osamakhan/Desktop/Apple-Website-Clone-React-master/node_modules/@react-three/drei/core/QuadraticBezierLine.js"],"names":["_extends","React","Vector3","QuadraticBezierCurve3","mergeRefs","Line","v","QuadraticBezierLine","forwardRef","start","end","mid","segments","rest","forwardref","ref","useRef","curve","useState","undefined","getPoints","useCallback","v0","copy","set","v2","v1","clone","add","sub","y","useLayoutEffect","current","setPoints","points","geometry","setPositions","map","p","toArray","flat","useMemo","createElement"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Vector3, QuadraticBezierCurve3 } from 'three';\nimport mergeRefs from 'react-merge-refs';\nimport { Line } from './Line.js';\n\nconst v = new Vector3();\nconst QuadraticBezierLine = /*#__PURE__*/React.forwardRef(function QuadraticBezierLine({\n  start = [0, 0, 0],\n  end = [0, 0, 0],\n  mid,\n  segments = 20,\n  ...rest\n}, forwardref) {\n  const ref = React.useRef(null);\n  const [curve] = React.useState(() => new QuadraticBezierCurve3(undefined, undefined, undefined));\n  const getPoints = React.useCallback((start, end, mid, segments = 20) => {\n    if (start instanceof Vector3) curve.v0.copy(start);else curve.v0.set(...start);\n    if (end instanceof Vector3) curve.v2.copy(end);else curve.v2.set(...end);\n\n    if (mid instanceof Vector3) {\n      curve.v1.copy(mid);\n    } else {\n      curve.v1.copy(curve.v0.clone().add(curve.v2.clone().sub(curve.v0)).add(v.set(0, curve.v0.y - curve.v2.y, 0)));\n    }\n\n    return curve.getPoints(segments);\n  }, []);\n  React.useLayoutEffect(() => {\n    ref.current.setPoints = (start, end, mid) => {\n      const points = getPoints(start, end, mid);\n      if (ref.current.geometry) ref.current.geometry.setPositions(points.map(p => p.toArray()).flat());\n    };\n  }, []);\n  const points = React.useMemo(() => getPoints(start, end, mid, segments), [start, end, mid, segments]);\n  return /*#__PURE__*/React.createElement(Line, _extends({\n    ref: mergeRefs([ref, forwardref]),\n    points: points\n  }, rest));\n});\n\nexport { QuadraticBezierLine };\n"]},"metadata":{},"sourceType":"module"}