{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { AudioListener, AudioLoader } from 'three';\nimport { useThree, useLoader } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nconst PositionalAudio = /*#__PURE__*/React.forwardRef(({\n  url,\n  distance = 1,\n  loop = true,\n  autoplay,\n  ...props\n}, ref) => {\n  const sound = React.useRef();\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const [listener] = React.useState(() => new AudioListener());\n  const buffer = useLoader(AudioLoader, url);\n  React.useEffect(() => {\n    const _sound = sound.current;\n\n    if (_sound) {\n      _sound.setBuffer(buffer);\n\n      _sound.setRefDistance(distance);\n\n      _sound.setLoop(loop);\n\n      if (autoplay && !_sound.isPlaying) _sound.play();\n    }\n  }, [buffer, camera, distance, loop]);\n  React.useEffect(() => {\n    const _sound = sound.current;\n    camera.add(listener);\n    return () => {\n      camera.remove(listener);\n\n      if (_sound) {\n        if (_sound.isPlaying) _sound.stop();\n        if (_sound.source && _sound.source._connected) _sound.disconnect();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"positionalAudio\", _extends({\n    ref: mergeRefs([sound, ref]),\n    args: [listener]\n  }, props));\n});\nexport { PositionalAudio };","map":{"version":3,"sources":["/Users/osamakhan/Desktop/Apple-Website-Clone-React-master/node_modules/@react-three/drei/core/PositionalAudio.js"],"names":["_extends","React","AudioListener","AudioLoader","useThree","useLoader","mergeRefs","PositionalAudio","forwardRef","url","distance","loop","autoplay","props","ref","sound","useRef","camera","listener","useState","buffer","useEffect","_sound","current","setBuffer","setRefDistance","setLoop","isPlaying","play","add","remove","stop","source","_connected","disconnect","createElement","args"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,MAAMC,eAAe,GAAG,aAAaN,KAAK,CAACO,UAAN,CAAiB,CAAC;AACrDC,EAAAA,GADqD;AAErDC,EAAAA,QAAQ,GAAG,CAF0C;AAGrDC,EAAAA,IAAI,GAAG,IAH8C;AAIrDC,EAAAA,QAJqD;AAKrD,KAAGC;AALkD,CAAD,EAMnDC,GANmD,KAM3C;AACT,QAAMC,KAAK,GAAGd,KAAK,CAACe,MAAN,EAAd;AACA,QAAMC,MAAM,GAAGb,QAAQ,CAAC,CAAC;AACvBa,IAAAA;AADuB,GAAD,KAElBA,MAFiB,CAAvB;AAGA,QAAM,CAACC,QAAD,IAAajB,KAAK,CAACkB,QAAN,CAAe,MAAM,IAAIjB,aAAJ,EAArB,CAAnB;AACA,QAAMkB,MAAM,GAAGf,SAAS,CAACF,WAAD,EAAcM,GAAd,CAAxB;AACAR,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpB,UAAMC,MAAM,GAAGP,KAAK,CAACQ,OAArB;;AAEA,QAAID,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,SAAP,CAAiBJ,MAAjB;;AAEAE,MAAAA,MAAM,CAACG,cAAP,CAAsBf,QAAtB;;AAEAY,MAAAA,MAAM,CAACI,OAAP,CAAef,IAAf;;AAEA,UAAIC,QAAQ,IAAI,CAACU,MAAM,CAACK,SAAxB,EAAmCL,MAAM,CAACM,IAAP;AACpC;AACF,GAZD,EAYG,CAACR,MAAD,EAASH,MAAT,EAAiBP,QAAjB,EAA2BC,IAA3B,CAZH;AAaAV,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpB,UAAMC,MAAM,GAAGP,KAAK,CAACQ,OAArB;AACAN,IAAAA,MAAM,CAACY,GAAP,CAAWX,QAAX;AACA,WAAO,MAAM;AACXD,MAAAA,MAAM,CAACa,MAAP,CAAcZ,QAAd;;AAEA,UAAII,MAAJ,EAAY;AACV,YAAIA,MAAM,CAACK,SAAX,EAAsBL,MAAM,CAACS,IAAP;AACtB,YAAIT,MAAM,CAACU,MAAP,IAAiBV,MAAM,CAACU,MAAP,CAAcC,UAAnC,EAA+CX,MAAM,CAACY,UAAP;AAChD;AACF,KAPD;AAQD,GAXD,EAWG,EAXH;AAYA,SAAO,aAAajC,KAAK,CAACkC,aAAN,CAAoB,iBAApB,EAAuCnC,QAAQ,CAAC;AAClEc,IAAAA,GAAG,EAAER,SAAS,CAAC,CAACS,KAAD,EAAQD,GAAR,CAAD,CADoD;AAElEsB,IAAAA,IAAI,EAAE,CAAClB,QAAD;AAF4D,GAAD,EAGhEL,KAHgE,CAA/C,CAApB;AAID,CA1CoC,CAArC;AA4CA,SAASN,eAAT","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { AudioListener, AudioLoader } from 'three';\nimport { useThree, useLoader } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\n\nconst PositionalAudio = /*#__PURE__*/React.forwardRef(({\n  url,\n  distance = 1,\n  loop = true,\n  autoplay,\n  ...props\n}, ref) => {\n  const sound = React.useRef();\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const [listener] = React.useState(() => new AudioListener());\n  const buffer = useLoader(AudioLoader, url);\n  React.useEffect(() => {\n    const _sound = sound.current;\n\n    if (_sound) {\n      _sound.setBuffer(buffer);\n\n      _sound.setRefDistance(distance);\n\n      _sound.setLoop(loop);\n\n      if (autoplay && !_sound.isPlaying) _sound.play();\n    }\n  }, [buffer, camera, distance, loop]);\n  React.useEffect(() => {\n    const _sound = sound.current;\n    camera.add(listener);\n    return () => {\n      camera.remove(listener);\n\n      if (_sound) {\n        if (_sound.isPlaying) _sound.stop();\n        if (_sound.source && _sound.source._connected) _sound.disconnect();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"positionalAudio\", _extends({\n    ref: mergeRefs([sound, ref]),\n    args: [listener]\n  }, props));\n});\n\nexport { PositionalAudio };\n"]},"metadata":{},"sourceType":"module"}