{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { MapControls as MapControls$1 } from 'three-stdlib';\nconst MapControls = /*#__PURE__*/React.forwardRef((props = {\n  enableDamping: true\n}, ref) => {\n  const {\n    domElement,\n    camera,\n    makeDefault,\n    onChange,\n    onStart,\n    onEnd,\n    ...rest\n  } = props;\n  const invalidate = useThree(state => state.invalidate);\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const explCamera = camera || defaultCamera;\n  const controls = React.useMemo(() => new MapControls$1(explCamera), [explCamera]);\n  React.useEffect(() => {\n    controls.connect(explDomElement);\n\n    const callback = e => {\n      invalidate();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      controls.dispose();\n      controls.removeEventListener('change', callback);\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n    };\n  }, [onChange, onStart, onEnd, controls, invalidate, explDomElement]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  useFrame(() => controls.update(), -1);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: true\n  }, rest));\n});\nexport { MapControls };","map":{"version":3,"sources":["/Users/osamakhan/Desktop/dev/Apple-Animated-React-Clone/node_modules/@react-three/drei/core/MapControls.js"],"names":["_extends","useThree","useFrame","React","MapControls","MapControls$1","forwardRef","props","enableDamping","ref","domElement","camera","makeDefault","onChange","onStart","onEnd","rest","invalidate","state","defaultCamera","gl","events","set","get","explDomElement","connected","explCamera","controls","useMemo","useEffect","connect","callback","e","addEventListener","dispose","removeEventListener","old","update","createElement","object"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { MapControls as MapControls$1 } from 'three-stdlib';\n\nconst MapControls = /*#__PURE__*/React.forwardRef((props = {\n  enableDamping: true\n}, ref) => {\n  const {\n    domElement,\n    camera,\n    makeDefault,\n    onChange,\n    onStart,\n    onEnd,\n    ...rest\n  } = props;\n  const invalidate = useThree(state => state.invalidate);\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const explCamera = camera || defaultCamera;\n  const controls = React.useMemo(() => new MapControls$1(explCamera), [explCamera]);\n  React.useEffect(() => {\n    controls.connect(explDomElement);\n\n    const callback = e => {\n      invalidate();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      controls.dispose();\n      controls.removeEventListener('change', callback);\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n    };\n  }, [onChange, onStart, onEnd, controls, invalidate, explDomElement]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  useFrame(() => controls.update(), -1);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: true\n  }, rest));\n});\n\nexport { MapControls };\n"]},"metadata":{},"sourceType":"module"}