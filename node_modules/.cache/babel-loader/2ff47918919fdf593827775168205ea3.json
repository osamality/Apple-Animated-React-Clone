{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport TempNode from '../core/TempNode.js';\nimport ExpressionNode from '../core/ExpressionNode.js';\nimport JoinNode from '../utils/JoinNode.js';\nimport SplitNode from '../utils/SplitNode.js';\nimport OperatorNode from './OperatorNode.js';\n\nclass MathNode extends TempNode {\n  // 1 input\n  // 2 inputs\n  // 3 inputs\n  constructor(method, aNode, bNode = null, cNode = null) {\n    super();\n    this.method = method;\n    this.aNode = aNode;\n    this.bNode = bNode;\n    this.cNode = cNode;\n  }\n\n  getInputType(builder) {\n    const aType = this.aNode.getNodeType(builder);\n    const bType = this.bNode ? this.bNode.getNodeType(builder) : null;\n    const cType = this.cNode ? this.cNode.getNodeType(builder) : null;\n    const aLen = builder.getTypeLength(aType);\n    const bLen = builder.getTypeLength(bType);\n    const cLen = builder.getTypeLength(cType);\n\n    if (aLen > bLen && aLen > cLen) {\n      return aType;\n    } else if (bLen > cLen) {\n      return bType;\n    } else if (cLen > aLen) {\n      return cType;\n    }\n\n    return aType;\n  }\n\n  getNodeType(builder) {\n    const method = this.method;\n\n    if (method === MathNode.LENGTH || method === MathNode.DISTANCE || method === MathNode.DOT) {\n      return 'float';\n    } else if (method === MathNode.CROSS) {\n      return 'vec3';\n    } else {\n      return this.getInputType(builder);\n    }\n  }\n\n  generate(builder, output) {\n    const method = this.method;\n    const type = this.getNodeType(builder);\n    const inputType = this.getInputType(builder);\n    const a = this.aNode;\n    const b = this.bNode;\n    const c = this.cNode;\n    const isWebGL = builder.renderer.isWebGLRenderer === true;\n\n    if (isWebGL && (method === MathNode.DFDX || method === MathNode.DFDY) && output === 'vec3') {\n      // Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n      return new JoinNode([new MathNode(method, new SplitNode(a, 'x')), new MathNode(method, new SplitNode(a, 'y')), new MathNode(method, new SplitNode(a, 'z'))]).build(builder);\n    } else if (method === MathNode.TRANSFORM_DIRECTION) {\n      // dir can be either a direction vector or a normal vector\n      // upper-left 3x3 of matrix is assumed to be orthogonal\n      let tA = a;\n      let tB = b;\n\n      if (builder.isMatrix(tA.getNodeType(builder))) {\n        tB = new ExpressionNode(`${builder.getType('vec4')}( ${tB.build(builder, 'vec3')}, 0.0 )`, 'vec4');\n      } else {\n        tA = new ExpressionNode(`${builder.getType('vec4')}( ${tA.build(builder, 'vec3')}, 0.0 )`, 'vec4');\n      }\n\n      const mulNode = new SplitNode(new OperatorNode('*', tA, tB), 'xyz');\n      return new MathNode(MathNode.NORMALIZE, mulNode).build(builder);\n    } else if (method === MathNode.SATURATE) {\n      return builder.format(`clamp( ${a.build(builder, inputType)}, 0.0, 1.0 )`, type, output);\n    } else if (method === MathNode.NEGATE) {\n      return builder.format('( -' + a.build(builder, inputType) + ' )', type, output);\n    } else if (method === MathNode.INVERT) {\n      return builder.format('( 1.0 - ' + a.build(builder, inputType) + ' )', type, output);\n    } else {\n      const params = [];\n\n      if (method === MathNode.CROSS) {\n        params.push(a.build(builder, type), b.build(builder, type));\n      } else if (method === MathNode.STEP) {\n        params.push(a.build(builder, builder.getTypeLength(a.getNodeType(builder)) === 1 ? 'float' : inputType), b.build(builder, inputType));\n      } else if (isWebGL && (method === MathNode.MIN || method === MathNode.MAX) || method === MathNode.MOD) {\n        params.push(a.build(builder, inputType), b.build(builder, builder.getTypeLength(b.getNodeType(builder)) === 1 ? 'float' : inputType));\n      } else if (method === MathNode.REFRACT) {\n        params.push(a.build(builder, inputType), b.build(builder, inputType), c.build(builder, 'float'));\n      } else if (method === MathNode.MIX) {\n        params.push(a.build(builder, inputType), b.build(builder, inputType), c.build(builder, builder.getTypeLength(c.getNodeType(builder)) === 1 ? 'float' : inputType));\n      } else {\n        params.push(a.build(builder, inputType));\n\n        if (c !== null) {\n          params.push(b.build(builder, inputType), c.build(builder, inputType));\n        } else if (b !== null) {\n          params.push(b.build(builder, inputType));\n        }\n      }\n\n      return builder.format(`${builder.getMethod(method)}( ${params.join(', ')} )`, type, output);\n    }\n  }\n\n  serialize(data) {\n    super.serialize(data);\n    data.method = this.method;\n  }\n\n  deserialize(data) {\n    super.deserialize(data);\n    this.method = data.method;\n  }\n\n}\n\n_defineProperty(MathNode, \"RAD\", 'radians');\n\n_defineProperty(MathNode, \"DEG\", 'degrees');\n\n_defineProperty(MathNode, \"EXP\", 'exp');\n\n_defineProperty(MathNode, \"EXP2\", 'exp2');\n\n_defineProperty(MathNode, \"LOG\", 'log');\n\n_defineProperty(MathNode, \"LOG2\", 'log2');\n\n_defineProperty(MathNode, \"SQRT\", 'sqrt');\n\n_defineProperty(MathNode, \"INV_SQRT\", 'inversesqrt');\n\n_defineProperty(MathNode, \"FLOOR\", 'floor');\n\n_defineProperty(MathNode, \"CEIL\", 'ceil');\n\n_defineProperty(MathNode, \"NORMALIZE\", 'normalize');\n\n_defineProperty(MathNode, \"FRACT\", 'fract');\n\n_defineProperty(MathNode, \"SIN\", 'sin');\n\n_defineProperty(MathNode, \"COS\", 'cos');\n\n_defineProperty(MathNode, \"TAN\", 'tan');\n\n_defineProperty(MathNode, \"ASIN\", 'asin');\n\n_defineProperty(MathNode, \"ACOS\", 'acos');\n\n_defineProperty(MathNode, \"ATAN\", 'atan');\n\n_defineProperty(MathNode, \"ABS\", 'abs');\n\n_defineProperty(MathNode, \"SIGN\", 'sign');\n\n_defineProperty(MathNode, \"LENGTH\", 'length');\n\n_defineProperty(MathNode, \"NEGATE\", 'negate');\n\n_defineProperty(MathNode, \"INVERT\", 'invert');\n\n_defineProperty(MathNode, \"DFDX\", 'dFdx');\n\n_defineProperty(MathNode, \"DFDY\", 'dFdy');\n\n_defineProperty(MathNode, \"SATURATE\", 'saturate');\n\n_defineProperty(MathNode, \"ROUND\", 'round');\n\n_defineProperty(MathNode, \"MIN\", 'min');\n\n_defineProperty(MathNode, \"MAX\", 'max');\n\n_defineProperty(MathNode, \"MOD\", 'mod');\n\n_defineProperty(MathNode, \"STEP\", 'step');\n\n_defineProperty(MathNode, \"REFLECT\", 'reflect');\n\n_defineProperty(MathNode, \"DISTANCE\", 'distance');\n\n_defineProperty(MathNode, \"DOT\", 'dot');\n\n_defineProperty(MathNode, \"CROSS\", 'cross');\n\n_defineProperty(MathNode, \"POW\", 'pow');\n\n_defineProperty(MathNode, \"TRANSFORM_DIRECTION\", 'transformDirection');\n\n_defineProperty(MathNode, \"MIX\", 'mix');\n\n_defineProperty(MathNode, \"CLAMP\", 'clamp');\n\n_defineProperty(MathNode, \"REFRACT\", 'refract');\n\n_defineProperty(MathNode, \"SMOOTHSTEP\", 'smoothstep');\n\n_defineProperty(MathNode, \"FACEFORWARD\", 'faceforward');\n\nexport default MathNode;","map":{"version":3,"sources":["/Users/osamakhan/Desktop/Apple-Website-Clone-React-master/node_modules/three-stdlib/nodes/math/MathNode.js"],"names":["_defineProperty","TempNode","ExpressionNode","JoinNode","SplitNode","OperatorNode","MathNode","constructor","method","aNode","bNode","cNode","getInputType","builder","aType","getNodeType","bType","cType","aLen","getTypeLength","bLen","cLen","LENGTH","DISTANCE","DOT","CROSS","generate","output","type","inputType","a","b","c","isWebGL","renderer","isWebGLRenderer","DFDX","DFDY","build","TRANSFORM_DIRECTION","tA","tB","isMatrix","getType","mulNode","NORMALIZE","SATURATE","format","NEGATE","INVERT","params","push","STEP","MIN","MAX","MOD","REFRACT","MIX","getMethod","join","serialize","data","deserialize"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,MAAMC,QAAN,SAAuBL,QAAvB,CAAgC;AAC9B;AACA;AACA;AACAM,EAAAA,WAAW,CAACC,MAAD,EAASC,KAAT,EAAgBC,KAAK,GAAG,IAAxB,EAA8BC,KAAK,GAAG,IAAtC,EAA4C;AACrD;AACA,SAAKH,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,KAAL,GAAaA,KAAb;AACD;;AAEDC,EAAAA,YAAY,CAACC,OAAD,EAAU;AACpB,UAAMC,KAAK,GAAG,KAAKL,KAAL,CAAWM,WAAX,CAAuBF,OAAvB,CAAd;AACA,UAAMG,KAAK,GAAG,KAAKN,KAAL,GAAa,KAAKA,KAAL,CAAWK,WAAX,CAAuBF,OAAvB,CAAb,GAA+C,IAA7D;AACA,UAAMI,KAAK,GAAG,KAAKN,KAAL,GAAa,KAAKA,KAAL,CAAWI,WAAX,CAAuBF,OAAvB,CAAb,GAA+C,IAA7D;AACA,UAAMK,IAAI,GAAGL,OAAO,CAACM,aAAR,CAAsBL,KAAtB,CAAb;AACA,UAAMM,IAAI,GAAGP,OAAO,CAACM,aAAR,CAAsBH,KAAtB,CAAb;AACA,UAAMK,IAAI,GAAGR,OAAO,CAACM,aAAR,CAAsBF,KAAtB,CAAb;;AAEA,QAAIC,IAAI,GAAGE,IAAP,IAAeF,IAAI,GAAGG,IAA1B,EAAgC;AAC9B,aAAOP,KAAP;AACD,KAFD,MAEO,IAAIM,IAAI,GAAGC,IAAX,EAAiB;AACtB,aAAOL,KAAP;AACD,KAFM,MAEA,IAAIK,IAAI,GAAGH,IAAX,EAAiB;AACtB,aAAOD,KAAP;AACD;;AAED,WAAOH,KAAP;AACD;;AAEDC,EAAAA,WAAW,CAACF,OAAD,EAAU;AACnB,UAAML,MAAM,GAAG,KAAKA,MAApB;;AAEA,QAAIA,MAAM,KAAKF,QAAQ,CAACgB,MAApB,IAA8Bd,MAAM,KAAKF,QAAQ,CAACiB,QAAlD,IAA8Df,MAAM,KAAKF,QAAQ,CAACkB,GAAtF,EAA2F;AACzF,aAAO,OAAP;AACD,KAFD,MAEO,IAAIhB,MAAM,KAAKF,QAAQ,CAACmB,KAAxB,EAA+B;AACpC,aAAO,MAAP;AACD,KAFM,MAEA;AACL,aAAO,KAAKb,YAAL,CAAkBC,OAAlB,CAAP;AACD;AACF;;AAEDa,EAAAA,QAAQ,CAACb,OAAD,EAAUc,MAAV,EAAkB;AACxB,UAAMnB,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMoB,IAAI,GAAG,KAAKb,WAAL,CAAiBF,OAAjB,CAAb;AACA,UAAMgB,SAAS,GAAG,KAAKjB,YAAL,CAAkBC,OAAlB,CAAlB;AACA,UAAMiB,CAAC,GAAG,KAAKrB,KAAf;AACA,UAAMsB,CAAC,GAAG,KAAKrB,KAAf;AACA,UAAMsB,CAAC,GAAG,KAAKrB,KAAf;AACA,UAAMsB,OAAO,GAAGpB,OAAO,CAACqB,QAAR,CAAiBC,eAAjB,KAAqC,IAArD;;AAEA,QAAIF,OAAO,KAAKzB,MAAM,KAAKF,QAAQ,CAAC8B,IAApB,IAA4B5B,MAAM,KAAKF,QAAQ,CAAC+B,IAArD,CAAP,IAAqEV,MAAM,KAAK,MAApF,EAA4F;AAC1F;AACA,aAAO,IAAIxB,QAAJ,CAAa,CAAC,IAAIG,QAAJ,CAAaE,MAAb,EAAqB,IAAIJ,SAAJ,CAAc0B,CAAd,EAAiB,GAAjB,CAArB,CAAD,EAA8C,IAAIxB,QAAJ,CAAaE,MAAb,EAAqB,IAAIJ,SAAJ,CAAc0B,CAAd,EAAiB,GAAjB,CAArB,CAA9C,EAA2F,IAAIxB,QAAJ,CAAaE,MAAb,EAAqB,IAAIJ,SAAJ,CAAc0B,CAAd,EAAiB,GAAjB,CAArB,CAA3F,CAAb,EAAsJQ,KAAtJ,CAA4JzB,OAA5J,CAAP;AACD,KAHD,MAGO,IAAIL,MAAM,KAAKF,QAAQ,CAACiC,mBAAxB,EAA6C;AAClD;AACA;AACA,UAAIC,EAAE,GAAGV,CAAT;AACA,UAAIW,EAAE,GAAGV,CAAT;;AAEA,UAAIlB,OAAO,CAAC6B,QAAR,CAAiBF,EAAE,CAACzB,WAAH,CAAeF,OAAf,CAAjB,CAAJ,EAA+C;AAC7C4B,QAAAA,EAAE,GAAG,IAAIvC,cAAJ,CAAoB,GAAEW,OAAO,CAAC8B,OAAR,CAAgB,MAAhB,CAAwB,KAAIF,EAAE,CAACH,KAAH,CAASzB,OAAT,EAAkB,MAAlB,CAA0B,SAA5E,EAAsF,MAAtF,CAAL;AACD,OAFD,MAEO;AACL2B,QAAAA,EAAE,GAAG,IAAItC,cAAJ,CAAoB,GAAEW,OAAO,CAAC8B,OAAR,CAAgB,MAAhB,CAAwB,KAAIH,EAAE,CAACF,KAAH,CAASzB,OAAT,EAAkB,MAAlB,CAA0B,SAA5E,EAAsF,MAAtF,CAAL;AACD;;AAED,YAAM+B,OAAO,GAAG,IAAIxC,SAAJ,CAAc,IAAIC,YAAJ,CAAiB,GAAjB,EAAsBmC,EAAtB,EAA0BC,EAA1B,CAAd,EAA6C,KAA7C,CAAhB;AACA,aAAO,IAAInC,QAAJ,CAAaA,QAAQ,CAACuC,SAAtB,EAAiCD,OAAjC,EAA0CN,KAA1C,CAAgDzB,OAAhD,CAAP;AACD,KAdM,MAcA,IAAIL,MAAM,KAAKF,QAAQ,CAACwC,QAAxB,EAAkC;AACvC,aAAOjC,OAAO,CAACkC,MAAR,CAAgB,UAASjB,CAAC,CAACQ,KAAF,CAAQzB,OAAR,EAAiBgB,SAAjB,CAA4B,cAArD,EAAoED,IAApE,EAA0ED,MAA1E,CAAP;AACD,KAFM,MAEA,IAAInB,MAAM,KAAKF,QAAQ,CAAC0C,MAAxB,EAAgC;AACrC,aAAOnC,OAAO,CAACkC,MAAR,CAAe,QAAQjB,CAAC,CAACQ,KAAF,CAAQzB,OAAR,EAAiBgB,SAAjB,CAAR,GAAsC,IAArD,EAA2DD,IAA3D,EAAiED,MAAjE,CAAP;AACD,KAFM,MAEA,IAAInB,MAAM,KAAKF,QAAQ,CAAC2C,MAAxB,EAAgC;AACrC,aAAOpC,OAAO,CAACkC,MAAR,CAAe,aAAajB,CAAC,CAACQ,KAAF,CAAQzB,OAAR,EAAiBgB,SAAjB,CAAb,GAA2C,IAA1D,EAAgED,IAAhE,EAAsED,MAAtE,CAAP;AACD,KAFM,MAEA;AACL,YAAMuB,MAAM,GAAG,EAAf;;AAEA,UAAI1C,MAAM,KAAKF,QAAQ,CAACmB,KAAxB,EAA+B;AAC7ByB,QAAAA,MAAM,CAACC,IAAP,CAAYrB,CAAC,CAACQ,KAAF,CAAQzB,OAAR,EAAiBe,IAAjB,CAAZ,EAAoCG,CAAC,CAACO,KAAF,CAAQzB,OAAR,EAAiBe,IAAjB,CAApC;AACD,OAFD,MAEO,IAAIpB,MAAM,KAAKF,QAAQ,CAAC8C,IAAxB,EAA8B;AACnCF,QAAAA,MAAM,CAACC,IAAP,CAAYrB,CAAC,CAACQ,KAAF,CAAQzB,OAAR,EAAiBA,OAAO,CAACM,aAAR,CAAsBW,CAAC,CAACf,WAAF,CAAcF,OAAd,CAAtB,MAAkD,CAAlD,GAAsD,OAAtD,GAAgEgB,SAAjF,CAAZ,EAAyGE,CAAC,CAACO,KAAF,CAAQzB,OAAR,EAAiBgB,SAAjB,CAAzG;AACD,OAFM,MAEA,IAAII,OAAO,KAAKzB,MAAM,KAAKF,QAAQ,CAAC+C,GAApB,IAA2B7C,MAAM,KAAKF,QAAQ,CAACgD,GAApD,CAAP,IAAmE9C,MAAM,KAAKF,QAAQ,CAACiD,GAA3F,EAAgG;AACrGL,QAAAA,MAAM,CAACC,IAAP,CAAYrB,CAAC,CAACQ,KAAF,CAAQzB,OAAR,EAAiBgB,SAAjB,CAAZ,EAAyCE,CAAC,CAACO,KAAF,CAAQzB,OAAR,EAAiBA,OAAO,CAACM,aAAR,CAAsBY,CAAC,CAAChB,WAAF,CAAcF,OAAd,CAAtB,MAAkD,CAAlD,GAAsD,OAAtD,GAAgEgB,SAAjF,CAAzC;AACD,OAFM,MAEA,IAAIrB,MAAM,KAAKF,QAAQ,CAACkD,OAAxB,EAAiC;AACtCN,QAAAA,MAAM,CAACC,IAAP,CAAYrB,CAAC,CAACQ,KAAF,CAAQzB,OAAR,EAAiBgB,SAAjB,CAAZ,EAAyCE,CAAC,CAACO,KAAF,CAAQzB,OAAR,EAAiBgB,SAAjB,CAAzC,EAAsEG,CAAC,CAACM,KAAF,CAAQzB,OAAR,EAAiB,OAAjB,CAAtE;AACD,OAFM,MAEA,IAAIL,MAAM,KAAKF,QAAQ,CAACmD,GAAxB,EAA6B;AAClCP,QAAAA,MAAM,CAACC,IAAP,CAAYrB,CAAC,CAACQ,KAAF,CAAQzB,OAAR,EAAiBgB,SAAjB,CAAZ,EAAyCE,CAAC,CAACO,KAAF,CAAQzB,OAAR,EAAiBgB,SAAjB,CAAzC,EAAsEG,CAAC,CAACM,KAAF,CAAQzB,OAAR,EAAiBA,OAAO,CAACM,aAAR,CAAsBa,CAAC,CAACjB,WAAF,CAAcF,OAAd,CAAtB,MAAkD,CAAlD,GAAsD,OAAtD,GAAgEgB,SAAjF,CAAtE;AACD,OAFM,MAEA;AACLqB,QAAAA,MAAM,CAACC,IAAP,CAAYrB,CAAC,CAACQ,KAAF,CAAQzB,OAAR,EAAiBgB,SAAjB,CAAZ;;AAEA,YAAIG,CAAC,KAAK,IAAV,EAAgB;AACdkB,UAAAA,MAAM,CAACC,IAAP,CAAYpB,CAAC,CAACO,KAAF,CAAQzB,OAAR,EAAiBgB,SAAjB,CAAZ,EAAyCG,CAAC,CAACM,KAAF,CAAQzB,OAAR,EAAiBgB,SAAjB,CAAzC;AACD,SAFD,MAEO,IAAIE,CAAC,KAAK,IAAV,EAAgB;AACrBmB,UAAAA,MAAM,CAACC,IAAP,CAAYpB,CAAC,CAACO,KAAF,CAAQzB,OAAR,EAAiBgB,SAAjB,CAAZ;AACD;AACF;;AAED,aAAOhB,OAAO,CAACkC,MAAR,CAAgB,GAAElC,OAAO,CAAC6C,SAAR,CAAkBlD,MAAlB,CAA0B,KAAI0C,MAAM,CAACS,IAAP,CAAY,IAAZ,CAAkB,IAAlE,EAAuE/B,IAAvE,EAA6ED,MAA7E,CAAP;AACD;AACF;;AAEDiC,EAAAA,SAAS,CAACC,IAAD,EAAO;AACd,UAAMD,SAAN,CAAgBC,IAAhB;AACAA,IAAAA,IAAI,CAACrD,MAAL,GAAc,KAAKA,MAAnB;AACD;;AAEDsD,EAAAA,WAAW,CAACD,IAAD,EAAO;AAChB,UAAMC,WAAN,CAAkBD,IAAlB;AACA,SAAKrD,MAAL,GAAcqD,IAAI,CAACrD,MAAnB;AACD;;AA9G6B;;AAkHhCR,eAAe,CAACM,QAAD,EAAW,KAAX,EAAkB,SAAlB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,KAAX,EAAkB,SAAlB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,KAAX,EAAkB,KAAlB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,MAAX,EAAmB,MAAnB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,KAAX,EAAkB,KAAlB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,MAAX,EAAmB,MAAnB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,MAAX,EAAmB,MAAnB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,UAAX,EAAuB,aAAvB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,OAAX,EAAoB,OAApB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,MAAX,EAAmB,MAAnB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,WAAX,EAAwB,WAAxB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,OAAX,EAAoB,OAApB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,KAAX,EAAkB,KAAlB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,KAAX,EAAkB,KAAlB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,KAAX,EAAkB,KAAlB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,MAAX,EAAmB,MAAnB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,MAAX,EAAmB,MAAnB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,MAAX,EAAmB,MAAnB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,KAAX,EAAkB,KAAlB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,MAAX,EAAmB,MAAnB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,QAAX,EAAqB,QAArB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,QAAX,EAAqB,QAArB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,QAAX,EAAqB,QAArB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,MAAX,EAAmB,MAAnB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,MAAX,EAAmB,MAAnB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,UAAX,EAAuB,UAAvB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,OAAX,EAAoB,OAApB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,KAAX,EAAkB,KAAlB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,KAAX,EAAkB,KAAlB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,KAAX,EAAkB,KAAlB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,MAAX,EAAmB,MAAnB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,SAAX,EAAsB,SAAtB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,UAAX,EAAuB,UAAvB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,KAAX,EAAkB,KAAlB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,OAAX,EAAoB,OAApB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,KAAX,EAAkB,KAAlB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,qBAAX,EAAkC,oBAAlC,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,KAAX,EAAkB,KAAlB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,OAAX,EAAoB,OAApB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,SAAX,EAAsB,SAAtB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,YAAX,EAAyB,YAAzB,CAAf;;AAEAN,eAAe,CAACM,QAAD,EAAW,aAAX,EAA0B,aAA1B,CAAf;;AAEA,eAAeA,QAAf","sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport TempNode from '../core/TempNode.js';\nimport ExpressionNode from '../core/ExpressionNode.js';\nimport JoinNode from '../utils/JoinNode.js';\nimport SplitNode from '../utils/SplitNode.js';\nimport OperatorNode from './OperatorNode.js';\n\nclass MathNode extends TempNode {\n  // 1 input\n  // 2 inputs\n  // 3 inputs\n  constructor(method, aNode, bNode = null, cNode = null) {\n    super();\n    this.method = method;\n    this.aNode = aNode;\n    this.bNode = bNode;\n    this.cNode = cNode;\n  }\n\n  getInputType(builder) {\n    const aType = this.aNode.getNodeType(builder);\n    const bType = this.bNode ? this.bNode.getNodeType(builder) : null;\n    const cType = this.cNode ? this.cNode.getNodeType(builder) : null;\n    const aLen = builder.getTypeLength(aType);\n    const bLen = builder.getTypeLength(bType);\n    const cLen = builder.getTypeLength(cType);\n\n    if (aLen > bLen && aLen > cLen) {\n      return aType;\n    } else if (bLen > cLen) {\n      return bType;\n    } else if (cLen > aLen) {\n      return cType;\n    }\n\n    return aType;\n  }\n\n  getNodeType(builder) {\n    const method = this.method;\n\n    if (method === MathNode.LENGTH || method === MathNode.DISTANCE || method === MathNode.DOT) {\n      return 'float';\n    } else if (method === MathNode.CROSS) {\n      return 'vec3';\n    } else {\n      return this.getInputType(builder);\n    }\n  }\n\n  generate(builder, output) {\n    const method = this.method;\n    const type = this.getNodeType(builder);\n    const inputType = this.getInputType(builder);\n    const a = this.aNode;\n    const b = this.bNode;\n    const c = this.cNode;\n    const isWebGL = builder.renderer.isWebGLRenderer === true;\n\n    if (isWebGL && (method === MathNode.DFDX || method === MathNode.DFDY) && output === 'vec3') {\n      // Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n      return new JoinNode([new MathNode(method, new SplitNode(a, 'x')), new MathNode(method, new SplitNode(a, 'y')), new MathNode(method, new SplitNode(a, 'z'))]).build(builder);\n    } else if (method === MathNode.TRANSFORM_DIRECTION) {\n      // dir can be either a direction vector or a normal vector\n      // upper-left 3x3 of matrix is assumed to be orthogonal\n      let tA = a;\n      let tB = b;\n\n      if (builder.isMatrix(tA.getNodeType(builder))) {\n        tB = new ExpressionNode(`${builder.getType('vec4')}( ${tB.build(builder, 'vec3')}, 0.0 )`, 'vec4');\n      } else {\n        tA = new ExpressionNode(`${builder.getType('vec4')}( ${tA.build(builder, 'vec3')}, 0.0 )`, 'vec4');\n      }\n\n      const mulNode = new SplitNode(new OperatorNode('*', tA, tB), 'xyz');\n      return new MathNode(MathNode.NORMALIZE, mulNode).build(builder);\n    } else if (method === MathNode.SATURATE) {\n      return builder.format(`clamp( ${a.build(builder, inputType)}, 0.0, 1.0 )`, type, output);\n    } else if (method === MathNode.NEGATE) {\n      return builder.format('( -' + a.build(builder, inputType) + ' )', type, output);\n    } else if (method === MathNode.INVERT) {\n      return builder.format('( 1.0 - ' + a.build(builder, inputType) + ' )', type, output);\n    } else {\n      const params = [];\n\n      if (method === MathNode.CROSS) {\n        params.push(a.build(builder, type), b.build(builder, type));\n      } else if (method === MathNode.STEP) {\n        params.push(a.build(builder, builder.getTypeLength(a.getNodeType(builder)) === 1 ? 'float' : inputType), b.build(builder, inputType));\n      } else if (isWebGL && (method === MathNode.MIN || method === MathNode.MAX) || method === MathNode.MOD) {\n        params.push(a.build(builder, inputType), b.build(builder, builder.getTypeLength(b.getNodeType(builder)) === 1 ? 'float' : inputType));\n      } else if (method === MathNode.REFRACT) {\n        params.push(a.build(builder, inputType), b.build(builder, inputType), c.build(builder, 'float'));\n      } else if (method === MathNode.MIX) {\n        params.push(a.build(builder, inputType), b.build(builder, inputType), c.build(builder, builder.getTypeLength(c.getNodeType(builder)) === 1 ? 'float' : inputType));\n      } else {\n        params.push(a.build(builder, inputType));\n\n        if (c !== null) {\n          params.push(b.build(builder, inputType), c.build(builder, inputType));\n        } else if (b !== null) {\n          params.push(b.build(builder, inputType));\n        }\n      }\n\n      return builder.format(`${builder.getMethod(method)}( ${params.join(', ')} )`, type, output);\n    }\n  }\n\n  serialize(data) {\n    super.serialize(data);\n    data.method = this.method;\n  }\n\n  deserialize(data) {\n    super.deserialize(data);\n    this.method = data.method;\n  }\n\n}\n\n_defineProperty(MathNode, \"RAD\", 'radians');\n\n_defineProperty(MathNode, \"DEG\", 'degrees');\n\n_defineProperty(MathNode, \"EXP\", 'exp');\n\n_defineProperty(MathNode, \"EXP2\", 'exp2');\n\n_defineProperty(MathNode, \"LOG\", 'log');\n\n_defineProperty(MathNode, \"LOG2\", 'log2');\n\n_defineProperty(MathNode, \"SQRT\", 'sqrt');\n\n_defineProperty(MathNode, \"INV_SQRT\", 'inversesqrt');\n\n_defineProperty(MathNode, \"FLOOR\", 'floor');\n\n_defineProperty(MathNode, \"CEIL\", 'ceil');\n\n_defineProperty(MathNode, \"NORMALIZE\", 'normalize');\n\n_defineProperty(MathNode, \"FRACT\", 'fract');\n\n_defineProperty(MathNode, \"SIN\", 'sin');\n\n_defineProperty(MathNode, \"COS\", 'cos');\n\n_defineProperty(MathNode, \"TAN\", 'tan');\n\n_defineProperty(MathNode, \"ASIN\", 'asin');\n\n_defineProperty(MathNode, \"ACOS\", 'acos');\n\n_defineProperty(MathNode, \"ATAN\", 'atan');\n\n_defineProperty(MathNode, \"ABS\", 'abs');\n\n_defineProperty(MathNode, \"SIGN\", 'sign');\n\n_defineProperty(MathNode, \"LENGTH\", 'length');\n\n_defineProperty(MathNode, \"NEGATE\", 'negate');\n\n_defineProperty(MathNode, \"INVERT\", 'invert');\n\n_defineProperty(MathNode, \"DFDX\", 'dFdx');\n\n_defineProperty(MathNode, \"DFDY\", 'dFdy');\n\n_defineProperty(MathNode, \"SATURATE\", 'saturate');\n\n_defineProperty(MathNode, \"ROUND\", 'round');\n\n_defineProperty(MathNode, \"MIN\", 'min');\n\n_defineProperty(MathNode, \"MAX\", 'max');\n\n_defineProperty(MathNode, \"MOD\", 'mod');\n\n_defineProperty(MathNode, \"STEP\", 'step');\n\n_defineProperty(MathNode, \"REFLECT\", 'reflect');\n\n_defineProperty(MathNode, \"DISTANCE\", 'distance');\n\n_defineProperty(MathNode, \"DOT\", 'dot');\n\n_defineProperty(MathNode, \"CROSS\", 'cross');\n\n_defineProperty(MathNode, \"POW\", 'pow');\n\n_defineProperty(MathNode, \"TRANSFORM_DIRECTION\", 'transformDirection');\n\n_defineProperty(MathNode, \"MIX\", 'mix');\n\n_defineProperty(MathNode, \"CLAMP\", 'clamp');\n\n_defineProperty(MathNode, \"REFRACT\", 'refract');\n\n_defineProperty(MathNode, \"SMOOTHSTEP\", 'smoothstep');\n\n_defineProperty(MathNode, \"FACEFORWARD\", 'faceforward');\n\nexport default MathNode;\n"]},"metadata":{},"sourceType":"module"}