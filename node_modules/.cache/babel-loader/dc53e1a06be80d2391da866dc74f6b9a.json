{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultGrammarValidatorErrorProvider = exports.defaultGrammarResolverErrorProvider = exports.defaultParserErrorProvider = void 0;\n\nvar tokens_public_1 = require(\"../scan/tokens_public\");\n\nvar first_1 = __importDefault(require(\"lodash/first\"));\n\nvar map_1 = __importDefault(require(\"lodash/map\"));\n\nvar reduce_1 = __importDefault(require(\"lodash/reduce\"));\n\nvar gast_1 = require(\"@chevrotain/gast\");\n\nvar gast_2 = require(\"@chevrotain/gast\");\n\nexports.defaultParserErrorProvider = {\n  buildMismatchTokenMessage: function (_a) {\n    var expected = _a.expected,\n        actual = _a.actual,\n        previous = _a.previous,\n        ruleName = _a.ruleName;\n    var hasLabel = (0, tokens_public_1.hasTokenLabel)(expected);\n    var expectedMsg = hasLabel ? \"--> \".concat((0, tokens_public_1.tokenLabel)(expected), \" <--\") : \"token of type --> \".concat(expected.name, \" <--\");\n    var msg = \"Expecting \".concat(expectedMsg, \" but found --> '\").concat(actual.image, \"' <--\");\n    return msg;\n  },\n  buildNotAllInputParsedMessage: function (_a) {\n    var firstRedundant = _a.firstRedundant,\n        ruleName = _a.ruleName;\n    return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n  },\n  buildNoViableAltMessage: function (_a) {\n    var expectedPathsPerAlt = _a.expectedPathsPerAlt,\n        actual = _a.actual,\n        previous = _a.previous,\n        customUserDescription = _a.customUserDescription,\n        ruleName = _a.ruleName;\n    var errPrefix = \"Expecting: \"; // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n\n    var actualText = (0, first_1.default)(actual).image;\n    var errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n\n    if (customUserDescription) {\n      return errPrefix + customUserDescription + errSuffix;\n    } else {\n      var allLookAheadPaths = (0, reduce_1.default)(expectedPathsPerAlt, function (result, currAltPaths) {\n        return result.concat(currAltPaths);\n      }, []);\n      var nextValidTokenSequences = (0, map_1.default)(allLookAheadPaths, function (currPath) {\n        return \"[\".concat((0, map_1.default)(currPath, function (currTokenType) {\n          return (0, tokens_public_1.tokenLabel)(currTokenType);\n        }).join(\", \"), \"]\");\n      });\n      var nextValidSequenceItems = (0, map_1.default)(nextValidTokenSequences, function (itemMsg, idx) {\n        return \"  \".concat(idx + 1, \". \").concat(itemMsg);\n      });\n      var calculatedDescription = \"one of these possible Token sequences:\\n\".concat(nextValidSequenceItems.join(\"\\n\"));\n      return errPrefix + calculatedDescription + errSuffix;\n    }\n  },\n  buildEarlyExitMessage: function (_a) {\n    var expectedIterationPaths = _a.expectedIterationPaths,\n        actual = _a.actual,\n        customUserDescription = _a.customUserDescription,\n        ruleName = _a.ruleName;\n    var errPrefix = \"Expecting: \"; // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n\n    var actualText = (0, first_1.default)(actual).image;\n    var errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n\n    if (customUserDescription) {\n      return errPrefix + customUserDescription + errSuffix;\n    } else {\n      var nextValidTokenSequences = (0, map_1.default)(expectedIterationPaths, function (currPath) {\n        return \"[\".concat((0, map_1.default)(currPath, function (currTokenType) {\n          return (0, tokens_public_1.tokenLabel)(currTokenType);\n        }).join(\",\"), \"]\");\n      });\n      var calculatedDescription = \"expecting at least one iteration which starts with one of these possible Token sequences::\\n  \" + \"<\".concat(nextValidTokenSequences.join(\" ,\"), \">\");\n      return errPrefix + calculatedDescription + errSuffix;\n    }\n  }\n};\nObject.freeze(exports.defaultParserErrorProvider);\nexports.defaultGrammarResolverErrorProvider = {\n  buildRuleNotFoundError: function (topLevelRule, undefinedRule) {\n    var msg = \"Invalid grammar, reference to a rule which is not defined: ->\" + undefinedRule.nonTerminalName + \"<-\\n\" + \"inside top level rule: ->\" + topLevelRule.name + \"<-\";\n    return msg;\n  }\n};\nexports.defaultGrammarValidatorErrorProvider = {\n  buildDuplicateFoundError: function (topLevelRule, duplicateProds) {\n    function getExtraProductionArgument(prod) {\n      if (prod instanceof gast_1.Terminal) {\n        return prod.terminalType.name;\n      } else if (prod instanceof gast_1.NonTerminal) {\n        return prod.nonTerminalName;\n      } else {\n        return \"\";\n      }\n    }\n\n    var topLevelName = topLevelRule.name;\n    var duplicateProd = (0, first_1.default)(duplicateProds);\n    var index = duplicateProd.idx;\n    var dslName = (0, gast_2.getProductionDslName)(duplicateProd);\n    var extraArgument = getExtraProductionArgument(duplicateProd);\n    var hasExplicitIndex = index > 0;\n    var msg = \"->\".concat(dslName).concat(hasExplicitIndex ? index : \"\", \"<- \").concat(extraArgument ? \"with argument: ->\".concat(extraArgument, \"<-\") : \"\", \"\\n                  appears more than once (\").concat(duplicateProds.length, \" times) in the top level rule: ->\").concat(topLevelName, \"<-.                  \\n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \\n                  \"); // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n\n    msg = msg.replace(/[ \\t]+/g, \" \");\n    msg = msg.replace(/\\s\\s+/g, \"\\n\");\n    return msg;\n  },\n  buildNamespaceConflictError: function (rule) {\n    var errMsg = \"Namespace conflict found in grammar.\\n\" + \"The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <\".concat(rule.name, \">.\\n\") + \"To resolve this make sure each Terminal and Non-Terminal names are unique\\n\" + \"This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n\" + \"and Non-Terminal names start with a lower case letter.\";\n    return errMsg;\n  },\n  buildAlternationPrefixAmbiguityError: function (options) {\n    var pathMsg = (0, map_1.default)(options.prefixPath, function (currTok) {\n      return (0, tokens_public_1.tokenLabel)(currTok);\n    }).join(\", \");\n    var occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n    var errMsg = \"Ambiguous alternatives: <\".concat(options.ambiguityIndices.join(\" ,\"), \"> due to common lookahead prefix\\n\") + \"in <OR\".concat(occurrence, \"> inside <\").concat(options.topLevelRule.name, \"> Rule,\\n\") + \"<\".concat(pathMsg, \"> may appears as a prefix path in all these alternatives.\\n\") + \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n\" + \"For Further details.\";\n    return errMsg;\n  },\n  buildAlternationAmbiguityError: function (options) {\n    var pathMsg = (0, map_1.default)(options.prefixPath, function (currtok) {\n      return (0, tokens_public_1.tokenLabel)(currtok);\n    }).join(\", \");\n    var occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n    var currMessage = \"Ambiguous Alternatives Detected: <\".concat(options.ambiguityIndices.join(\" ,\"), \"> in <OR\").concat(occurrence, \">\") + \" inside <\".concat(options.topLevelRule.name, \"> Rule,\\n\") + \"<\".concat(pathMsg, \"> may appears as a prefix path in all these alternatives.\\n\");\n    currMessage = currMessage + \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n\" + \"For Further details.\";\n    return currMessage;\n  },\n  buildEmptyRepetitionError: function (options) {\n    var dslName = (0, gast_2.getProductionDslName)(options.repetition);\n\n    if (options.repetition.idx !== 0) {\n      dslName += options.repetition.idx;\n    }\n\n    var errMsg = \"The repetition <\".concat(dslName, \"> within Rule <\").concat(options.topLevelRule.name, \"> can never consume any tokens.\\n\") + \"This could lead to an infinite loop.\";\n    return errMsg;\n  },\n  // TODO: remove - `errors_public` from nyc.config.js exclude\n  //       once this method is fully removed from this file\n  buildTokenNameError: function (options) {\n    /* istanbul ignore next */\n    return \"deprecated\";\n  },\n  buildEmptyAlternationError: function (options) {\n    var errMsg = \"Ambiguous empty alternative: <\".concat(options.emptyChoiceIdx + 1, \">\") + \" in <OR\".concat(options.alternation.idx, \"> inside <\").concat(options.topLevelRule.name, \"> Rule.\\n\") + \"Only the last alternative may be an empty alternative.\";\n    return errMsg;\n  },\n  buildTooManyAlternativesError: function (options) {\n    var errMsg = \"An Alternation cannot have more than 256 alternatives:\\n\" + \"<OR\".concat(options.alternation.idx, \"> inside <\").concat(options.topLevelRule.name, \"> Rule.\\n has \").concat(options.alternation.definition.length + 1, \" alternatives.\");\n    return errMsg;\n  },\n  buildLeftRecursionError: function (options) {\n    var ruleName = options.topLevelRule.name;\n    var pathNames = (0, map_1.default)(options.leftRecursionPath, function (currRule) {\n      return currRule.name;\n    });\n    var leftRecursivePath = \"\".concat(ruleName, \" --> \").concat(pathNames.concat([ruleName]).join(\" --> \"));\n    var errMsg = \"Left Recursion found in grammar.\\n\" + \"rule: <\".concat(ruleName, \"> can be invoked from itself (directly or indirectly)\\n\") + \"without consuming any Tokens. The grammar path that causes this is: \\n \".concat(leftRecursivePath, \"\\n\") + \" To fix this refactor your grammar to remove the left recursion.\\n\" + \"see: https://en.wikipedia.org/wiki/LL_parser#Left_factoring.\";\n    return errMsg;\n  },\n  // TODO: remove - `errors_public` from nyc.config.js exclude\n  //       once this method is fully removed from this file\n  buildInvalidRuleNameError: function (options) {\n    /* istanbul ignore next */\n    return \"deprecated\";\n  },\n  buildDuplicateRuleNameError: function (options) {\n    var ruleName;\n\n    if (options.topLevelRule instanceof gast_1.Rule) {\n      ruleName = options.topLevelRule.name;\n    } else {\n      ruleName = options.topLevelRule;\n    }\n\n    var errMsg = \"Duplicate definition, rule: ->\".concat(ruleName, \"<- is already defined in the grammar: ->\").concat(options.grammarName, \"<-\");\n    return errMsg;\n  }\n};","map":{"version":3,"sources":["../../../src/parse/errors_public.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultGrammarValidatorErrorProvider = exports.defaultGrammarResolverErrorProvider = exports.defaultParserErrorProvider = void 0;\nvar tokens_public_1 = require(\"../scan/tokens_public\");\nvar first_1 = __importDefault(require(\"lodash/first\"));\nvar map_1 = __importDefault(require(\"lodash/map\"));\nvar reduce_1 = __importDefault(require(\"lodash/reduce\"));\nvar gast_1 = require(\"@chevrotain/gast\");\nvar gast_2 = require(\"@chevrotain/gast\");\nexports.defaultParserErrorProvider = {\n    buildMismatchTokenMessage: function (_a) {\n        var expected = _a.expected, actual = _a.actual, previous = _a.previous, ruleName = _a.ruleName;\n        var hasLabel = (0, tokens_public_1.hasTokenLabel)(expected);\n        var expectedMsg = hasLabel\n            ? \"--> \".concat((0, tokens_public_1.tokenLabel)(expected), \" <--\")\n            : \"token of type --> \".concat(expected.name, \" <--\");\n        var msg = \"Expecting \".concat(expectedMsg, \" but found --> '\").concat(actual.image, \"' <--\");\n        return msg;\n    },\n    buildNotAllInputParsedMessage: function (_a) {\n        var firstRedundant = _a.firstRedundant, ruleName = _a.ruleName;\n        return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n    },\n    buildNoViableAltMessage: function (_a) {\n        var expectedPathsPerAlt = _a.expectedPathsPerAlt, actual = _a.actual, previous = _a.previous, customUserDescription = _a.customUserDescription, ruleName = _a.ruleName;\n        var errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        var actualText = (0, first_1.default)(actual).image;\n        var errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            var allLookAheadPaths = (0, reduce_1.default)(expectedPathsPerAlt, function (result, currAltPaths) { return result.concat(currAltPaths); }, []);\n            var nextValidTokenSequences = (0, map_1.default)(allLookAheadPaths, function (currPath) {\n                return \"[\".concat((0, map_1.default)(currPath, function (currTokenType) { return (0, tokens_public_1.tokenLabel)(currTokenType); }).join(\", \"), \"]\");\n            });\n            var nextValidSequenceItems = (0, map_1.default)(nextValidTokenSequences, function (itemMsg, idx) { return \"  \".concat(idx + 1, \". \").concat(itemMsg); });\n            var calculatedDescription = \"one of these possible Token sequences:\\n\".concat(nextValidSequenceItems.join(\"\\n\"));\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n    buildEarlyExitMessage: function (_a) {\n        var expectedIterationPaths = _a.expectedIterationPaths, actual = _a.actual, customUserDescription = _a.customUserDescription, ruleName = _a.ruleName;\n        var errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        var actualText = (0, first_1.default)(actual).image;\n        var errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            var nextValidTokenSequences = (0, map_1.default)(expectedIterationPaths, function (currPath) {\n                return \"[\".concat((0, map_1.default)(currPath, function (currTokenType) { return (0, tokens_public_1.tokenLabel)(currTokenType); }).join(\",\"), \"]\");\n            });\n            var calculatedDescription = \"expecting at least one iteration which starts with one of these possible Token sequences::\\n  \" +\n                \"<\".concat(nextValidTokenSequences.join(\" ,\"), \">\");\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    }\n};\nObject.freeze(exports.defaultParserErrorProvider);\nexports.defaultGrammarResolverErrorProvider = {\n    buildRuleNotFoundError: function (topLevelRule, undefinedRule) {\n        var msg = \"Invalid grammar, reference to a rule which is not defined: ->\" +\n            undefinedRule.nonTerminalName +\n            \"<-\\n\" +\n            \"inside top level rule: ->\" +\n            topLevelRule.name +\n            \"<-\";\n        return msg;\n    }\n};\nexports.defaultGrammarValidatorErrorProvider = {\n    buildDuplicateFoundError: function (topLevelRule, duplicateProds) {\n        function getExtraProductionArgument(prod) {\n            if (prod instanceof gast_1.Terminal) {\n                return prod.terminalType.name;\n            }\n            else if (prod instanceof gast_1.NonTerminal) {\n                return prod.nonTerminalName;\n            }\n            else {\n                return \"\";\n            }\n        }\n        var topLevelName = topLevelRule.name;\n        var duplicateProd = (0, first_1.default)(duplicateProds);\n        var index = duplicateProd.idx;\n        var dslName = (0, gast_2.getProductionDslName)(duplicateProd);\n        var extraArgument = getExtraProductionArgument(duplicateProd);\n        var hasExplicitIndex = index > 0;\n        var msg = \"->\".concat(dslName).concat(hasExplicitIndex ? index : \"\", \"<- \").concat(extraArgument ? \"with argument: ->\".concat(extraArgument, \"<-\") : \"\", \"\\n                  appears more than once (\").concat(duplicateProds.length, \" times) in the top level rule: ->\").concat(topLevelName, \"<-.                  \\n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \\n                  \");\n        // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n        msg = msg.replace(/[ \\t]+/g, \" \");\n        msg = msg.replace(/\\s\\s+/g, \"\\n\");\n        return msg;\n    },\n    buildNamespaceConflictError: function (rule) {\n        var errMsg = \"Namespace conflict found in grammar.\\n\" +\n            \"The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <\".concat(rule.name, \">.\\n\") +\n            \"To resolve this make sure each Terminal and Non-Terminal names are unique\\n\" +\n            \"This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n\" +\n            \"and Non-Terminal names start with a lower case letter.\";\n        return errMsg;\n    },\n    buildAlternationPrefixAmbiguityError: function (options) {\n        var pathMsg = (0, map_1.default)(options.prefixPath, function (currTok) {\n            return (0, tokens_public_1.tokenLabel)(currTok);\n        }).join(\", \");\n        var occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        var errMsg = \"Ambiguous alternatives: <\".concat(options.ambiguityIndices.join(\" ,\"), \"> due to common lookahead prefix\\n\") +\n            \"in <OR\".concat(occurrence, \"> inside <\").concat(options.topLevelRule.name, \"> Rule,\\n\") +\n            \"<\".concat(pathMsg, \"> may appears as a prefix path in all these alternatives.\\n\") +\n            \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n\" +\n            \"For Further details.\";\n        return errMsg;\n    },\n    buildAlternationAmbiguityError: function (options) {\n        var pathMsg = (0, map_1.default)(options.prefixPath, function (currtok) {\n            return (0, tokens_public_1.tokenLabel)(currtok);\n        }).join(\", \");\n        var occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        var currMessage = \"Ambiguous Alternatives Detected: <\".concat(options.ambiguityIndices.join(\" ,\"), \"> in <OR\").concat(occurrence, \">\") +\n            \" inside <\".concat(options.topLevelRule.name, \"> Rule,\\n\") +\n            \"<\".concat(pathMsg, \"> may appears as a prefix path in all these alternatives.\\n\");\n        currMessage =\n            currMessage +\n                \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n\" +\n                \"For Further details.\";\n        return currMessage;\n    },\n    buildEmptyRepetitionError: function (options) {\n        var dslName = (0, gast_2.getProductionDslName)(options.repetition);\n        if (options.repetition.idx !== 0) {\n            dslName += options.repetition.idx;\n        }\n        var errMsg = \"The repetition <\".concat(dslName, \"> within Rule <\").concat(options.topLevelRule.name, \"> can never consume any tokens.\\n\") +\n            \"This could lead to an infinite loop.\";\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildTokenNameError: function (options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildEmptyAlternationError: function (options) {\n        var errMsg = \"Ambiguous empty alternative: <\".concat(options.emptyChoiceIdx + 1, \">\") +\n            \" in <OR\".concat(options.alternation.idx, \"> inside <\").concat(options.topLevelRule.name, \"> Rule.\\n\") +\n            \"Only the last alternative may be an empty alternative.\";\n        return errMsg;\n    },\n    buildTooManyAlternativesError: function (options) {\n        var errMsg = \"An Alternation cannot have more than 256 alternatives:\\n\" +\n            \"<OR\".concat(options.alternation.idx, \"> inside <\").concat(options.topLevelRule.name, \"> Rule.\\n has \").concat(options.alternation.definition.length + 1, \" alternatives.\");\n        return errMsg;\n    },\n    buildLeftRecursionError: function (options) {\n        var ruleName = options.topLevelRule.name;\n        var pathNames = (0, map_1.default)(options.leftRecursionPath, function (currRule) { return currRule.name; });\n        var leftRecursivePath = \"\".concat(ruleName, \" --> \").concat(pathNames\n            .concat([ruleName])\n            .join(\" --> \"));\n        var errMsg = \"Left Recursion found in grammar.\\n\" +\n            \"rule: <\".concat(ruleName, \"> can be invoked from itself (directly or indirectly)\\n\") +\n            \"without consuming any Tokens. The grammar path that causes this is: \\n \".concat(leftRecursivePath, \"\\n\") +\n            \" To fix this refactor your grammar to remove the left recursion.\\n\" +\n            \"see: https://en.wikipedia.org/wiki/LL_parser#Left_factoring.\";\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildInvalidRuleNameError: function (options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildDuplicateRuleNameError: function (options) {\n        var ruleName;\n        if (options.topLevelRule instanceof gast_1.Rule) {\n            ruleName = options.topLevelRule.name;\n        }\n        else {\n            ruleName = options.topLevelRule;\n        }\n        var errMsg = \"Duplicate definition, rule: ->\".concat(ruleName, \"<- is already defined in the grammar: ->\").concat(options.grammarName, \"<-\");\n        return errMsg;\n    }\n};\n//# sourceMappingURL=errors_public.js.map"]},"metadata":{},"sourceType":"script"}