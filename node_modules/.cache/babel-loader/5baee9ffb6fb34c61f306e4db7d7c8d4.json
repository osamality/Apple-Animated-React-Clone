{"ast":null,"code":"import * as React from \"react\";\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nfunction traverseFiber(fiber, ascending, selector) {\n  if (!fiber) return;\n  if (selector(fiber) === true) return fiber;\n  let child = ascending ? fiber.return : fiber.child;\n\n  while (child) {\n    const match = traverseFiber(child, ascending, selector);\n    if (match) return match;\n    child = ascending ? null : child.sibling;\n  }\n}\n\nfunction wrapContext(context) {\n  try {\n    return Object.defineProperties(context, {\n      _currentRenderer: {\n        get() {\n          return null;\n        },\n\n        set() {}\n\n      },\n      _currentRenderer2: {\n        get() {\n          return null;\n        },\n\n        set() {}\n\n      }\n    });\n  } catch (_) {\n    return context;\n  }\n}\n\nconst FiberContext = wrapContext(React.createContext(null));\n\nclass FiberProvider extends React.Component {\n  render() {\n    return /* @__PURE__ */React.createElement(FiberContext.Provider, {\n      value: this._reactInternals\n    }, this.props.children);\n  }\n\n}\n\nconst {\n  ReactCurrentOwner,\n  ReactCurrentDispatcher\n} = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction useFiber() {\n  const root = React.useContext(FiberContext);\n  if (!root) throw new Error(\"its-fine: useFiber must be called within a <FiberProvider />!\");\n  const id = React.useId();\n  const fiber = React.useMemo(() => {\n    var _a;\n\n    return (_a = ReactCurrentOwner.current) != null ? _a : traverseFiber(root, false, node => {\n      let state = node.memoizedState;\n\n      while (state) {\n        if (state.memoizedState === id) return true;\n        state = state.next;\n      }\n    });\n  }, [root, id]);\n  return fiber;\n}\n\nfunction useContainer() {\n  const fiber = useFiber();\n  const root = React.useMemo(() => traverseFiber(fiber, true, node => {\n    var _a;\n\n    return ((_a = node.stateNode) == null ? void 0 : _a.containerInfo) != null;\n  }), [fiber]);\n  return root == null ? void 0 : root.stateNode.containerInfo;\n}\n\nfunction useNearestChild(type) {\n  const fiber = useFiber();\n  const childRef = React.useRef();\n  React.useLayoutEffect(() => {\n    var _a;\n\n    childRef.current = (_a = traverseFiber(fiber, false, node => typeof node.type === \"string\" && (type === void 0 || node.type === type))) == null ? void 0 : _a.stateNode;\n  }, [fiber]);\n  return childRef;\n}\n\nfunction useNearestParent(type) {\n  const fiber = useFiber();\n  const parentRef = React.useRef();\n  React.useLayoutEffect(() => {\n    var _a;\n\n    parentRef.current = (_a = traverseFiber(fiber, true, node => typeof node.type === \"string\" && (type === void 0 || node.type === type))) == null ? void 0 : _a.stateNode;\n  }, [fiber]);\n  return parentRef;\n}\n\nfunction useContextBridge() {\n  var _a, _b;\n\n  const fiber = useFiber();\n  const [contexts] = React.useState(() => /* @__PURE__ */new Map());\n  contexts.clear();\n  let node = fiber;\n\n  while (node) {\n    const context = (_a = node.type) == null ? void 0 : _a._context;\n\n    if (context && context !== FiberContext && !contexts.has(context)) {\n      contexts.set(context, (_b = ReactCurrentDispatcher.current) == null ? void 0 : _b.readContext(wrapContext(context)));\n    }\n\n    node = node.return;\n  }\n\n  return React.useMemo(() => Array.from(contexts.keys()).reduce((Prev, context) => props => /* @__PURE__ */React.createElement(Prev, null, /* @__PURE__ */React.createElement(context.Provider, __spreadProps(__spreadValues({}, props), {\n    value: contexts.get(context)\n  }))), props => /* @__PURE__ */React.createElement(FiberProvider, __spreadValues({}, props))), [contexts]);\n}\n\nexport { FiberProvider, traverseFiber, useContainer, useContextBridge, useFiber, useNearestChild, useNearestParent };","map":{"version":3,"sources":["../src/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nfunction traverseFiber(fiber, ascending, selector) {\n  if (!fiber)\n    return;\n  if (selector(fiber) === true)\n    return fiber;\n  let child = ascending ? fiber.return : fiber.child;\n  while (child) {\n    const match = traverseFiber(child, ascending, selector);\n    if (match)\n      return match;\n    child = ascending ? null : child.sibling;\n  }\n}\nfunction wrapContext(context) {\n  try {\n    return Object.defineProperties(context, {\n      _currentRenderer: {\n        get() {\n          return null;\n        },\n        set() {\n        }\n      },\n      _currentRenderer2: {\n        get() {\n          return null;\n        },\n        set() {\n        }\n      }\n    });\n  } catch (_) {\n    return context;\n  }\n}\nconst FiberContext = wrapContext(React.createContext(null));\nclass FiberProvider extends React.Component {\n  render() {\n    return /* @__PURE__ */ React.createElement(FiberContext.Provider, {\n      value: this._reactInternals\n    }, this.props.children);\n  }\n}\nconst { ReactCurrentOwner, ReactCurrentDispatcher } = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\nfunction useFiber() {\n  const root = React.useContext(FiberContext);\n  if (!root)\n    throw new Error(\"its-fine: useFiber must be called within a <FiberProvider />!\");\n  const id = React.useId();\n  const fiber = React.useMemo(\n    () => {\n      var _a;\n      return (_a = ReactCurrentOwner.current) != null ? _a : traverseFiber(root, false, (node) => {\n        let state = node.memoizedState;\n        while (state) {\n          if (state.memoizedState === id)\n            return true;\n          state = state.next;\n        }\n      });\n    },\n    [root, id]\n  );\n  return fiber;\n}\nfunction useContainer() {\n  const fiber = useFiber();\n  const root = React.useMemo(\n    () => traverseFiber(fiber, true, (node) => {\n      var _a;\n      return ((_a = node.stateNode) == null ? void 0 : _a.containerInfo) != null;\n    }),\n    [fiber]\n  );\n  return root == null ? void 0 : root.stateNode.containerInfo;\n}\nfunction useNearestChild(type) {\n  const fiber = useFiber();\n  const childRef = React.useRef();\n  React.useLayoutEffect(() => {\n    var _a;\n    childRef.current = (_a = traverseFiber(\n      fiber,\n      false,\n      (node) => typeof node.type === \"string\" && (type === void 0 || node.type === type)\n    )) == null ? void 0 : _a.stateNode;\n  }, [fiber]);\n  return childRef;\n}\nfunction useNearestParent(type) {\n  const fiber = useFiber();\n  const parentRef = React.useRef();\n  React.useLayoutEffect(() => {\n    var _a;\n    parentRef.current = (_a = traverseFiber(\n      fiber,\n      true,\n      (node) => typeof node.type === \"string\" && (type === void 0 || node.type === type)\n    )) == null ? void 0 : _a.stateNode;\n  }, [fiber]);\n  return parentRef;\n}\nfunction useContextBridge() {\n  var _a, _b;\n  const fiber = useFiber();\n  const [contexts] = React.useState(() => /* @__PURE__ */ new Map());\n  contexts.clear();\n  let node = fiber;\n  while (node) {\n    const context = (_a = node.type) == null ? void 0 : _a._context;\n    if (context && context !== FiberContext && !contexts.has(context)) {\n      contexts.set(context, (_b = ReactCurrentDispatcher.current) == null ? void 0 : _b.readContext(wrapContext(context)));\n    }\n    node = node.return;\n  }\n  return React.useMemo(\n    () => Array.from(contexts.keys()).reduce(\n      (Prev, context) => (props) => /* @__PURE__ */ React.createElement(Prev, null, /* @__PURE__ */ React.createElement(context.Provider, __spreadProps(__spreadValues({}, props), {\n        value: contexts.get(context)\n      }))),\n      (props) => /* @__PURE__ */ React.createElement(FiberProvider, __spreadValues({}, props))\n    ),\n    [contexts]\n  );\n}\nexport {\n  FiberProvider,\n  traverseFiber,\n  useContainer,\n  useContextBridge,\n  useFiber,\n  useNearestChild,\n  useNearestParent\n};\n//# sourceMappingURL=index.js.map\n"]},"metadata":{},"sourceType":"module"}