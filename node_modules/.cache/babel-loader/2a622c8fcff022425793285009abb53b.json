{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport { normalize, sub, positionWorld, cameraPosition, reflect, normalWorld, nodeObject, join, negate } from '../ShaderNode.js';\n\nclass ReflectNode extends Node {\n  constructor(scope = ReflectNode.CUBE) {\n    super('vec3');\n    this.scope = scope;\n  }\n\n  getHash() {\n    return `reflect-${this.scope}`;\n  }\n\n  generate(builder) {\n    const scope = this.scope;\n\n    if (scope === ReflectNode.VECTOR) {\n      const cameraToFrag = normalize(sub(positionWorld, cameraPosition));\n      const reflectVec = reflect(cameraToFrag, normalWorld);\n      return reflectVec.build(builder);\n    } else if (scope === ReflectNode.CUBE) {\n      const reflectVec = nodeObject(new ReflectNode(ReflectNode.VECTOR));\n      const cubeUV = join(negate(reflectVec.x), reflectVec.yz);\n      return cubeUV.build(builder);\n    }\n  }\n\n  serialize(data) {\n    super.serialize(data);\n    data.scope = this.scope;\n  }\n\n  deserialize(data) {\n    super.deserialize(data);\n    this.scope = data.scope;\n  }\n\n}\n\n_defineProperty(ReflectNode, \"VECTOR\", 'vector');\n\n_defineProperty(ReflectNode, \"CUBE\", 'cube');\n\nexport default ReflectNode;","map":{"version":3,"sources":["/Users/osamakhan/Desktop/dev/Apple-Animated-React-Clone/node_modules/three-stdlib/nodes/accessors/ReflectNode.js"],"names":["_defineProperty","Node","normalize","sub","positionWorld","cameraPosition","reflect","normalWorld","nodeObject","join","negate","ReflectNode","constructor","scope","CUBE","getHash","generate","builder","VECTOR","cameraToFrag","reflectVec","build","cubeUV","x","yz","serialize","data","deserialize"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,aAAzB,EAAwCC,cAAxC,EAAwDC,OAAxD,EAAiEC,WAAjE,EAA8EC,UAA9E,EAA0FC,IAA1F,EAAgGC,MAAhG,QAA8G,kBAA9G;;AAEA,MAAMC,WAAN,SAA0BV,IAA1B,CAA+B;AAC7BW,EAAAA,WAAW,CAACC,KAAK,GAAGF,WAAW,CAACG,IAArB,EAA2B;AACpC,UAAM,MAAN;AACA,SAAKD,KAAL,GAAaA,KAAb;AACD;;AAEDE,EAAAA,OAAO,GAAG;AACR,WAAQ,WAAU,KAAKF,KAAM,EAA7B;AACD;;AAEDG,EAAAA,QAAQ,CAACC,OAAD,EAAU;AAChB,UAAMJ,KAAK,GAAG,KAAKA,KAAnB;;AAEA,QAAIA,KAAK,KAAKF,WAAW,CAACO,MAA1B,EAAkC;AAChC,YAAMC,YAAY,GAAGjB,SAAS,CAACC,GAAG,CAACC,aAAD,EAAgBC,cAAhB,CAAJ,CAA9B;AACA,YAAMe,UAAU,GAAGd,OAAO,CAACa,YAAD,EAAeZ,WAAf,CAA1B;AACA,aAAOa,UAAU,CAACC,KAAX,CAAiBJ,OAAjB,CAAP;AACD,KAJD,MAIO,IAAIJ,KAAK,KAAKF,WAAW,CAACG,IAA1B,EAAgC;AACrC,YAAMM,UAAU,GAAGZ,UAAU,CAAC,IAAIG,WAAJ,CAAgBA,WAAW,CAACO,MAA5B,CAAD,CAA7B;AACA,YAAMI,MAAM,GAAGb,IAAI,CAACC,MAAM,CAACU,UAAU,CAACG,CAAZ,CAAP,EAAuBH,UAAU,CAACI,EAAlC,CAAnB;AACA,aAAOF,MAAM,CAACD,KAAP,CAAaJ,OAAb,CAAP;AACD;AACF;;AAEDQ,EAAAA,SAAS,CAACC,IAAD,EAAO;AACd,UAAMD,SAAN,CAAgBC,IAAhB;AACAA,IAAAA,IAAI,CAACb,KAAL,GAAa,KAAKA,KAAlB;AACD;;AAEDc,EAAAA,WAAW,CAACD,IAAD,EAAO;AAChB,UAAMC,WAAN,CAAkBD,IAAlB;AACA,SAAKb,KAAL,GAAaa,IAAI,CAACb,KAAlB;AACD;;AAhC4B;;AAoC/Bb,eAAe,CAACW,WAAD,EAAc,QAAd,EAAwB,QAAxB,CAAf;;AAEAX,eAAe,CAACW,WAAD,EAAc,MAAd,EAAsB,MAAtB,CAAf;;AAEA,eAAeA,WAAf","sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport { normalize, sub, positionWorld, cameraPosition, reflect, normalWorld, nodeObject, join, negate } from '../ShaderNode.js';\n\nclass ReflectNode extends Node {\n  constructor(scope = ReflectNode.CUBE) {\n    super('vec3');\n    this.scope = scope;\n  }\n\n  getHash() {\n    return `reflect-${this.scope}`;\n  }\n\n  generate(builder) {\n    const scope = this.scope;\n\n    if (scope === ReflectNode.VECTOR) {\n      const cameraToFrag = normalize(sub(positionWorld, cameraPosition));\n      const reflectVec = reflect(cameraToFrag, normalWorld);\n      return reflectVec.build(builder);\n    } else if (scope === ReflectNode.CUBE) {\n      const reflectVec = nodeObject(new ReflectNode(ReflectNode.VECTOR));\n      const cubeUV = join(negate(reflectVec.x), reflectVec.yz);\n      return cubeUV.build(builder);\n    }\n  }\n\n  serialize(data) {\n    super.serialize(data);\n    data.scope = this.scope;\n  }\n\n  deserialize(data) {\n    super.deserialize(data);\n    this.scope = data.scope;\n  }\n\n}\n\n_defineProperty(ReflectNode, \"VECTOR\", 'vector');\n\n_defineProperty(ReflectNode, \"CUBE\", 'cube');\n\nexport default ReflectNode;\n"]},"metadata":{},"sourceType":"module"}