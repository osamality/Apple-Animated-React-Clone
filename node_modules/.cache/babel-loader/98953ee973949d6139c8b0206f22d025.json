{"ast":null,"code":"import TextureNode from './TextureNode.js';\nimport UniformNode from '../core/UniformNode.js';\nimport ReflectNode from './ReflectNode.js';\n\nclass CubeTextureNode extends TextureNode {\n  constructor(value, uvNode = new ReflectNode(), biasNode = null) {\n    super(value, uvNode, biasNode);\n  }\n\n  getInputType() {\n    return 'cubeTexture';\n  }\n\n  generate(builder, output) {\n    const texture = this.value;\n\n    if (!texture || texture.isCubeTexture !== true) {\n      throw new Error('CubeTextureNode: Need a three.js cube texture.');\n    }\n\n    const textureProperty = UniformNode.prototype.generate.call(this, builder, 'cubeTexture');\n\n    if (output === 'sampler') {\n      return textureProperty + '_sampler';\n    } else if (builder.isReference(output)) {\n      return textureProperty;\n    } else {\n      const nodeData = builder.getDataFromNode(this);\n      let snippet = nodeData.snippet;\n\n      if (snippet === undefined) {\n        const uvSnippet = this.uvNode.build(builder, 'vec3');\n        const biasNode = this.biasNode;\n\n        if (biasNode !== null) {\n          const biasSnippet = biasNode.build(builder, 'float');\n          snippet = builder.getCubeTextureBias(textureProperty, uvSnippet, biasSnippet);\n        } else {\n          snippet = builder.getCubeTexture(textureProperty, uvSnippet);\n        }\n\n        nodeData.snippet = snippet;\n      }\n\n      return builder.format(snippet, 'vec4', output);\n    }\n  }\n\n}\n\nCubeTextureNode.prototype.isCubeTextureNode = true;\nexport default CubeTextureNode;","map":{"version":3,"sources":["/Users/osamakhan/Desktop/Apple-Website-Clone-React-master/node_modules/three-stdlib/nodes/accessors/CubeTextureNode.js"],"names":["TextureNode","UniformNode","ReflectNode","CubeTextureNode","constructor","value","uvNode","biasNode","getInputType","generate","builder","output","texture","isCubeTexture","Error","textureProperty","prototype","call","isReference","nodeData","getDataFromNode","snippet","undefined","uvSnippet","build","biasSnippet","getCubeTextureBias","getCubeTexture","format","isCubeTextureNode"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,kBAAxB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;AAEA,MAAMC,eAAN,SAA8BH,WAA9B,CAA0C;AACxCI,EAAAA,WAAW,CAACC,KAAD,EAAQC,MAAM,GAAG,IAAIJ,WAAJ,EAAjB,EAAoCK,QAAQ,GAAG,IAA/C,EAAqD;AAC9D,UAAMF,KAAN,EAAaC,MAAb,EAAqBC,QAArB;AACD;;AAEDC,EAAAA,YAAY,GAAG;AACb,WAAO,aAAP;AACD;;AAEDC,EAAAA,QAAQ,CAACC,OAAD,EAAUC,MAAV,EAAkB;AACxB,UAAMC,OAAO,GAAG,KAAKP,KAArB;;AAEA,QAAI,CAACO,OAAD,IAAYA,OAAO,CAACC,aAAR,KAA0B,IAA1C,EAAgD;AAC9C,YAAM,IAAIC,KAAJ,CAAU,gDAAV,CAAN;AACD;;AAED,UAAMC,eAAe,GAAGd,WAAW,CAACe,SAAZ,CAAsBP,QAAtB,CAA+BQ,IAA/B,CAAoC,IAApC,EAA0CP,OAA1C,EAAmD,aAAnD,CAAxB;;AAEA,QAAIC,MAAM,KAAK,SAAf,EAA0B;AACxB,aAAOI,eAAe,GAAG,UAAzB;AACD,KAFD,MAEO,IAAIL,OAAO,CAACQ,WAAR,CAAoBP,MAApB,CAAJ,EAAiC;AACtC,aAAOI,eAAP;AACD,KAFM,MAEA;AACL,YAAMI,QAAQ,GAAGT,OAAO,CAACU,eAAR,CAAwB,IAAxB,CAAjB;AACA,UAAIC,OAAO,GAAGF,QAAQ,CAACE,OAAvB;;AAEA,UAAIA,OAAO,KAAKC,SAAhB,EAA2B;AACzB,cAAMC,SAAS,GAAG,KAAKjB,MAAL,CAAYkB,KAAZ,CAAkBd,OAAlB,EAA2B,MAA3B,CAAlB;AACA,cAAMH,QAAQ,GAAG,KAAKA,QAAtB;;AAEA,YAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACrB,gBAAMkB,WAAW,GAAGlB,QAAQ,CAACiB,KAAT,CAAed,OAAf,EAAwB,OAAxB,CAApB;AACAW,UAAAA,OAAO,GAAGX,OAAO,CAACgB,kBAAR,CAA2BX,eAA3B,EAA4CQ,SAA5C,EAAuDE,WAAvD,CAAV;AACD,SAHD,MAGO;AACLJ,UAAAA,OAAO,GAAGX,OAAO,CAACiB,cAAR,CAAuBZ,eAAvB,EAAwCQ,SAAxC,CAAV;AACD;;AAEDJ,QAAAA,QAAQ,CAACE,OAAT,GAAmBA,OAAnB;AACD;;AAED,aAAOX,OAAO,CAACkB,MAAR,CAAeP,OAAf,EAAwB,MAAxB,EAAgCV,MAAhC,CAAP;AACD;AACF;;AA1CuC;;AA8C1CR,eAAe,CAACa,SAAhB,CAA0Ba,iBAA1B,GAA8C,IAA9C;AAEA,eAAe1B,eAAf","sourcesContent":["import TextureNode from './TextureNode.js';\nimport UniformNode from '../core/UniformNode.js';\nimport ReflectNode from './ReflectNode.js';\n\nclass CubeTextureNode extends TextureNode {\n  constructor(value, uvNode = new ReflectNode(), biasNode = null) {\n    super(value, uvNode, biasNode);\n  }\n\n  getInputType() {\n    return 'cubeTexture';\n  }\n\n  generate(builder, output) {\n    const texture = this.value;\n\n    if (!texture || texture.isCubeTexture !== true) {\n      throw new Error('CubeTextureNode: Need a three.js cube texture.');\n    }\n\n    const textureProperty = UniformNode.prototype.generate.call(this, builder, 'cubeTexture');\n\n    if (output === 'sampler') {\n      return textureProperty + '_sampler';\n    } else if (builder.isReference(output)) {\n      return textureProperty;\n    } else {\n      const nodeData = builder.getDataFromNode(this);\n      let snippet = nodeData.snippet;\n\n      if (snippet === undefined) {\n        const uvSnippet = this.uvNode.build(builder, 'vec3');\n        const biasNode = this.biasNode;\n\n        if (biasNode !== null) {\n          const biasSnippet = biasNode.build(builder, 'float');\n          snippet = builder.getCubeTextureBias(textureProperty, uvSnippet, biasSnippet);\n        } else {\n          snippet = builder.getCubeTexture(textureProperty, uvSnippet);\n        }\n\n        nodeData.snippet = snippet;\n      }\n\n      return builder.format(snippet, 'vec4', output);\n    }\n  }\n\n}\n\nCubeTextureNode.prototype.isCubeTextureNode = true;\n\nexport default CubeTextureNode;\n"]},"metadata":{},"sourceType":"module"}