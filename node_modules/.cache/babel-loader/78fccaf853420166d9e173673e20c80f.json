{"ast":null,"code":"import { Matrix4, Vector3, SphereGeometry, BoxGeometry, MeshStandardMaterial, InstancedMesh, DynamicDrawUsage } from 'three';\n\nconst _matrix = new Matrix4();\n\nconst _vector = new Vector3();\n\nclass XRHandPrimitiveModel {\n  constructor(handModel, controller, path, handedness, options) {\n    this.controller = controller;\n    this.handModel = handModel;\n    this.envMap = null;\n    let geometry;\n\n    if (!options || !options.primitive || options.primitive === 'sphere') {\n      geometry = new SphereGeometry(1, 10, 10);\n    } else if (options.primitive === 'box') {\n      geometry = new BoxGeometry(1, 1, 1);\n    }\n\n    const material = new MeshStandardMaterial();\n    this.handMesh = new InstancedMesh(geometry, material, 30);\n    this.handMesh.instanceMatrix.setUsage(DynamicDrawUsage); // will be updated every frame\n\n    this.handMesh.castShadow = true;\n    this.handMesh.receiveShadow = true;\n    this.handModel.add(this.handMesh);\n    this.joints = ['wrist', 'thumb-metacarpal', 'thumb-phalanx-proximal', 'thumb-phalanx-distal', 'thumb-tip', 'index-finger-metacarpal', 'index-finger-phalanx-proximal', 'index-finger-phalanx-intermediate', 'index-finger-phalanx-distal', 'index-finger-tip', 'middle-finger-metacarpal', 'middle-finger-phalanx-proximal', 'middle-finger-phalanx-intermediate', 'middle-finger-phalanx-distal', 'middle-finger-tip', 'ring-finger-metacarpal', 'ring-finger-phalanx-proximal', 'ring-finger-phalanx-intermediate', 'ring-finger-phalanx-distal', 'ring-finger-tip', 'pinky-finger-metacarpal', 'pinky-finger-phalanx-proximal', 'pinky-finger-phalanx-intermediate', 'pinky-finger-phalanx-distal', 'pinky-finger-tip'];\n  }\n\n  updateMesh() {\n    const defaultRadius = 0.008;\n    const joints = this.controller.joints;\n    let count = 0;\n\n    for (let i = 0; i < this.joints.length; i++) {\n      const joint = joints[this.joints[i]];\n\n      if (joint.visible) {\n        _vector.setScalar(joint.jointRadius || defaultRadius);\n\n        _matrix.compose(joint.position, joint.quaternion, _vector);\n\n        this.handMesh.setMatrixAt(i, _matrix);\n        count++;\n      }\n    }\n\n    this.handMesh.count = count;\n    this.handMesh.instanceMatrix.needsUpdate = true;\n  }\n\n}\n\nexport { XRHandPrimitiveModel };","map":{"version":3,"sources":["/Users/osamakhan/Desktop/Apple-Website-Clone-React-master/node_modules/three-stdlib/webxr/XRHandPrimitiveModel.js"],"names":["Matrix4","Vector3","SphereGeometry","BoxGeometry","MeshStandardMaterial","InstancedMesh","DynamicDrawUsage","_matrix","_vector","XRHandPrimitiveModel","constructor","handModel","controller","path","handedness","options","envMap","geometry","primitive","material","handMesh","instanceMatrix","setUsage","castShadow","receiveShadow","add","joints","updateMesh","defaultRadius","count","i","length","joint","visible","setScalar","jointRadius","compose","position","quaternion","setMatrixAt","needsUpdate"],"mappings":"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","sourcesContent":["import { Matrix4, Vector3, SphereGeometry, BoxGeometry, MeshStandardMaterial, InstancedMesh, DynamicDrawUsage } from 'three';\n\nconst _matrix = new Matrix4();\n\nconst _vector = new Vector3();\n\nclass XRHandPrimitiveModel {\n  constructor(handModel, controller, path, handedness, options) {\n    this.controller = controller;\n    this.handModel = handModel;\n    this.envMap = null;\n    let geometry;\n\n    if (!options || !options.primitive || options.primitive === 'sphere') {\n      geometry = new SphereGeometry(1, 10, 10);\n    } else if (options.primitive === 'box') {\n      geometry = new BoxGeometry(1, 1, 1);\n    }\n\n    const material = new MeshStandardMaterial();\n    this.handMesh = new InstancedMesh(geometry, material, 30);\n    this.handMesh.instanceMatrix.setUsage(DynamicDrawUsage); // will be updated every frame\n\n    this.handMesh.castShadow = true;\n    this.handMesh.receiveShadow = true;\n    this.handModel.add(this.handMesh);\n    this.joints = ['wrist', 'thumb-metacarpal', 'thumb-phalanx-proximal', 'thumb-phalanx-distal', 'thumb-tip', 'index-finger-metacarpal', 'index-finger-phalanx-proximal', 'index-finger-phalanx-intermediate', 'index-finger-phalanx-distal', 'index-finger-tip', 'middle-finger-metacarpal', 'middle-finger-phalanx-proximal', 'middle-finger-phalanx-intermediate', 'middle-finger-phalanx-distal', 'middle-finger-tip', 'ring-finger-metacarpal', 'ring-finger-phalanx-proximal', 'ring-finger-phalanx-intermediate', 'ring-finger-phalanx-distal', 'ring-finger-tip', 'pinky-finger-metacarpal', 'pinky-finger-phalanx-proximal', 'pinky-finger-phalanx-intermediate', 'pinky-finger-phalanx-distal', 'pinky-finger-tip'];\n  }\n\n  updateMesh() {\n    const defaultRadius = 0.008;\n    const joints = this.controller.joints;\n    let count = 0;\n\n    for (let i = 0; i < this.joints.length; i++) {\n      const joint = joints[this.joints[i]];\n\n      if (joint.visible) {\n        _vector.setScalar(joint.jointRadius || defaultRadius);\n\n        _matrix.compose(joint.position, joint.quaternion, _vector);\n\n        this.handMesh.setMatrixAt(i, _matrix);\n        count++;\n      }\n    }\n\n    this.handMesh.count = count;\n    this.handMesh.instanceMatrix.needsUpdate = true;\n  }\n\n}\n\nexport { XRHandPrimitiveModel };\n"]},"metadata":{},"sourceType":"module"}