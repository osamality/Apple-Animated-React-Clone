{"ast":null,"code":"import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../../core/Line.js';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\nconst vec1 = new THREE.Vector3();\nconst vec2 = new THREE.Vector3();\n\nconst calculateOffset = (clickPoint, normal, rayStart, rayDir) => {\n  const e1 = normal.dot(normal);\n  const e2 = normal.dot(clickPoint) - normal.dot(rayStart);\n  const e3 = normal.dot(rayDir);\n\n  if (e3 === 0) {\n    return -e2 / e1;\n  }\n\n  vec1.copy(rayDir).multiplyScalar(e1 / e3).sub(normal);\n  vec2.copy(rayDir).multiplyScalar(e2 / e3).add(rayStart).sub(clickPoint);\n  const offset = -vec1.dot(vec2) / vec1.dot(vec1);\n  return offset;\n};\n\nconst upV = new THREE.Vector3(0, 1, 0);\nconst offsetMatrix = new THREE.Matrix4();\n\nconst AxisArrow = ({\n  direction,\n  axis\n}) => {\n  const {\n    translation,\n    translationLimits,\n    annotations,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const clickInfo = React.useRef(null);\n  const offset0 = React.useRef(0);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const onPointerDown = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.innerText = `${translation.current[axis].toFixed(2)}`;\n      divRef.current.style.display = 'block';\n    }\n\n    e.stopPropagation();\n    const rotation = new THREE.Matrix4().extractRotation(objRef.current.matrixWorld);\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const dir = direction.clone().applyMatrix4(rotation).normalize();\n    clickInfo.current = {\n      clickPoint,\n      dir\n    };\n    offset0.current = translation.current[axis];\n    onDragStart({\n      component: 'Arrow',\n      axis,\n      origin,\n      directions: [dir]\n    });\n    camControls && (camControls.enabled = false); // @ts-ignore - setPointerCapture is not in the type definition\n\n    e.target.setPointerCapture(e.pointerId);\n  }, [annotations, direction, camControls, onDragStart, translation, axis]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        dir\n      } = clickInfo.current;\n      const [min, max] = (translationLimits == null ? void 0 : translationLimits[axis]) || [undefined, undefined];\n      let offset = calculateOffset(clickPoint, dir, e.ray.origin, e.ray.direction);\n\n      if (min !== undefined) {\n        offset = Math.max(offset, min - offset0.current);\n      }\n\n      if (max !== undefined) {\n        offset = Math.min(offset, max - offset0.current);\n      }\n\n      translation.current[axis] = offset0.current + offset;\n\n      if (annotations) {\n        divRef.current.innerText = `${translation.current[axis].toFixed(2)}`;\n      }\n\n      offsetMatrix.makeTranslation(dir.x * offset, dir.y * offset, dir.z * offset);\n      onDrag(offsetMatrix);\n    }\n  }, [annotations, onDrag, isHovered, translation, translationLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.style.display = 'none';\n    }\n\n    e.stopPropagation();\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true); // @ts-ignore - releasePointerCapture & PointerEvent#pointerId is not in the type definition\n\n    e.target.releasePointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragEnd]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const {\n    cylinderLength,\n    coneWidth,\n    coneLength,\n    matrixL\n  } = React.useMemo(() => {\n    const coneWidth = fixed ? lineWidth / scale * 1.6 : scale / 20;\n    const coneLength = fixed ? 0.2 : scale / 5;\n    const cylinderLength = fixed ? 1 - coneLength : scale - coneLength;\n    const quaternion = new THREE.Quaternion().setFromUnitVectors(upV, direction.clone().normalize());\n    const matrixL = new THREE.Matrix4().makeRotationFromQuaternion(quaternion);\n    return {\n      cylinderLength,\n      coneWidth,\n      coneLength,\n      matrixL\n    };\n  }, [direction, scale, lineWidth, fixed]);\n  const color_ = isHovered ? hoveredColor : axisColors[axis];\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    matrix: matrixL,\n    matrixAutoUpdate: false,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut\n  }, annotations && /*#__PURE__*/React.createElement(Html, {\n    position: [0, -coneLength, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    visible: false,\n    position: [0, (cylinderLength + coneLength) / 2.0, 0],\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"cylinderGeometry\", {\n    args: [coneWidth * 1.4, coneWidth * 1.4, cylinderLength + coneLength, 8, 1]\n  })), /*#__PURE__*/React.createElement(Line, {\n    transparent: true,\n    raycast: () => null,\n    depthTest: depthTest,\n    points: [0, 0, 0, 0, cylinderLength, 0],\n    lineWidth: lineWidth,\n    color: color_,\n    opacity: opacity,\n    polygonOffset: true,\n    renderOrder: 1,\n    polygonOffsetFactor: -10\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    raycast: () => null,\n    position: [0, cylinderLength + coneLength / 2.0, 0],\n    renderOrder: 500\n  }, /*#__PURE__*/React.createElement(\"coneGeometry\", {\n    args: [coneWidth, coneLength, 24, 1]\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color_,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10\n  }))));\n};\n\nexport { AxisArrow, calculateOffset };","map":{"version":3,"sources":["/Users/osamakhan/Desktop/dev/Apple-Animated-React-Clone/node_modules/@react-three/drei/web/pivotControls/AxisArrow.js"],"names":["React","THREE","useThree","Line","Html","context","vec1","Vector3","vec2","calculateOffset","clickPoint","normal","rayStart","rayDir","e1","dot","e2","e3","copy","multiplyScalar","sub","add","offset","upV","offsetMatrix","Matrix4","AxisArrow","direction","axis","translation","translationLimits","annotations","annotationsClass","depthTest","scale","lineWidth","fixed","axisColors","hoveredColor","opacity","onDragStart","onDrag","onDragEnd","userData","useContext","camControls","state","controls","divRef","useRef","objRef","clickInfo","offset0","isHovered","setIsHovered","useState","onPointerDown","useCallback","e","current","innerText","toFixed","style","display","stopPropagation","rotation","extractRotation","matrixWorld","point","clone","origin","setFromMatrixPosition","dir","applyMatrix4","normalize","component","directions","enabled","target","setPointerCapture","pointerId","onPointerMove","min","max","undefined","ray","Math","makeTranslation","x","y","z","onPointerUp","releasePointerCapture","onPointerOut","cylinderLength","coneWidth","coneLength","matrixL","useMemo","quaternion","Quaternion","setFromUnitVectors","makeRotationFromQuaternion","color_","createElement","ref","matrix","matrixAutoUpdate","position","background","color","padding","borderRadius","whiteSpace","className","visible","args","transparent","raycast","points","polygonOffset","renderOrder","polygonOffsetFactor"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../../core/Line.js';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\n\nconst vec1 = new THREE.Vector3();\nconst vec2 = new THREE.Vector3();\nconst calculateOffset = (clickPoint, normal, rayStart, rayDir) => {\n  const e1 = normal.dot(normal);\n  const e2 = normal.dot(clickPoint) - normal.dot(rayStart);\n  const e3 = normal.dot(rayDir);\n\n  if (e3 === 0) {\n    return -e2 / e1;\n  }\n\n  vec1.copy(rayDir).multiplyScalar(e1 / e3).sub(normal);\n  vec2.copy(rayDir).multiplyScalar(e2 / e3).add(rayStart).sub(clickPoint);\n  const offset = -vec1.dot(vec2) / vec1.dot(vec1);\n  return offset;\n};\nconst upV = new THREE.Vector3(0, 1, 0);\nconst offsetMatrix = new THREE.Matrix4();\nconst AxisArrow = ({\n  direction,\n  axis\n}) => {\n  const {\n    translation,\n    translationLimits,\n    annotations,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const clickInfo = React.useRef(null);\n  const offset0 = React.useRef(0);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const onPointerDown = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.innerText = `${translation.current[axis].toFixed(2)}`;\n      divRef.current.style.display = 'block';\n    }\n\n    e.stopPropagation();\n    const rotation = new THREE.Matrix4().extractRotation(objRef.current.matrixWorld);\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const dir = direction.clone().applyMatrix4(rotation).normalize();\n    clickInfo.current = {\n      clickPoint,\n      dir\n    };\n    offset0.current = translation.current[axis];\n    onDragStart({\n      component: 'Arrow',\n      axis,\n      origin,\n      directions: [dir]\n    });\n    camControls && (camControls.enabled = false); // @ts-ignore - setPointerCapture is not in the type definition\n\n    e.target.setPointerCapture(e.pointerId);\n  }, [annotations, direction, camControls, onDragStart, translation, axis]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        dir\n      } = clickInfo.current;\n      const [min, max] = (translationLimits == null ? void 0 : translationLimits[axis]) || [undefined, undefined];\n      let offset = calculateOffset(clickPoint, dir, e.ray.origin, e.ray.direction);\n\n      if (min !== undefined) {\n        offset = Math.max(offset, min - offset0.current);\n      }\n\n      if (max !== undefined) {\n        offset = Math.min(offset, max - offset0.current);\n      }\n\n      translation.current[axis] = offset0.current + offset;\n\n      if (annotations) {\n        divRef.current.innerText = `${translation.current[axis].toFixed(2)}`;\n      }\n\n      offsetMatrix.makeTranslation(dir.x * offset, dir.y * offset, dir.z * offset);\n      onDrag(offsetMatrix);\n    }\n  }, [annotations, onDrag, isHovered, translation, translationLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.style.display = 'none';\n    }\n\n    e.stopPropagation();\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true); // @ts-ignore - releasePointerCapture & PointerEvent#pointerId is not in the type definition\n\n    e.target.releasePointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragEnd]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const {\n    cylinderLength,\n    coneWidth,\n    coneLength,\n    matrixL\n  } = React.useMemo(() => {\n    const coneWidth = fixed ? lineWidth / scale * 1.6 : scale / 20;\n    const coneLength = fixed ? 0.2 : scale / 5;\n    const cylinderLength = fixed ? 1 - coneLength : scale - coneLength;\n    const quaternion = new THREE.Quaternion().setFromUnitVectors(upV, direction.clone().normalize());\n    const matrixL = new THREE.Matrix4().makeRotationFromQuaternion(quaternion);\n    return {\n      cylinderLength,\n      coneWidth,\n      coneLength,\n      matrixL\n    };\n  }, [direction, scale, lineWidth, fixed]);\n  const color_ = isHovered ? hoveredColor : axisColors[axis];\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    matrix: matrixL,\n    matrixAutoUpdate: false,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut\n  }, annotations && /*#__PURE__*/React.createElement(Html, {\n    position: [0, -coneLength, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    visible: false,\n    position: [0, (cylinderLength + coneLength) / 2.0, 0],\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"cylinderGeometry\", {\n    args: [coneWidth * 1.4, coneWidth * 1.4, cylinderLength + coneLength, 8, 1]\n  })), /*#__PURE__*/React.createElement(Line, {\n    transparent: true,\n    raycast: () => null,\n    depthTest: depthTest,\n    points: [0, 0, 0, 0, cylinderLength, 0],\n    lineWidth: lineWidth,\n    color: color_,\n    opacity: opacity,\n    polygonOffset: true,\n    renderOrder: 1,\n    polygonOffsetFactor: -10\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    raycast: () => null,\n    position: [0, cylinderLength + coneLength / 2.0, 0],\n    renderOrder: 500\n  }, /*#__PURE__*/React.createElement(\"coneGeometry\", {\n    args: [coneWidth, coneLength, 24, 1]\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color_,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10\n  }))));\n};\n\nexport { AxisArrow, calculateOffset };\n"]},"metadata":{},"sourceType":"module"}