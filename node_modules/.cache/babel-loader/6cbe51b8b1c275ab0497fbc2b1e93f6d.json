{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree } from '@react-three/fiber';\nimport * as React from 'react';\nimport { PointerLockControls as PointerLockControls$1 } from 'three-stdlib';\nconst PointerLockControls = /*#__PURE__*/React.forwardRef(({\n  domElement,\n  selector,\n  onChange,\n  onLock,\n  onUnlock,\n  enabled = true,\n  makeDefault,\n  ...props\n}, ref) => {\n  const {\n    camera,\n    ...rest\n  } = props;\n  const setEvents = useThree(state => state.setEvents);\n  const gl = useThree(state => state.gl);\n  const defaultCamera = useThree(state => state.camera);\n  const invalidate = useThree(state => state.invalidate);\n  const events = useThree(state => state.events);\n  const get = useThree(state => state.get);\n  const set = useThree(state => state.set);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const [controls] = React.useState(() => new PointerLockControls$1(explCamera));\n  React.useEffect(() => {\n    if (enabled) {\n      controls.connect(explDomElement); // Force events to be centered while PLC is active\n\n      const oldComputeOffsets = get().events.compute;\n      setEvents({\n        compute(event, state) {\n          const offsetX = state.size.width / 2;\n          const offsetY = state.size.height / 2;\n          state.pointer.set(offsetX / state.size.width * 2 - 1, -(offsetY / state.size.height) * 2 + 1);\n          state.raycaster.setFromCamera(state.pointer, state.camera);\n        }\n\n      });\n      return () => {\n        controls.disconnect();\n        setEvents({\n          compute: oldComputeOffsets\n        });\n      };\n    }\n  }, [enabled, controls]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener('change', callback);\n    if (onLock) controls.addEventListener('lock', onLock);\n    if (onUnlock) controls.addEventListener('unlock', onUnlock); // Enforce previous interaction\n\n    const handler = () => controls.lock();\n\n    const elements = selector ? Array.from(document.querySelectorAll(selector)) : [document];\n    elements.forEach(element => element && element.addEventListener('click', handler));\n    return () => {\n      controls.removeEventListener('change', callback);\n      if (onLock) controls.addEventListener('lock', onLock);\n      if (onUnlock) controls.addEventListener('unlock', onUnlock);\n      elements.forEach(element => element ? element.removeEventListener('click', handler) : undefined);\n    };\n  }, [onChange, onLock, onUnlock, selector, controls, invalidate]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, rest));\n});\nexport { PointerLockControls };","map":{"version":3,"sources":["/Users/osamakhan/Desktop/Apple-Website-Clone-React-master/node_modules/@react-three/drei/core/PointerLockControls.js"],"names":["_extends","useThree","React","PointerLockControls","PointerLockControls$1","forwardRef","domElement","selector","onChange","onLock","onUnlock","enabled","makeDefault","props","ref","camera","rest","setEvents","state","gl","defaultCamera","invalidate","events","get","set","explCamera","explDomElement","connected","controls","useState","useEffect","connect","oldComputeOffsets","compute","event","offsetX","size","width","offsetY","height","pointer","raycaster","setFromCamera","disconnect","callback","e","addEventListener","handler","lock","elements","Array","from","document","querySelectorAll","forEach","element","removeEventListener","undefined","old","createElement","object"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree } from '@react-three/fiber';\nimport * as React from 'react';\nimport { PointerLockControls as PointerLockControls$1 } from 'three-stdlib';\n\nconst PointerLockControls = /*#__PURE__*/React.forwardRef(({\n  domElement,\n  selector,\n  onChange,\n  onLock,\n  onUnlock,\n  enabled = true,\n  makeDefault,\n  ...props\n}, ref) => {\n  const {\n    camera,\n    ...rest\n  } = props;\n  const setEvents = useThree(state => state.setEvents);\n  const gl = useThree(state => state.gl);\n  const defaultCamera = useThree(state => state.camera);\n  const invalidate = useThree(state => state.invalidate);\n  const events = useThree(state => state.events);\n  const get = useThree(state => state.get);\n  const set = useThree(state => state.set);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const [controls] = React.useState(() => new PointerLockControls$1(explCamera));\n  React.useEffect(() => {\n    if (enabled) {\n      controls.connect(explDomElement); // Force events to be centered while PLC is active\n\n      const oldComputeOffsets = get().events.compute;\n      setEvents({\n        compute(event, state) {\n          const offsetX = state.size.width / 2;\n          const offsetY = state.size.height / 2;\n          state.pointer.set(offsetX / state.size.width * 2 - 1, -(offsetY / state.size.height) * 2 + 1);\n          state.raycaster.setFromCamera(state.pointer, state.camera);\n        }\n\n      });\n      return () => {\n        controls.disconnect();\n        setEvents({\n          compute: oldComputeOffsets\n        });\n      };\n    }\n  }, [enabled, controls]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener('change', callback);\n    if (onLock) controls.addEventListener('lock', onLock);\n    if (onUnlock) controls.addEventListener('unlock', onUnlock); // Enforce previous interaction\n\n    const handler = () => controls.lock();\n\n    const elements = selector ? Array.from(document.querySelectorAll(selector)) : [document];\n    elements.forEach(element => element && element.addEventListener('click', handler));\n    return () => {\n      controls.removeEventListener('change', callback);\n      if (onLock) controls.addEventListener('lock', onLock);\n      if (onUnlock) controls.addEventListener('unlock', onUnlock);\n      elements.forEach(element => element ? element.removeEventListener('click', handler) : undefined);\n    };\n  }, [onChange, onLock, onUnlock, selector, controls, invalidate]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, rest));\n});\n\nexport { PointerLockControls };\n"]},"metadata":{},"sourceType":"module"}