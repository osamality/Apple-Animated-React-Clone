{"ast":null,"code":"class ARButton {\n  static createButton(renderer, sessionInit = {}) {\n    const button = document.createElement('button');\n\n    function\n    /*device*/\n    showStartAR() {\n      if (sessionInit.domOverlay === undefined) {\n        const overlay = document.createElement('div');\n        overlay.style.display = 'none';\n        document.body.appendChild(overlay);\n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('width', '38px');\n        svg.setAttribute('height', '38px');\n        svg.style.position = 'absolute';\n        svg.style.right = '20px';\n        svg.style.top = '20px';\n        svg.addEventListener('click', function () {\n          var _currentSession;\n\n          (_currentSession = currentSession) === null || _currentSession === void 0 ? void 0 : _currentSession.end();\n        });\n        overlay.appendChild(svg);\n        const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        path.setAttribute('d', 'M 12,12 L 28,28 M 28,12 12,28');\n        path.setAttribute('stroke', '#fff');\n        path.setAttribute('stroke-width', '2px');\n        svg.appendChild(path);\n\n        if (sessionInit.optionalFeatures === undefined) {\n          sessionInit.optionalFeatures = [];\n        }\n\n        sessionInit.optionalFeatures.push('dom-overlay');\n        sessionInit.domOverlay = {\n          root: overlay\n        };\n      } //\n\n\n      let currentSession = null;\n\n      async function onSessionStarted(session) {\n        session.addEventListener('end', onSessionEnded);\n        renderer.xr.setReferenceSpaceType('local');\n        await renderer.xr.setSession(session);\n        button.textContent = 'STOP AR';\n        sessionInit.domOverlay.root.style.display = '';\n        currentSession = session;\n      }\n\n      function\n      /*event*/\n      onSessionEnded() {\n        currentSession.removeEventListener('end', onSessionEnded);\n        button.textContent = 'START AR';\n        sessionInit.domOverlay.root.style.display = 'none';\n        currentSession = null;\n      } //\n\n\n      button.style.display = '';\n      button.style.cursor = 'pointer';\n      button.style.left = 'calc(50% - 50px)';\n      button.style.width = '100px';\n      button.textContent = 'START AR';\n\n      button.onmouseenter = () => {\n        button.style.opacity = '1.0';\n      };\n\n      button.onmouseleave = () => {\n        button.style.opacity = '0.5';\n      };\n\n      button.onclick = () => {\n        if (currentSession === null) {\n          navigator.xr.requestSession('immersive-ar', sessionInit).then(onSessionStarted);\n        } else {\n          currentSession.end();\n        }\n      };\n    }\n\n    function disableButton() {\n      button.style.display = '';\n      button.style.cursor = 'auto';\n      button.style.left = 'calc(50% - 75px)';\n      button.style.width = '150px';\n      button.onmouseenter = null;\n      button.onmouseleave = null;\n      button.onclick = null;\n    }\n\n    function showARNotSupported() {\n      disableButton();\n      button.textContent = 'AR NOT SUPPORTED';\n    }\n\n    function stylizeElement(element) {\n      element.style.position = 'absolute';\n      element.style.bottom = '20px';\n      element.style.padding = '12px 6px';\n      element.style.border = '1px solid #fff';\n      element.style.borderRadius = '4px';\n      element.style.background = 'rgba(0,0,0,0.1)';\n      element.style.color = '#fff';\n      element.style.font = 'normal 13px sans-serif';\n      element.style.textAlign = 'center';\n      element.style.opacity = '0.5';\n      element.style.outline = 'none';\n      element.style.zIndex = '999';\n    }\n\n    if ('xr' in navigator) {\n      button.id = 'ARButton';\n      button.style.display = 'none';\n      stylizeElement(button) // Query for session mode\n      ;\n      navigator.xr.isSessionSupported('immersive-ar').then(function (supported) {\n        supported ? showStartAR() : showARNotSupported();\n      }).catch(showARNotSupported);\n      return button;\n    } else {\n      const message = document.createElement('a');\n\n      if (window.isSecureContext === false) {\n        message.href = document.location.href.replace(/^http:/, 'https:');\n        message.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\n      } else {\n        message.href = 'https://immersiveweb.dev/';\n        message.innerHTML = 'WEBXR NOT AVAILABLE';\n      }\n\n      message.style.left = 'calc(50% - 90px)';\n      message.style.width = '180px';\n      message.style.textDecoration = 'none';\n      stylizeElement(message);\n      return message;\n    }\n  }\n\n}\n\nexport { ARButton };","map":{"version":3,"sources":["/Users/osamakhan/Desktop/dev/Apple-Animated-React-Clone/node_modules/three-stdlib/webxr/ARButton.js"],"names":["ARButton","createButton","renderer","sessionInit","button","document","createElement","showStartAR","domOverlay","undefined","overlay","style","display","body","appendChild","svg","createElementNS","setAttribute","position","right","top","addEventListener","_currentSession","currentSession","end","path","optionalFeatures","push","root","onSessionStarted","session","onSessionEnded","xr","setReferenceSpaceType","setSession","textContent","removeEventListener","cursor","left","width","onmouseenter","opacity","onmouseleave","onclick","navigator","requestSession","then","disableButton","showARNotSupported","stylizeElement","element","bottom","padding","border","borderRadius","background","color","font","textAlign","outline","zIndex","id","isSessionSupported","supported","catch","message","window","isSecureContext","href","location","replace","innerHTML","textDecoration"],"mappings":"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","sourcesContent":["class ARButton {\n  static createButton(renderer, sessionInit = {}) {\n    const button = document.createElement('button');\n\n    function\n      /*device*/\n    showStartAR() {\n      if (sessionInit.domOverlay === undefined) {\n        const overlay = document.createElement('div');\n        overlay.style.display = 'none';\n        document.body.appendChild(overlay);\n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('width', '38px');\n        svg.setAttribute('height', '38px');\n        svg.style.position = 'absolute';\n        svg.style.right = '20px';\n        svg.style.top = '20px';\n        svg.addEventListener('click', function () {\n          var _currentSession;\n\n          (_currentSession = currentSession) === null || _currentSession === void 0 ? void 0 : _currentSession.end();\n        });\n        overlay.appendChild(svg);\n        const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        path.setAttribute('d', 'M 12,12 L 28,28 M 28,12 12,28');\n        path.setAttribute('stroke', '#fff');\n        path.setAttribute('stroke-width', '2px');\n        svg.appendChild(path);\n\n        if (sessionInit.optionalFeatures === undefined) {\n          sessionInit.optionalFeatures = [];\n        }\n\n        sessionInit.optionalFeatures.push('dom-overlay');\n        sessionInit.domOverlay = {\n          root: overlay\n        };\n      } //\n\n\n      let currentSession = null;\n\n      async function onSessionStarted(session) {\n        session.addEventListener('end', onSessionEnded);\n        renderer.xr.setReferenceSpaceType('local');\n        await renderer.xr.setSession(session);\n        button.textContent = 'STOP AR';\n        sessionInit.domOverlay.root.style.display = '';\n        currentSession = session;\n      }\n\n      function\n        /*event*/\n      onSessionEnded() {\n        currentSession.removeEventListener('end', onSessionEnded);\n        button.textContent = 'START AR';\n        sessionInit.domOverlay.root.style.display = 'none';\n        currentSession = null;\n      } //\n\n\n      button.style.display = '';\n      button.style.cursor = 'pointer';\n      button.style.left = 'calc(50% - 50px)';\n      button.style.width = '100px';\n      button.textContent = 'START AR';\n\n      button.onmouseenter = () => {\n        button.style.opacity = '1.0';\n      };\n\n      button.onmouseleave = () => {\n        button.style.opacity = '0.5';\n      };\n\n      button.onclick = () => {\n        if (currentSession === null) {\n          navigator.xr.requestSession('immersive-ar', sessionInit).then(onSessionStarted);\n        } else {\n          currentSession.end();\n        }\n      };\n    }\n\n    function disableButton() {\n      button.style.display = '';\n      button.style.cursor = 'auto';\n      button.style.left = 'calc(50% - 75px)';\n      button.style.width = '150px';\n      button.onmouseenter = null;\n      button.onmouseleave = null;\n      button.onclick = null;\n    }\n\n    function showARNotSupported() {\n      disableButton();\n      button.textContent = 'AR NOT SUPPORTED';\n    }\n\n    function stylizeElement(element) {\n      element.style.position = 'absolute';\n      element.style.bottom = '20px';\n      element.style.padding = '12px 6px';\n      element.style.border = '1px solid #fff';\n      element.style.borderRadius = '4px';\n      element.style.background = 'rgba(0,0,0,0.1)';\n      element.style.color = '#fff';\n      element.style.font = 'normal 13px sans-serif';\n      element.style.textAlign = 'center';\n      element.style.opacity = '0.5';\n      element.style.outline = 'none';\n      element.style.zIndex = '999';\n    }\n\n    if ('xr' in navigator) {\n      button.id = 'ARButton';\n      button.style.display = 'none';\n      stylizeElement(button) // Query for session mode\n      ;\n      navigator.xr.isSessionSupported('immersive-ar').then(function (supported) {\n        supported ? showStartAR() : showARNotSupported();\n      }).catch(showARNotSupported);\n      return button;\n    } else {\n      const message = document.createElement('a');\n\n      if (window.isSecureContext === false) {\n        message.href = document.location.href.replace(/^http:/, 'https:');\n        message.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\n      } else {\n        message.href = 'https://immersiveweb.dev/';\n        message.innerHTML = 'WEBXR NOT AVAILABLE';\n      }\n\n      message.style.left = 'calc(50% - 90px)';\n      message.style.width = '180px';\n      message.style.textDecoration = 'none';\n      stylizeElement(message);\n      return message;\n    }\n  }\n\n}\n\nexport { ARButton };\n"]},"metadata":{},"sourceType":"module"}