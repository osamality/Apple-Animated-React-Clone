{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport TimerNode from './TimerNode.js';\nimport { add, mul, sin, round, fract, abs, sub } from '../ShaderNode.js';\n\nclass OscNode extends Node {\n  constructor(method = OscNode.SINE, timeNode = new TimerNode()) {\n    super();\n    this.method = method;\n    this.timeNode = timeNode;\n  }\n\n  getNodeType(builder) {\n    return this.timeNode.getNodeType(builder);\n  }\n\n  generate(builder) {\n    const method = this.method;\n    const timeNode = this.timeNode;\n    let outputNode = null;\n\n    if (method === OscNode.SINE) {\n      outputNode = add(mul(sin(mul(add(timeNode, 0.75), Math.PI * 2)), 0.5), 0.5);\n    } else if (method === OscNode.SQUARE) {\n      outputNode = round(fract(timeNode));\n    } else if (method === OscNode.TRIANGLE) {\n      outputNode = abs(sub(1, mul(fract(add(timeNode, 0.5)), 2)));\n    } else if (method === OscNode.SAWTOOTH) {\n      outputNode = fract(timeNode);\n    }\n\n    return outputNode.build(builder);\n  }\n\n  serialize(data) {\n    super.serialize(data);\n    data.method = this.method;\n  }\n\n  deserialize(data) {\n    super.deserialize(data);\n    this.method = data.method;\n  }\n\n}\n\n_defineProperty(OscNode, \"SINE\", 'sine');\n\n_defineProperty(OscNode, \"SQUARE\", 'square');\n\n_defineProperty(OscNode, \"TRIANGLE\", 'triangle');\n\n_defineProperty(OscNode, \"SAWTOOTH\", 'sawtooth');\n\nexport default OscNode;","map":{"version":3,"sources":["/Users/osamakhan/Desktop/Apple-Website-Clone-React-master/node_modules/three-stdlib/nodes/utils/OscNode.js"],"names":["_defineProperty","Node","TimerNode","add","mul","sin","round","fract","abs","sub","OscNode","constructor","method","SINE","timeNode","getNodeType","builder","generate","outputNode","Math","PI","SQUARE","TRIANGLE","SAWTOOTH","build","serialize","data","deserialize"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,GAAtC,EAA2CC,GAA3C,QAAsD,kBAAtD;;AAEA,MAAMC,OAAN,SAAsBT,IAAtB,CAA2B;AACzBU,EAAAA,WAAW,CAACC,MAAM,GAAGF,OAAO,CAACG,IAAlB,EAAwBC,QAAQ,GAAG,IAAIZ,SAAJ,EAAnC,EAAoD;AAC7D;AACA,SAAKU,MAAL,GAAcA,MAAd;AACA,SAAKE,QAAL,GAAgBA,QAAhB;AACD;;AAEDC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,WAAO,KAAKF,QAAL,CAAcC,WAAd,CAA0BC,OAA1B,CAAP;AACD;;AAEDC,EAAAA,QAAQ,CAACD,OAAD,EAAU;AAChB,UAAMJ,MAAM,GAAG,KAAKA,MAApB;AACA,UAAME,QAAQ,GAAG,KAAKA,QAAtB;AACA,QAAII,UAAU,GAAG,IAAjB;;AAEA,QAAIN,MAAM,KAAKF,OAAO,CAACG,IAAvB,EAA6B;AAC3BK,MAAAA,UAAU,GAAGf,GAAG,CAACC,GAAG,CAACC,GAAG,CAACD,GAAG,CAACD,GAAG,CAACW,QAAD,EAAW,IAAX,CAAJ,EAAsBK,IAAI,CAACC,EAAL,GAAU,CAAhC,CAAJ,CAAJ,EAA6C,GAA7C,CAAJ,EAAuD,GAAvD,CAAhB;AACD,KAFD,MAEO,IAAIR,MAAM,KAAKF,OAAO,CAACW,MAAvB,EAA+B;AACpCH,MAAAA,UAAU,GAAGZ,KAAK,CAACC,KAAK,CAACO,QAAD,CAAN,CAAlB;AACD,KAFM,MAEA,IAAIF,MAAM,KAAKF,OAAO,CAACY,QAAvB,EAAiC;AACtCJ,MAAAA,UAAU,GAAGV,GAAG,CAACC,GAAG,CAAC,CAAD,EAAIL,GAAG,CAACG,KAAK,CAACJ,GAAG,CAACW,QAAD,EAAW,GAAX,CAAJ,CAAN,EAA4B,CAA5B,CAAP,CAAJ,CAAhB;AACD,KAFM,MAEA,IAAIF,MAAM,KAAKF,OAAO,CAACa,QAAvB,EAAiC;AACtCL,MAAAA,UAAU,GAAGX,KAAK,CAACO,QAAD,CAAlB;AACD;;AAED,WAAOI,UAAU,CAACM,KAAX,CAAiBR,OAAjB,CAAP;AACD;;AAEDS,EAAAA,SAAS,CAACC,IAAD,EAAO;AACd,UAAMD,SAAN,CAAgBC,IAAhB;AACAA,IAAAA,IAAI,CAACd,MAAL,GAAc,KAAKA,MAAnB;AACD;;AAEDe,EAAAA,WAAW,CAACD,IAAD,EAAO;AAChB,UAAMC,WAAN,CAAkBD,IAAlB;AACA,SAAKd,MAAL,GAAcc,IAAI,CAACd,MAAnB;AACD;;AArCwB;;AAyC3BZ,eAAe,CAACU,OAAD,EAAU,MAAV,EAAkB,MAAlB,CAAf;;AAEAV,eAAe,CAACU,OAAD,EAAU,QAAV,EAAoB,QAApB,CAAf;;AAEAV,eAAe,CAACU,OAAD,EAAU,UAAV,EAAsB,UAAtB,CAAf;;AAEAV,eAAe,CAACU,OAAD,EAAU,UAAV,EAAsB,UAAtB,CAAf;;AAEA,eAAeA,OAAf","sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport TimerNode from './TimerNode.js';\nimport { add, mul, sin, round, fract, abs, sub } from '../ShaderNode.js';\n\nclass OscNode extends Node {\n  constructor(method = OscNode.SINE, timeNode = new TimerNode()) {\n    super();\n    this.method = method;\n    this.timeNode = timeNode;\n  }\n\n  getNodeType(builder) {\n    return this.timeNode.getNodeType(builder);\n  }\n\n  generate(builder) {\n    const method = this.method;\n    const timeNode = this.timeNode;\n    let outputNode = null;\n\n    if (method === OscNode.SINE) {\n      outputNode = add(mul(sin(mul(add(timeNode, 0.75), Math.PI * 2)), 0.5), 0.5);\n    } else if (method === OscNode.SQUARE) {\n      outputNode = round(fract(timeNode));\n    } else if (method === OscNode.TRIANGLE) {\n      outputNode = abs(sub(1, mul(fract(add(timeNode, 0.5)), 2)));\n    } else if (method === OscNode.SAWTOOTH) {\n      outputNode = fract(timeNode);\n    }\n\n    return outputNode.build(builder);\n  }\n\n  serialize(data) {\n    super.serialize(data);\n    data.method = this.method;\n  }\n\n  deserialize(data) {\n    super.deserialize(data);\n    this.method = data.method;\n  }\n\n}\n\n_defineProperty(OscNode, \"SINE\", 'sine');\n\n_defineProperty(OscNode, \"SQUARE\", 'square');\n\n_defineProperty(OscNode, \"TRIANGLE\", 'triangle');\n\n_defineProperty(OscNode, \"SAWTOOTH\", 'sawtooth');\n\nexport default OscNode;\n"]},"metadata":{},"sourceType":"module"}