{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useLoader, useFrame, createPortal, extend } from '@react-three/fiber';\nimport { CubeReflectionMapping, EquirectangularReflectionMapping, sRGBEncoding, LinearEncoding, Scene, WebGLCubeRenderTarget, HalfFloatType, CubeTextureLoader } from 'three';\nimport { RGBELoader, GroundProjectedEnv } from 'three-stdlib';\nimport { presetsObj } from '../helpers/environment-assets.js';\nconst CUBEMAP_ROOT = 'https://market-assets.fra1.cdn.digitaloceanspaces.com/market-assets/hdris/';\n\nconst isRef = obj => obj.current && obj.current.isScene;\n\nconst resolveScene = scene => isRef(scene) ? scene.current : scene;\n\nfunction setEnvProps(background, scene, defaultScene, texture, blur = 0) {\n  const target = resolveScene(scene || defaultScene);\n  const oldbg = target.background;\n  const oldenv = target.environment; // @ts-ignore\n\n  const oldBlur = target.backgroundBlurriness || 0;\n  if (background !== 'only') target.environment = texture;\n  if (background) target.background = texture; // @ts-ignore\n\n  if (background && target.backgroundBlurriness !== undefined) target.backgroundBlurriness = blur;\n  return () => {\n    if (background !== 'only') target.environment = oldenv;\n    if (background) target.background = oldbg; // @ts-ignore\n\n    if (background && target.backgroundBlurriness !== undefined) target.backgroundBlurriness = oldBlur;\n  };\n}\n\nfunction EnvironmentMap({\n  scene,\n  background = false,\n  blur,\n  map\n}) {\n  const defaultScene = useThree(state => state.scene);\n  React.useLayoutEffect(() => {\n    if (map) return setEnvProps(background, scene, defaultScene, map, blur);\n  }, [defaultScene, scene, map, background, blur]);\n  return null;\n}\n\nfunction useEnvironment({\n  files = ['/px.png', '/nx.png', '/py.png', '/ny.png', '/pz.png', '/nz.png'],\n  path = '',\n  preset = undefined,\n  encoding = undefined,\n  extensions\n}) {\n  if (preset) {\n    if (!(preset in presetsObj)) throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT;\n  }\n\n  const isCubeMap = Array.isArray(files);\n  const loader = isCubeMap ? CubeTextureLoader : RGBELoader;\n  const loaderResult = useLoader( // @ts-expect-error\n  loader, isCubeMap ? [files] : files, loader => {\n    loader.setPath(path);\n    if (extensions) extensions(loader);\n  });\n  const texture = isCubeMap ? // @ts-ignore\n  loaderResult[0] : loaderResult;\n  texture.mapping = isCubeMap ? CubeReflectionMapping : EquirectangularReflectionMapping;\n  texture.encoding = (encoding !== null && encoding !== void 0 ? encoding : isCubeMap) ? sRGBEncoding : LinearEncoding;\n  return texture;\n}\n\nfunction EnvironmentCube({\n  background = false,\n  scene,\n  blur,\n  ...rest\n}) {\n  const texture = useEnvironment(rest);\n  const defaultScene = useThree(state => state.scene);\n  React.useLayoutEffect(() => {\n    return setEnvProps(background, scene, defaultScene, texture, blur);\n  }, [texture, background, scene, defaultScene, blur]);\n  return null;\n}\n\nfunction EnvironmentPortal({\n  children,\n  near = 1,\n  far = 1000,\n  resolution = 256,\n  frames = 1,\n  map,\n  background = false,\n  blur,\n  scene,\n  files,\n  path,\n  preset = undefined,\n  extensions\n}) {\n  const gl = useThree(state => state.gl);\n  const defaultScene = useThree(state => state.scene);\n  const camera = React.useRef(null);\n  const [virtualScene] = React.useState(() => new Scene());\n  const fbo = React.useMemo(() => {\n    const fbo = new WebGLCubeRenderTarget(resolution);\n    fbo.texture.type = HalfFloatType;\n    return fbo;\n  }, [resolution]);\n  React.useLayoutEffect(() => {\n    if (frames === 1) camera.current.update(gl, virtualScene);\n    return setEnvProps(background, scene, defaultScene, fbo.texture, blur);\n  }, [children, virtualScene, fbo.texture, scene, defaultScene, background, frames, gl]);\n  let count = 1;\n  useFrame(() => {\n    if (frames === Infinity || count < frames) {\n      camera.current.update(gl, virtualScene);\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, children, /*#__PURE__*/React.createElement(\"cubeCamera\", {\n    ref: camera,\n    args: [near, far, fbo]\n  }), files || preset ? /*#__PURE__*/React.createElement(EnvironmentCube, {\n    background: true,\n    files: files,\n    preset: preset,\n    path: path,\n    extensions: extensions\n  }) : map ? /*#__PURE__*/React.createElement(EnvironmentMap, {\n    background: true,\n    map: map,\n    extensions: extensions\n  }) : null), virtualScene));\n}\n\nfunction EnvironmentGround(props) {\n  var _props$ground, _props$ground2, _scale, _props$ground3;\n\n  const textureDefault = useEnvironment(props);\n  const texture = props.map || textureDefault;\n  React.useMemo(() => extend({\n    GroundProjectedEnvImpl: GroundProjectedEnv\n  }), []);\n  const args = React.useMemo(() => [texture], [texture]);\n  const height = (_props$ground = props.ground) == null ? void 0 : _props$ground.height;\n  const radius = (_props$ground2 = props.ground) == null ? void 0 : _props$ground2.radius;\n  const scale = (_scale = (_props$ground3 = props.ground) == null ? void 0 : _props$ground3.scale) !== null && _scale !== void 0 ? _scale : 1000;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EnvironmentMap, _extends({}, props, {\n    map: texture\n  })), /*#__PURE__*/React.createElement(\"groundProjectedEnvImpl\", {\n    args: args,\n    scale: scale,\n    height: height,\n    radius: radius\n  }));\n}\n\nfunction Environment(props) {\n  return props.ground ? /*#__PURE__*/React.createElement(EnvironmentGround, props) : props.map ? /*#__PURE__*/React.createElement(EnvironmentMap, props) : props.children ? /*#__PURE__*/React.createElement(EnvironmentPortal, props) : /*#__PURE__*/React.createElement(EnvironmentCube, props);\n}\n\nexport { Environment, EnvironmentCube, EnvironmentMap, EnvironmentPortal, useEnvironment };","map":{"version":3,"sources":["/Users/osamakhan/Desktop/dev/Apple-Animated-React-Clone/node_modules/@react-three/drei/core/Environment.js"],"names":["_extends","React","useThree","useLoader","useFrame","createPortal","extend","CubeReflectionMapping","EquirectangularReflectionMapping","sRGBEncoding","LinearEncoding","Scene","WebGLCubeRenderTarget","HalfFloatType","CubeTextureLoader","RGBELoader","GroundProjectedEnv","presetsObj","CUBEMAP_ROOT","isRef","obj","current","isScene","resolveScene","scene","setEnvProps","background","defaultScene","texture","blur","target","oldbg","oldenv","environment","oldBlur","backgroundBlurriness","undefined","EnvironmentMap","map","state","useLayoutEffect","useEnvironment","files","path","preset","encoding","extensions","Error","Object","keys","join","isCubeMap","Array","isArray","loader","loaderResult","setPath","mapping","EnvironmentCube","rest","EnvironmentPortal","children","near","far","resolution","frames","gl","camera","useRef","virtualScene","useState","fbo","useMemo","type","update","count","Infinity","createElement","Fragment","ref","args","EnvironmentGround","props","_props$ground","_props$ground2","_scale","_props$ground3","textureDefault","GroundProjectedEnvImpl","height","ground","radius","scale","Environment"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useLoader, useFrame, createPortal, extend } from '@react-three/fiber';\nimport { CubeReflectionMapping, EquirectangularReflectionMapping, sRGBEncoding, LinearEncoding, Scene, WebGLCubeRenderTarget, HalfFloatType, CubeTextureLoader } from 'three';\nimport { RGBELoader, GroundProjectedEnv } from 'three-stdlib';\nimport { presetsObj } from '../helpers/environment-assets.js';\n\nconst CUBEMAP_ROOT = 'https://market-assets.fra1.cdn.digitaloceanspaces.com/market-assets/hdris/';\n\nconst isRef = obj => obj.current && obj.current.isScene;\n\nconst resolveScene = scene => isRef(scene) ? scene.current : scene;\n\nfunction setEnvProps(background, scene, defaultScene, texture, blur = 0) {\n  const target = resolveScene(scene || defaultScene);\n  const oldbg = target.background;\n  const oldenv = target.environment; // @ts-ignore\n\n  const oldBlur = target.backgroundBlurriness || 0;\n  if (background !== 'only') target.environment = texture;\n  if (background) target.background = texture; // @ts-ignore\n\n  if (background && target.backgroundBlurriness !== undefined) target.backgroundBlurriness = blur;\n  return () => {\n    if (background !== 'only') target.environment = oldenv;\n    if (background) target.background = oldbg; // @ts-ignore\n\n    if (background && target.backgroundBlurriness !== undefined) target.backgroundBlurriness = oldBlur;\n  };\n}\n\nfunction EnvironmentMap({\n  scene,\n  background = false,\n  blur,\n  map\n}) {\n  const defaultScene = useThree(state => state.scene);\n  React.useLayoutEffect(() => {\n    if (map) return setEnvProps(background, scene, defaultScene, map, blur);\n  }, [defaultScene, scene, map, background, blur]);\n  return null;\n}\nfunction useEnvironment({\n  files = ['/px.png', '/nx.png', '/py.png', '/ny.png', '/pz.png', '/nz.png'],\n  path = '',\n  preset = undefined,\n  encoding = undefined,\n  extensions\n}) {\n  if (preset) {\n    if (!(preset in presetsObj)) throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT;\n  }\n\n  const isCubeMap = Array.isArray(files);\n  const loader = isCubeMap ? CubeTextureLoader : RGBELoader;\n  const loaderResult = useLoader( // @ts-expect-error\n  loader, isCubeMap ? [files] : files, loader => {\n    loader.setPath(path);\n    if (extensions) extensions(loader);\n  });\n  const texture = isCubeMap ? // @ts-ignore\n  loaderResult[0] : loaderResult;\n  texture.mapping = isCubeMap ? CubeReflectionMapping : EquirectangularReflectionMapping;\n  texture.encoding = (encoding !== null && encoding !== void 0 ? encoding : isCubeMap) ? sRGBEncoding : LinearEncoding;\n  return texture;\n}\nfunction EnvironmentCube({\n  background = false,\n  scene,\n  blur,\n  ...rest\n}) {\n  const texture = useEnvironment(rest);\n  const defaultScene = useThree(state => state.scene);\n  React.useLayoutEffect(() => {\n    return setEnvProps(background, scene, defaultScene, texture, blur);\n  }, [texture, background, scene, defaultScene, blur]);\n  return null;\n}\nfunction EnvironmentPortal({\n  children,\n  near = 1,\n  far = 1000,\n  resolution = 256,\n  frames = 1,\n  map,\n  background = false,\n  blur,\n  scene,\n  files,\n  path,\n  preset = undefined,\n  extensions\n}) {\n  const gl = useThree(state => state.gl);\n  const defaultScene = useThree(state => state.scene);\n  const camera = React.useRef(null);\n  const [virtualScene] = React.useState(() => new Scene());\n  const fbo = React.useMemo(() => {\n    const fbo = new WebGLCubeRenderTarget(resolution);\n    fbo.texture.type = HalfFloatType;\n    return fbo;\n  }, [resolution]);\n  React.useLayoutEffect(() => {\n    if (frames === 1) camera.current.update(gl, virtualScene);\n    return setEnvProps(background, scene, defaultScene, fbo.texture, blur);\n  }, [children, virtualScene, fbo.texture, scene, defaultScene, background, frames, gl]);\n  let count = 1;\n  useFrame(() => {\n    if (frames === Infinity || count < frames) {\n      camera.current.update(gl, virtualScene);\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, children, /*#__PURE__*/React.createElement(\"cubeCamera\", {\n    ref: camera,\n    args: [near, far, fbo]\n  }), files || preset ? /*#__PURE__*/React.createElement(EnvironmentCube, {\n    background: true,\n    files: files,\n    preset: preset,\n    path: path,\n    extensions: extensions\n  }) : map ? /*#__PURE__*/React.createElement(EnvironmentMap, {\n    background: true,\n    map: map,\n    extensions: extensions\n  }) : null), virtualScene));\n}\n\nfunction EnvironmentGround(props) {\n  var _props$ground, _props$ground2, _scale, _props$ground3;\n\n  const textureDefault = useEnvironment(props);\n  const texture = props.map || textureDefault;\n  React.useMemo(() => extend({\n    GroundProjectedEnvImpl: GroundProjectedEnv\n  }), []);\n  const args = React.useMemo(() => [texture], [texture]);\n  const height = (_props$ground = props.ground) == null ? void 0 : _props$ground.height;\n  const radius = (_props$ground2 = props.ground) == null ? void 0 : _props$ground2.radius;\n  const scale = (_scale = (_props$ground3 = props.ground) == null ? void 0 : _props$ground3.scale) !== null && _scale !== void 0 ? _scale : 1000;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EnvironmentMap, _extends({}, props, {\n    map: texture\n  })), /*#__PURE__*/React.createElement(\"groundProjectedEnvImpl\", {\n    args: args,\n    scale: scale,\n    height: height,\n    radius: radius\n  }));\n}\n\nfunction Environment(props) {\n  return props.ground ? /*#__PURE__*/React.createElement(EnvironmentGround, props) : props.map ? /*#__PURE__*/React.createElement(EnvironmentMap, props) : props.children ? /*#__PURE__*/React.createElement(EnvironmentPortal, props) : /*#__PURE__*/React.createElement(EnvironmentCube, props);\n}\n\nexport { Environment, EnvironmentCube, EnvironmentMap, EnvironmentPortal, useEnvironment };\n"]},"metadata":{},"sourceType":"module"}