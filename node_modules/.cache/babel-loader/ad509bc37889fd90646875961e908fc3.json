{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Vector3, Vector2, Color } from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line2, LineMaterial, LineGeometry } from 'three-stdlib';\nconst Line = /*#__PURE__*/React.forwardRef(function Line({\n  points,\n  color = 'black',\n  vertexColors,\n  linewidth,\n  lineWidth,\n  dashed,\n  ...rest\n}, ref) {\n  const size = useThree(state => state.size);\n  const [line2] = React.useState(() => new Line2());\n  const [lineMaterial] = React.useState(() => new LineMaterial());\n  const lineGeom = React.useMemo(() => {\n    const geom = new LineGeometry();\n    const pValues = points.map(p => {\n      const isArray = Array.isArray(p);\n      return p instanceof Vector3 ? [p.x, p.y, p.z] : p instanceof Vector2 ? [p.x, p.y, 0] : isArray && p.length === 3 ? [p[0], p[1], p[2]] : isArray && p.length === 2 ? [p[0], p[1], 0] : p;\n    });\n    geom.setPositions(pValues.flat());\n\n    if (vertexColors) {\n      const cValues = vertexColors.map(c => c instanceof Color ? c.toArray() : c);\n      geom.setColors(cValues.flat());\n    }\n\n    return geom;\n  }, [points, vertexColors]);\n  React.useLayoutEffect(() => {\n    line2.computeLineDistances();\n  }, [points, line2]);\n  React.useLayoutEffect(() => {\n    if (dashed) {\n      lineMaterial.defines.USE_DASH = '';\n    } else {\n      // Setting lineMaterial.defines.USE_DASH to undefined is apparently not sufficient.\n      delete lineMaterial.defines.USE_DASH;\n    }\n\n    lineMaterial.needsUpdate = true;\n  }, [dashed, lineMaterial]);\n  React.useEffect(() => {\n    return () => lineGeom.dispose();\n  }, [lineGeom]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: line2,\n    ref: ref\n  }, rest), /*#__PURE__*/React.createElement(\"primitive\", {\n    object: lineGeom,\n    attach: \"geometry\"\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: lineMaterial,\n    attach: \"material\",\n    color: color,\n    vertexColors: Boolean(vertexColors),\n    resolution: [size.width, size.height],\n    linewidth: linewidth !== null && linewidth !== void 0 ? linewidth : lineWidth,\n    dashed: dashed\n  }, rest)));\n});\nexport { Line };","map":{"version":3,"sources":["/Users/osamakhan/Desktop/dev/Apple-Animated-React-Clone/node_modules/@react-three/drei/core/Line.js"],"names":["_extends","React","Vector3","Vector2","Color","useThree","Line2","LineMaterial","LineGeometry","Line","forwardRef","points","color","vertexColors","linewidth","lineWidth","dashed","rest","ref","size","state","line2","useState","lineMaterial","lineGeom","useMemo","geom","pValues","map","p","isArray","Array","x","y","z","length","setPositions","flat","cValues","c","toArray","setColors","useLayoutEffect","computeLineDistances","defines","USE_DASH","needsUpdate","useEffect","dispose","createElement","object","attach","Boolean","resolution","width","height"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Vector3, Vector2, Color } from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line2, LineMaterial, LineGeometry } from 'three-stdlib';\n\nconst Line = /*#__PURE__*/React.forwardRef(function Line({\n  points,\n  color = 'black',\n  vertexColors,\n  linewidth,\n  lineWidth,\n  dashed,\n  ...rest\n}, ref) {\n  const size = useThree(state => state.size);\n  const [line2] = React.useState(() => new Line2());\n  const [lineMaterial] = React.useState(() => new LineMaterial());\n  const lineGeom = React.useMemo(() => {\n    const geom = new LineGeometry();\n    const pValues = points.map(p => {\n      const isArray = Array.isArray(p);\n      return p instanceof Vector3 ? [p.x, p.y, p.z] : p instanceof Vector2 ? [p.x, p.y, 0] : isArray && p.length === 3 ? [p[0], p[1], p[2]] : isArray && p.length === 2 ? [p[0], p[1], 0] : p;\n    });\n    geom.setPositions(pValues.flat());\n\n    if (vertexColors) {\n      const cValues = vertexColors.map(c => c instanceof Color ? c.toArray() : c);\n      geom.setColors(cValues.flat());\n    }\n\n    return geom;\n  }, [points, vertexColors]);\n  React.useLayoutEffect(() => {\n    line2.computeLineDistances();\n  }, [points, line2]);\n  React.useLayoutEffect(() => {\n    if (dashed) {\n      lineMaterial.defines.USE_DASH = '';\n    } else {\n      // Setting lineMaterial.defines.USE_DASH to undefined is apparently not sufficient.\n      delete lineMaterial.defines.USE_DASH;\n    }\n\n    lineMaterial.needsUpdate = true;\n  }, [dashed, lineMaterial]);\n  React.useEffect(() => {\n    return () => lineGeom.dispose();\n  }, [lineGeom]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: line2,\n    ref: ref\n  }, rest), /*#__PURE__*/React.createElement(\"primitive\", {\n    object: lineGeom,\n    attach: \"geometry\"\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: lineMaterial,\n    attach: \"material\",\n    color: color,\n    vertexColors: Boolean(vertexColors),\n    resolution: [size.width, size.height],\n    linewidth: linewidth !== null && linewidth !== void 0 ? linewidth : lineWidth,\n    dashed: dashed\n  }, rest)));\n});\n\nexport { Line };\n"]},"metadata":{},"sourceType":"module"}