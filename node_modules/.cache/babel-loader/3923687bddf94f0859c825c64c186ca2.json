{"ast":null,"code":"import Node from '../core/Node.js';\nimport Object3DNode from '../accessors/Object3DNode.js';\nimport PositionNode from '../accessors/PositionNode.js';\nimport UniformNode from '../core/UniformNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport MathNode from '../math/MathNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { getDistanceAttenuation } from '../functions/BSDFs.js';\nimport { Color } from 'three';\n\nclass LightNode extends Node {\n  constructor(light = null) {\n    super('vec3');\n    this.updateType = NodeUpdateType.Object;\n    this.light = light;\n    this._colorNode = new UniformNode(new Color());\n    this._lightCutoffDistanceNode = new UniformNode(0);\n    this._lightDecayExponentNode = new UniformNode(0);\n  }\n\n  getHash() {\n    return this.light.uuid;\n  }\n\n  update() {\n    this._colorNode.value.copy(this.light.color).multiplyScalar(this.light.intensity);\n\n    this._lightCutoffDistanceNode.value = this.light.distance;\n    this._lightDecayExponentNode.value = this.light.decay;\n  }\n\n  generate(builder) {\n    const lightPositionView = new Object3DNode(Object3DNode.VIEW_POSITION);\n    const positionView = new PositionNode(PositionNode.VIEW);\n    const lVector = new OperatorNode('-', lightPositionView, positionView);\n    const lightDirection = new MathNode(MathNode.NORMALIZE, lVector);\n    const lightDistance = new MathNode(MathNode.LENGTH, lVector);\n    const lightAttenuation = getDistanceAttenuation({\n      lightDistance,\n      cutoffDistance: this._lightCutoffDistanceNode,\n      decayExponent: this._lightDecayExponentNode\n    });\n    const lightColor = new OperatorNode('*', this._colorNode, lightAttenuation);\n    lightPositionView.object3d = this.light;\n    const lightingModelFunction = builder.context.lightingModel;\n\n    if (lightingModelFunction !== undefined) {\n      const directDiffuse = builder.context.directDiffuse;\n      const directSpecular = builder.context.directSpecular;\n      lightingModelFunction({\n        lightDirection,\n        lightColor,\n        directDiffuse,\n        directSpecular\n      }, builder);\n    }\n  }\n\n}\n\nexport default LightNode;","map":{"version":3,"sources":["/Users/osamakhan/Desktop/dev/Apple-Animated-React-Clone/node_modules/three-stdlib/nodes/lights/LightNode.js"],"names":["Node","Object3DNode","PositionNode","UniformNode","OperatorNode","MathNode","NodeUpdateType","getDistanceAttenuation","Color","LightNode","constructor","light","updateType","Object","_colorNode","_lightCutoffDistanceNode","_lightDecayExponentNode","getHash","uuid","update","value","copy","color","multiplyScalar","intensity","distance","decay","generate","builder","lightPositionView","VIEW_POSITION","positionView","VIEW","lVector","lightDirection","NORMALIZE","lightDistance","LENGTH","lightAttenuation","cutoffDistance","decayExponent","lightColor","object3d","lightingModelFunction","context","lightingModel","undefined","directDiffuse","directSpecular"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,iBAAjB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,sBAAT,QAAuC,uBAAvC;AACA,SAASC,KAAT,QAAsB,OAAtB;;AAEA,MAAMC,SAAN,SAAwBT,IAAxB,CAA6B;AAC3BU,EAAAA,WAAW,CAACC,KAAK,GAAG,IAAT,EAAe;AACxB,UAAM,MAAN;AACA,SAAKC,UAAL,GAAkBN,cAAc,CAACO,MAAjC;AACA,SAAKF,KAAL,GAAaA,KAAb;AACA,SAAKG,UAAL,GAAkB,IAAIX,WAAJ,CAAgB,IAAIK,KAAJ,EAAhB,CAAlB;AACA,SAAKO,wBAAL,GAAgC,IAAIZ,WAAJ,CAAgB,CAAhB,CAAhC;AACA,SAAKa,uBAAL,GAA+B,IAAIb,WAAJ,CAAgB,CAAhB,CAA/B;AACD;;AAEDc,EAAAA,OAAO,GAAG;AACR,WAAO,KAAKN,KAAL,CAAWO,IAAlB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,SAAKL,UAAL,CAAgBM,KAAhB,CAAsBC,IAAtB,CAA2B,KAAKV,KAAL,CAAWW,KAAtC,EAA6CC,cAA7C,CAA4D,KAAKZ,KAAL,CAAWa,SAAvE;;AAEA,SAAKT,wBAAL,CAA8BK,KAA9B,GAAsC,KAAKT,KAAL,CAAWc,QAAjD;AACA,SAAKT,uBAAL,CAA6BI,KAA7B,GAAqC,KAAKT,KAAL,CAAWe,KAAhD;AACD;;AAEDC,EAAAA,QAAQ,CAACC,OAAD,EAAU;AAChB,UAAMC,iBAAiB,GAAG,IAAI5B,YAAJ,CAAiBA,YAAY,CAAC6B,aAA9B,CAA1B;AACA,UAAMC,YAAY,GAAG,IAAI7B,YAAJ,CAAiBA,YAAY,CAAC8B,IAA9B,CAArB;AACA,UAAMC,OAAO,GAAG,IAAI7B,YAAJ,CAAiB,GAAjB,EAAsByB,iBAAtB,EAAyCE,YAAzC,CAAhB;AACA,UAAMG,cAAc,GAAG,IAAI7B,QAAJ,CAAaA,QAAQ,CAAC8B,SAAtB,EAAiCF,OAAjC,CAAvB;AACA,UAAMG,aAAa,GAAG,IAAI/B,QAAJ,CAAaA,QAAQ,CAACgC,MAAtB,EAA8BJ,OAA9B,CAAtB;AACA,UAAMK,gBAAgB,GAAG/B,sBAAsB,CAAC;AAC9C6B,MAAAA,aAD8C;AAE9CG,MAAAA,cAAc,EAAE,KAAKxB,wBAFyB;AAG9CyB,MAAAA,aAAa,EAAE,KAAKxB;AAH0B,KAAD,CAA/C;AAKA,UAAMyB,UAAU,GAAG,IAAIrC,YAAJ,CAAiB,GAAjB,EAAsB,KAAKU,UAA3B,EAAuCwB,gBAAvC,CAAnB;AACAT,IAAAA,iBAAiB,CAACa,QAAlB,GAA6B,KAAK/B,KAAlC;AACA,UAAMgC,qBAAqB,GAAGf,OAAO,CAACgB,OAAR,CAAgBC,aAA9C;;AAEA,QAAIF,qBAAqB,KAAKG,SAA9B,EAAyC;AACvC,YAAMC,aAAa,GAAGnB,OAAO,CAACgB,OAAR,CAAgBG,aAAtC;AACA,YAAMC,cAAc,GAAGpB,OAAO,CAACgB,OAAR,CAAgBI,cAAvC;AACAL,MAAAA,qBAAqB,CAAC;AACpBT,QAAAA,cADoB;AAEpBO,QAAAA,UAFoB;AAGpBM,QAAAA,aAHoB;AAIpBC,QAAAA;AAJoB,OAAD,EAKlBpB,OALkB,CAArB;AAMD;AACF;;AA9C0B;;AAkD7B,eAAenB,SAAf","sourcesContent":["import Node from '../core/Node.js';\nimport Object3DNode from '../accessors/Object3DNode.js';\nimport PositionNode from '../accessors/PositionNode.js';\nimport UniformNode from '../core/UniformNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport MathNode from '../math/MathNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { getDistanceAttenuation } from '../functions/BSDFs.js';\nimport { Color } from 'three';\n\nclass LightNode extends Node {\n  constructor(light = null) {\n    super('vec3');\n    this.updateType = NodeUpdateType.Object;\n    this.light = light;\n    this._colorNode = new UniformNode(new Color());\n    this._lightCutoffDistanceNode = new UniformNode(0);\n    this._lightDecayExponentNode = new UniformNode(0);\n  }\n\n  getHash() {\n    return this.light.uuid;\n  }\n\n  update() {\n    this._colorNode.value.copy(this.light.color).multiplyScalar(this.light.intensity);\n\n    this._lightCutoffDistanceNode.value = this.light.distance;\n    this._lightDecayExponentNode.value = this.light.decay;\n  }\n\n  generate(builder) {\n    const lightPositionView = new Object3DNode(Object3DNode.VIEW_POSITION);\n    const positionView = new PositionNode(PositionNode.VIEW);\n    const lVector = new OperatorNode('-', lightPositionView, positionView);\n    const lightDirection = new MathNode(MathNode.NORMALIZE, lVector);\n    const lightDistance = new MathNode(MathNode.LENGTH, lVector);\n    const lightAttenuation = getDistanceAttenuation({\n      lightDistance,\n      cutoffDistance: this._lightCutoffDistanceNode,\n      decayExponent: this._lightDecayExponentNode\n    });\n    const lightColor = new OperatorNode('*', this._colorNode, lightAttenuation);\n    lightPositionView.object3d = this.light;\n    const lightingModelFunction = builder.context.lightingModel;\n\n    if (lightingModelFunction !== undefined) {\n      const directDiffuse = builder.context.directDiffuse;\n      const directSpecular = builder.context.directSpecular;\n      lightingModelFunction({\n        lightDirection,\n        lightColor,\n        directDiffuse,\n        directSpecular\n      }, builder);\n    }\n  }\n\n}\n\nexport default LightNode;\n"]},"metadata":{},"sourceType":"module"}