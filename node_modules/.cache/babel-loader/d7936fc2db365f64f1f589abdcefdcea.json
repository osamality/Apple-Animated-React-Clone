{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { useFBO } from './useFBO.js';\n\nconst isFunction = node => typeof node === 'function';\n\nconst PerspectiveCamera = /*#__PURE__*/React.forwardRef(({\n  envMap,\n  resolution = 256,\n  frames = Infinity,\n  makeDefault,\n  children,\n  ...props\n}, ref) => {\n  const set = useThree(({\n    set\n  }) => set);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const size = useThree(({\n    size\n  }) => size);\n  const cameraRef = React.useRef(null);\n  const groupRef = React.useRef(null);\n  const fbo = useFBO(resolution);\n  React.useLayoutEffect(() => {\n    if (!props.manual) {\n      cameraRef.current.aspect = size.width / size.height;\n    }\n  }, [size, props]);\n  React.useLayoutEffect(() => {\n    cameraRef.current.updateProjectionMatrix();\n  });\n  let count = 0;\n  let oldEnvMap = null;\n  const functional = isFunction(children);\n  useFrame(state => {\n    if (functional && (frames === Infinity || count < frames)) {\n      groupRef.current.visible = false;\n      state.gl.setRenderTarget(fbo);\n      oldEnvMap = state.scene.background;\n      if (envMap) state.scene.background = envMap;\n      state.gl.render(state.scene, cameraRef.current);\n      state.scene.background = oldEnvMap;\n      state.gl.setRenderTarget(null);\n      groupRef.current.visible = true;\n      count++;\n    }\n  });\n  React.useLayoutEffect(() => {\n    if (makeDefault) {\n      const oldCam = camera;\n      set(() => ({\n        camera: cameraRef.current\n      }));\n      return () => set(() => ({\n        camera: oldCam\n      }));\n    } // The camera should not be part of the dependency list because this components camera is a stable reference\n    // that must exchange the default, and clean up after itself on unmount.\n\n  }, [cameraRef, makeDefault, set]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"perspectiveCamera\", _extends({\n    ref: mergeRefs([cameraRef, ref])\n  }, props), !functional && children), /*#__PURE__*/React.createElement(\"group\", {\n    ref: groupRef\n  }, functional && children(fbo.texture)));\n});\nexport { PerspectiveCamera };","map":{"version":3,"sources":["/Users/osamakhan/Desktop/dev/Apple-Animated-React-Clone/node_modules/@react-three/drei/core/PerspectiveCamera.js"],"names":["_extends","React","useThree","useFrame","mergeRefs","useFBO","isFunction","node","PerspectiveCamera","forwardRef","envMap","resolution","frames","Infinity","makeDefault","children","props","ref","set","camera","size","cameraRef","useRef","groupRef","fbo","useLayoutEffect","manual","current","aspect","width","height","updateProjectionMatrix","count","oldEnvMap","functional","state","visible","gl","setRenderTarget","scene","background","render","oldCam","createElement","Fragment","texture"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { useFBO } from './useFBO.js';\n\nconst isFunction = node => typeof node === 'function';\n\nconst PerspectiveCamera = /*#__PURE__*/React.forwardRef(({\n  envMap,\n  resolution = 256,\n  frames = Infinity,\n  makeDefault,\n  children,\n  ...props\n}, ref) => {\n  const set = useThree(({\n    set\n  }) => set);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const size = useThree(({\n    size\n  }) => size);\n  const cameraRef = React.useRef(null);\n  const groupRef = React.useRef(null);\n  const fbo = useFBO(resolution);\n  React.useLayoutEffect(() => {\n    if (!props.manual) {\n      cameraRef.current.aspect = size.width / size.height;\n    }\n  }, [size, props]);\n  React.useLayoutEffect(() => {\n    cameraRef.current.updateProjectionMatrix();\n  });\n  let count = 0;\n  let oldEnvMap = null;\n  const functional = isFunction(children);\n  useFrame(state => {\n    if (functional && (frames === Infinity || count < frames)) {\n      groupRef.current.visible = false;\n      state.gl.setRenderTarget(fbo);\n      oldEnvMap = state.scene.background;\n      if (envMap) state.scene.background = envMap;\n      state.gl.render(state.scene, cameraRef.current);\n      state.scene.background = oldEnvMap;\n      state.gl.setRenderTarget(null);\n      groupRef.current.visible = true;\n      count++;\n    }\n  });\n  React.useLayoutEffect(() => {\n    if (makeDefault) {\n      const oldCam = camera;\n      set(() => ({\n        camera: cameraRef.current\n      }));\n      return () => set(() => ({\n        camera: oldCam\n      }));\n    } // The camera should not be part of the dependency list because this components camera is a stable reference\n    // that must exchange the default, and clean up after itself on unmount.\n\n  }, [cameraRef, makeDefault, set]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"perspectiveCamera\", _extends({\n    ref: mergeRefs([cameraRef, ref])\n  }, props), !functional && children), /*#__PURE__*/React.createElement(\"group\", {\n    ref: groupRef\n  }, functional && children(fbo.texture)));\n});\n\nexport { PerspectiveCamera };\n"]},"metadata":{},"sourceType":"module"}