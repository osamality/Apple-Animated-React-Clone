{"ast":null,"code":"import { S as SUPPORT, C as ConfigResolverMap, _ as _objectSpread2, a as _defineProperty, t as toDomEventType, i as isTouch, b as touchIds, E as EngineMap, c as chain, p as parseProp, d as toHandlerProp } from './actions-e3d93fde.esm.js';\nimport './maths-b28d9b98.esm.js';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nconst sharedConfigResolver = {\n  target(value) {\n    if (value) {\n      return () => 'current' in value ? value.current : value;\n    }\n\n    return undefined;\n  },\n\n  enabled(value = true) {\n    return value;\n  },\n\n  window(value = SUPPORT.isBrowser ? window : undefined) {\n    return value;\n  },\n\n  eventOptions({\n    passive = true,\n    capture = false\n  } = {}) {\n    return {\n      passive,\n      capture\n    };\n  },\n\n  transform(value) {\n    return value;\n  }\n\n};\nconst _excluded = [\"target\", \"eventOptions\", \"window\", \"enabled\", \"transform\"];\n\nfunction resolveWith(config = {}, resolvers) {\n  const result = {};\n\n  for (const [key, resolver] of Object.entries(resolvers)) {\n    switch (typeof resolver) {\n      case 'function':\n        if (process.env.NODE_ENV === 'development') {\n          const r = resolver.call(result, config[key], key, config);\n          if (!Number.isNaN(r)) result[key] = r;\n        } else {\n          result[key] = resolver.call(result, config[key], key, config);\n        }\n\n        break;\n\n      case 'object':\n        result[key] = resolveWith(config[key], resolver);\n        break;\n\n      case 'boolean':\n        if (resolver) result[key] = config[key];\n        break;\n    }\n  }\n\n  return result;\n}\n\nfunction parse(newConfig, gestureKey, _config = {}) {\n  const _ref = newConfig,\n        {\n    target,\n    eventOptions,\n    window,\n    enabled,\n    transform\n  } = _ref,\n        rest = _objectWithoutProperties(_ref, _excluded);\n\n  _config.shared = resolveWith({\n    target,\n    eventOptions,\n    window,\n    enabled,\n    transform\n  }, sharedConfigResolver);\n\n  if (gestureKey) {\n    const resolver = ConfigResolverMap.get(gestureKey);\n    _config[gestureKey] = resolveWith(_objectSpread2({\n      shared: _config.shared\n    }, rest), resolver);\n  } else {\n    for (const key in rest) {\n      const resolver = ConfigResolverMap.get(key);\n\n      if (resolver) {\n        _config[key] = resolveWith(_objectSpread2({\n          shared: _config.shared\n        }, rest[key]), resolver);\n      } else if (process.env.NODE_ENV === 'development') {\n        if (!['drag', 'pinch', 'scroll', 'wheel', 'move', 'hover'].includes(key)) {\n          if (key === 'domTarget') {\n            throw Error(`[@use-gesture]: \\`domTarget\\` option has been renamed to \\`target\\`.`);\n          }\n\n          console.warn(`[@use-gesture]: Unknown config key \\`${key}\\` was used. Please read the documentation for further information.`);\n        }\n      }\n    }\n  }\n\n  return _config;\n}\n\nclass EventStore {\n  constructor(ctrl, gestureKey) {\n    _defineProperty(this, \"_listeners\", new Set());\n\n    this._ctrl = ctrl;\n    this._gestureKey = gestureKey;\n  }\n\n  add(element, device, action, handler, options) {\n    const listeners = this._listeners;\n    const type = toDomEventType(device, action);\n\n    const _options = this._gestureKey ? this._ctrl.config[this._gestureKey].eventOptions : {};\n\n    const eventOptions = _objectSpread2(_objectSpread2({}, _options), options);\n\n    element.addEventListener(type, handler, eventOptions);\n\n    const remove = () => {\n      element.removeEventListener(type, handler, eventOptions);\n      listeners.delete(remove);\n    };\n\n    listeners.add(remove);\n    return remove;\n  }\n\n  clean() {\n    this._listeners.forEach(remove => remove());\n\n    this._listeners.clear();\n  }\n\n}\n\nclass TimeoutStore {\n  constructor() {\n    _defineProperty(this, \"_timeouts\", new Map());\n  }\n\n  add(key, callback, ms = 140, ...args) {\n    this.remove(key);\n\n    this._timeouts.set(key, window.setTimeout(callback, ms, ...args));\n  }\n\n  remove(key) {\n    const timeout = this._timeouts.get(key);\n\n    if (timeout) window.clearTimeout(timeout);\n  }\n\n  clean() {\n    this._timeouts.forEach(timeout => void window.clearTimeout(timeout));\n\n    this._timeouts.clear();\n  }\n\n}\n\nclass Controller {\n  constructor(handlers) {\n    _defineProperty(this, \"gestures\", new Set());\n\n    _defineProperty(this, \"_targetEventStore\", new EventStore(this));\n\n    _defineProperty(this, \"gestureEventStores\", {});\n\n    _defineProperty(this, \"gestureTimeoutStores\", {});\n\n    _defineProperty(this, \"handlers\", {});\n\n    _defineProperty(this, \"config\", {});\n\n    _defineProperty(this, \"pointerIds\", new Set());\n\n    _defineProperty(this, \"touchIds\", new Set());\n\n    _defineProperty(this, \"state\", {\n      shared: {\n        shiftKey: false,\n        metaKey: false,\n        ctrlKey: false,\n        altKey: false\n      }\n    });\n\n    resolveGestures(this, handlers);\n  }\n\n  setEventIds(event) {\n    if (isTouch(event)) {\n      this.touchIds = new Set(touchIds(event));\n      return this.touchIds;\n    } else if ('pointerId' in event) {\n      if (event.type === 'pointerup' || event.type === 'pointercancel') this.pointerIds.delete(event.pointerId);else if (event.type === 'pointerdown') this.pointerIds.add(event.pointerId);\n      return this.pointerIds;\n    }\n  }\n\n  applyHandlers(handlers, nativeHandlers) {\n    this.handlers = handlers;\n    this.nativeHandlers = nativeHandlers;\n  }\n\n  applyConfig(config, gestureKey) {\n    this.config = parse(config, gestureKey, this.config);\n  }\n\n  clean() {\n    this._targetEventStore.clean();\n\n    for (const key of this.gestures) {\n      this.gestureEventStores[key].clean();\n      this.gestureTimeoutStores[key].clean();\n    }\n  }\n\n  effect() {\n    if (this.config.shared.target) this.bind();\n    return () => this._targetEventStore.clean();\n  }\n\n  bind(...args) {\n    const sharedConfig = this.config.shared;\n    const props = {};\n    let target;\n\n    if (sharedConfig.target) {\n      target = sharedConfig.target();\n      if (!target) return;\n    }\n\n    if (sharedConfig.enabled) {\n      for (const gestureKey of this.gestures) {\n        const gestureConfig = this.config[gestureKey];\n        const bindFunction = bindToProps(props, gestureConfig.eventOptions, !!target);\n\n        if (gestureConfig.enabled) {\n          const Engine = EngineMap.get(gestureKey);\n          new Engine(this, args, gestureKey).bind(bindFunction);\n        }\n      }\n\n      const nativeBindFunction = bindToProps(props, sharedConfig.eventOptions, !!target);\n\n      for (const eventKey in this.nativeHandlers) {\n        nativeBindFunction(eventKey, '', event => this.nativeHandlers[eventKey](_objectSpread2(_objectSpread2({}, this.state.shared), {}, {\n          event,\n          args\n        })), undefined, true);\n      }\n    }\n\n    for (const handlerProp in props) {\n      props[handlerProp] = chain(...props[handlerProp]);\n    }\n\n    if (!target) return props;\n\n    for (const handlerProp in props) {\n      const {\n        device,\n        capture,\n        passive\n      } = parseProp(handlerProp);\n\n      this._targetEventStore.add(target, device, '', props[handlerProp], {\n        capture,\n        passive\n      });\n    }\n  }\n\n}\n\nfunction setupGesture(ctrl, gestureKey) {\n  ctrl.gestures.add(gestureKey);\n  ctrl.gestureEventStores[gestureKey] = new EventStore(ctrl, gestureKey);\n  ctrl.gestureTimeoutStores[gestureKey] = new TimeoutStore();\n}\n\nfunction resolveGestures(ctrl, internalHandlers) {\n  if (internalHandlers.drag) setupGesture(ctrl, 'drag');\n  if (internalHandlers.wheel) setupGesture(ctrl, 'wheel');\n  if (internalHandlers.scroll) setupGesture(ctrl, 'scroll');\n  if (internalHandlers.move) setupGesture(ctrl, 'move');\n  if (internalHandlers.pinch) setupGesture(ctrl, 'pinch');\n  if (internalHandlers.hover) setupGesture(ctrl, 'hover');\n}\n\nconst bindToProps = (props, eventOptions, withPassiveOption) => (device, action, handler, options = {}, isNative = false) => {\n  var _options$capture, _options$passive;\n\n  const capture = (_options$capture = options.capture) !== null && _options$capture !== void 0 ? _options$capture : eventOptions.capture;\n  const passive = (_options$passive = options.passive) !== null && _options$passive !== void 0 ? _options$passive : eventOptions.passive;\n  let handlerProp = isNative ? device : toHandlerProp(device, action, capture);\n  if (withPassiveOption && passive) handlerProp += 'Passive';\n  props[handlerProp] = props[handlerProp] || [];\n  props[handlerProp].push(handler);\n};\n\nconst RE_NOT_NATIVE = /^on(Drag|Wheel|Scroll|Move|Pinch|Hover)/;\n\nfunction sortHandlers(_handlers) {\n  const native = {};\n  const handlers = {};\n  const actions = new Set();\n\n  for (let key in _handlers) {\n    if (RE_NOT_NATIVE.test(key)) {\n      actions.add(RegExp.lastMatch);\n      handlers[key] = _handlers[key];\n    } else {\n      native[key] = _handlers[key];\n    }\n  }\n\n  return [handlers, native, actions];\n}\n\nfunction registerGesture(actions, handlers, handlerKey, key, internalHandlers, config) {\n  if (!actions.has(handlerKey)) return;\n\n  if (!EngineMap.has(key)) {\n    if (process.env.NODE_ENV === 'development') {\n      console.warn(`[@use-gesture]: You've created a custom handler that that uses the \\`${key}\\` gesture but isn't properly configured.\\n\\nPlease add \\`${key}Action\\` when creating your handler.`);\n    }\n\n    return;\n  }\n\n  const startKey = handlerKey + 'Start';\n  const endKey = handlerKey + 'End';\n\n  const fn = state => {\n    let memo = undefined;\n    if (state.first && startKey in handlers) handlers[startKey](state);\n    if (handlerKey in handlers) memo = handlers[handlerKey](state);\n    if (state.last && endKey in handlers) handlers[endKey](state);\n    return memo;\n  };\n\n  internalHandlers[key] = fn;\n  config[key] = config[key] || {};\n}\n\nfunction parseMergedHandlers(mergedHandlers, mergedConfig) {\n  const [handlers, nativeHandlers, actions] = sortHandlers(mergedHandlers);\n  const internalHandlers = {};\n  registerGesture(actions, handlers, 'onDrag', 'drag', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onWheel', 'wheel', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onScroll', 'scroll', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onPinch', 'pinch', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onMove', 'move', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onHover', 'hover', internalHandlers, mergedConfig);\n  return {\n    handlers: internalHandlers,\n    config: mergedConfig,\n    nativeHandlers\n  };\n}\n\nexport { Controller, parseMergedHandlers };","map":{"version":3,"sources":["/Users/osamakhan/Desktop/dev/Apple-Animated-React-Clone/node_modules/@use-gesture/core/dist/use-gesture-core.esm.js"],"names":["S","SUPPORT","C","ConfigResolverMap","_","_objectSpread2","a","_defineProperty","t","toDomEventType","i","isTouch","b","touchIds","E","EngineMap","c","chain","p","parseProp","d","toHandlerProp","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","length","indexOf","_objectWithoutProperties","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","sharedConfigResolver","value","current","undefined","enabled","window","isBrowser","eventOptions","passive","capture","transform","_excluded","resolveWith","config","resolvers","result","resolver","entries","process","env","NODE_ENV","r","Number","isNaN","parse","newConfig","gestureKey","_config","_ref","rest","shared","get","includes","Error","console","warn","EventStore","constructor","ctrl","Set","_ctrl","_gestureKey","add","element","device","action","handler","options","listeners","_listeners","type","_options","addEventListener","remove","removeEventListener","delete","clean","forEach","clear","TimeoutStore","Map","callback","ms","args","_timeouts","set","setTimeout","timeout","clearTimeout","Controller","handlers","shiftKey","metaKey","ctrlKey","altKey","resolveGestures","setEventIds","event","pointerIds","pointerId","applyHandlers","nativeHandlers","applyConfig","_targetEventStore","gestures","gestureEventStores","gestureTimeoutStores","effect","bind","sharedConfig","props","gestureConfig","bindFunction","bindToProps","Engine","nativeBindFunction","eventKey","state","handlerProp","setupGesture","internalHandlers","drag","wheel","scroll","move","pinch","hover","withPassiveOption","isNative","_options$capture","_options$passive","push","RE_NOT_NATIVE","sortHandlers","_handlers","native","actions","test","RegExp","lastMatch","registerGesture","handlerKey","has","startKey","endKey","fn","memo","first","last","parseMergedHandlers","mergedHandlers","mergedConfig"],"mappings":"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","sourcesContent":["import { S as SUPPORT, C as ConfigResolverMap, _ as _objectSpread2, a as _defineProperty, t as toDomEventType, i as isTouch, b as touchIds, E as EngineMap, c as chain, p as parseProp, d as toHandlerProp } from './actions-e3d93fde.esm.js';\nimport './maths-b28d9b98.esm.js';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\n\nconst sharedConfigResolver = {\n  target(value) {\n    if (value) {\n      return () => 'current' in value ? value.current : value;\n    }\n    return undefined;\n  },\n  enabled(value = true) {\n    return value;\n  },\n  window(value = SUPPORT.isBrowser ? window : undefined) {\n    return value;\n  },\n  eventOptions({\n    passive = true,\n    capture = false\n  } = {}) {\n    return {\n      passive,\n      capture\n    };\n  },\n  transform(value) {\n    return value;\n  }\n};\n\nconst _excluded = [\"target\", \"eventOptions\", \"window\", \"enabled\", \"transform\"];\nfunction resolveWith(config = {}, resolvers) {\n  const result = {};\n  for (const [key, resolver] of Object.entries(resolvers)) {\n    switch (typeof resolver) {\n      case 'function':\n        if (process.env.NODE_ENV === 'development') {\n          const r = resolver.call(result, config[key], key, config);\n          if (!Number.isNaN(r)) result[key] = r;\n        } else {\n          result[key] = resolver.call(result, config[key], key, config);\n        }\n        break;\n      case 'object':\n        result[key] = resolveWith(config[key], resolver);\n        break;\n      case 'boolean':\n        if (resolver) result[key] = config[key];\n        break;\n    }\n  }\n  return result;\n}\nfunction parse(newConfig, gestureKey, _config = {}) {\n  const _ref = newConfig,\n    {\n      target,\n      eventOptions,\n      window,\n      enabled,\n      transform\n    } = _ref,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  _config.shared = resolveWith({\n    target,\n    eventOptions,\n    window,\n    enabled,\n    transform\n  }, sharedConfigResolver);\n  if (gestureKey) {\n    const resolver = ConfigResolverMap.get(gestureKey);\n    _config[gestureKey] = resolveWith(_objectSpread2({\n      shared: _config.shared\n    }, rest), resolver);\n  } else {\n    for (const key in rest) {\n      const resolver = ConfigResolverMap.get(key);\n      if (resolver) {\n        _config[key] = resolveWith(_objectSpread2({\n          shared: _config.shared\n        }, rest[key]), resolver);\n      } else if (process.env.NODE_ENV === 'development') {\n        if (!['drag', 'pinch', 'scroll', 'wheel', 'move', 'hover'].includes(key)) {\n          if (key === 'domTarget') {\n            throw Error(`[@use-gesture]: \\`domTarget\\` option has been renamed to \\`target\\`.`);\n          }\n          console.warn(`[@use-gesture]: Unknown config key \\`${key}\\` was used. Please read the documentation for further information.`);\n        }\n      }\n    }\n  }\n  return _config;\n}\n\nclass EventStore {\n  constructor(ctrl, gestureKey) {\n    _defineProperty(this, \"_listeners\", new Set());\n    this._ctrl = ctrl;\n    this._gestureKey = gestureKey;\n  }\n  add(element, device, action, handler, options) {\n    const listeners = this._listeners;\n    const type = toDomEventType(device, action);\n    const _options = this._gestureKey ? this._ctrl.config[this._gestureKey].eventOptions : {};\n    const eventOptions = _objectSpread2(_objectSpread2({}, _options), options);\n    element.addEventListener(type, handler, eventOptions);\n    const remove = () => {\n      element.removeEventListener(type, handler, eventOptions);\n      listeners.delete(remove);\n    };\n    listeners.add(remove);\n    return remove;\n  }\n  clean() {\n    this._listeners.forEach(remove => remove());\n    this._listeners.clear();\n  }\n}\n\nclass TimeoutStore {\n  constructor() {\n    _defineProperty(this, \"_timeouts\", new Map());\n  }\n  add(key, callback, ms = 140, ...args) {\n    this.remove(key);\n    this._timeouts.set(key, window.setTimeout(callback, ms, ...args));\n  }\n  remove(key) {\n    const timeout = this._timeouts.get(key);\n    if (timeout) window.clearTimeout(timeout);\n  }\n  clean() {\n    this._timeouts.forEach(timeout => void window.clearTimeout(timeout));\n    this._timeouts.clear();\n  }\n}\n\nclass Controller {\n\n  constructor(handlers) {\n    _defineProperty(this, \"gestures\", new Set());\n    _defineProperty(this, \"_targetEventStore\", new EventStore(this));\n    _defineProperty(this, \"gestureEventStores\", {});\n    _defineProperty(this, \"gestureTimeoutStores\", {});\n    _defineProperty(this, \"handlers\", {});\n    _defineProperty(this, \"config\", {});\n    _defineProperty(this, \"pointerIds\", new Set());\n    _defineProperty(this, \"touchIds\", new Set());\n    _defineProperty(this, \"state\", {\n      shared: {\n        shiftKey: false,\n        metaKey: false,\n        ctrlKey: false,\n        altKey: false\n      }\n    });\n    resolveGestures(this, handlers);\n  }\n  setEventIds(event) {\n    if (isTouch(event)) {\n      this.touchIds = new Set(touchIds(event));\n      return this.touchIds;\n    } else if ('pointerId' in event) {\n      if (event.type === 'pointerup' || event.type === 'pointercancel') this.pointerIds.delete(event.pointerId);else if (event.type === 'pointerdown') this.pointerIds.add(event.pointerId);\n      return this.pointerIds;\n    }\n  }\n  applyHandlers(handlers, nativeHandlers) {\n    this.handlers = handlers;\n    this.nativeHandlers = nativeHandlers;\n  }\n  applyConfig(config, gestureKey) {\n    this.config = parse(config, gestureKey, this.config);\n  }\n  clean() {\n    this._targetEventStore.clean();\n    for (const key of this.gestures) {\n      this.gestureEventStores[key].clean();\n      this.gestureTimeoutStores[key].clean();\n    }\n  }\n  effect() {\n    if (this.config.shared.target) this.bind();\n    return () => this._targetEventStore.clean();\n  }\n  bind(...args) {\n    const sharedConfig = this.config.shared;\n    const props = {};\n    let target;\n    if (sharedConfig.target) {\n      target = sharedConfig.target();\n      if (!target) return;\n    }\n    if (sharedConfig.enabled) {\n      for (const gestureKey of this.gestures) {\n        const gestureConfig = this.config[gestureKey];\n        const bindFunction = bindToProps(props, gestureConfig.eventOptions, !!target);\n        if (gestureConfig.enabled) {\n          const Engine = EngineMap.get(gestureKey);\n          new Engine(this, args, gestureKey).bind(bindFunction);\n        }\n      }\n\n      const nativeBindFunction = bindToProps(props, sharedConfig.eventOptions, !!target);\n      for (const eventKey in this.nativeHandlers) {\n        nativeBindFunction(eventKey, '',\n        event => this.nativeHandlers[eventKey](_objectSpread2(_objectSpread2({}, this.state.shared), {}, {\n          event,\n          args\n        })), undefined, true);\n      }\n    }\n\n    for (const handlerProp in props) {\n      props[handlerProp] = chain(...props[handlerProp]);\n    }\n\n    if (!target) return props;\n\n    for (const handlerProp in props) {\n      const {\n        device,\n        capture,\n        passive\n      } = parseProp(handlerProp);\n      this._targetEventStore.add(target, device, '', props[handlerProp], {\n        capture,\n        passive\n      });\n    }\n  }\n}\nfunction setupGesture(ctrl, gestureKey) {\n  ctrl.gestures.add(gestureKey);\n  ctrl.gestureEventStores[gestureKey] = new EventStore(ctrl, gestureKey);\n  ctrl.gestureTimeoutStores[gestureKey] = new TimeoutStore();\n}\nfunction resolveGestures(ctrl, internalHandlers) {\n  if (internalHandlers.drag) setupGesture(ctrl, 'drag');\n  if (internalHandlers.wheel) setupGesture(ctrl, 'wheel');\n  if (internalHandlers.scroll) setupGesture(ctrl, 'scroll');\n  if (internalHandlers.move) setupGesture(ctrl, 'move');\n  if (internalHandlers.pinch) setupGesture(ctrl, 'pinch');\n  if (internalHandlers.hover) setupGesture(ctrl, 'hover');\n}\nconst bindToProps = (props, eventOptions, withPassiveOption) => (device, action, handler, options = {}, isNative = false) => {\n  var _options$capture, _options$passive;\n  const capture = (_options$capture = options.capture) !== null && _options$capture !== void 0 ? _options$capture : eventOptions.capture;\n  const passive = (_options$passive = options.passive) !== null && _options$passive !== void 0 ? _options$passive : eventOptions.passive;\n  let handlerProp = isNative ? device : toHandlerProp(device, action, capture);\n  if (withPassiveOption && passive) handlerProp += 'Passive';\n  props[handlerProp] = props[handlerProp] || [];\n  props[handlerProp].push(handler);\n};\n\nconst RE_NOT_NATIVE = /^on(Drag|Wheel|Scroll|Move|Pinch|Hover)/;\nfunction sortHandlers(_handlers) {\n  const native = {};\n  const handlers = {};\n  const actions = new Set();\n  for (let key in _handlers) {\n    if (RE_NOT_NATIVE.test(key)) {\n      actions.add(RegExp.lastMatch);\n      handlers[key] = _handlers[key];\n    } else {\n      native[key] = _handlers[key];\n    }\n  }\n  return [handlers, native, actions];\n}\nfunction registerGesture(actions, handlers, handlerKey, key, internalHandlers, config) {\n  if (!actions.has(handlerKey)) return;\n  if (!EngineMap.has(key)) {\n    if (process.env.NODE_ENV === 'development') {\n      console.warn(`[@use-gesture]: You've created a custom handler that that uses the \\`${key}\\` gesture but isn't properly configured.\\n\\nPlease add \\`${key}Action\\` when creating your handler.`);\n    }\n    return;\n  }\n  const startKey = handlerKey + 'Start';\n  const endKey = handlerKey + 'End';\n  const fn = state => {\n    let memo = undefined;\n    if (state.first && startKey in handlers) handlers[startKey](state);\n    if (handlerKey in handlers) memo = handlers[handlerKey](state);\n    if (state.last && endKey in handlers) handlers[endKey](state);\n    return memo;\n  };\n  internalHandlers[key] = fn;\n  config[key] = config[key] || {};\n}\nfunction parseMergedHandlers(mergedHandlers, mergedConfig) {\n  const [handlers, nativeHandlers, actions] = sortHandlers(mergedHandlers);\n  const internalHandlers = {};\n  registerGesture(actions, handlers, 'onDrag', 'drag', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onWheel', 'wheel', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onScroll', 'scroll', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onPinch', 'pinch', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onMove', 'move', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onHover', 'hover', internalHandlers, mergedConfig);\n  return {\n    handlers: internalHandlers,\n    config: mergedConfig,\n    nativeHandlers\n  };\n}\n\nexport { Controller, parseMergedHandlers };\n"]},"metadata":{},"sourceType":"module"}